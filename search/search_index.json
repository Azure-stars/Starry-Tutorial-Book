{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230 Starry Tutorial Book","text":"<p>Starry \u662f\u57fa\u4e8e ArceOS \u7f16\u5199\u7684\u3001\u517c\u5bb9 Linux \u63a5\u53e3\u7684\u5b8f\u5185\u6838\u3002\u5b83\u62e5\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <ol> <li> <p>\u8de8\u5e73\u53f0\u652f\u6301\uff1a\u652f\u6301 x86_64/riscv64/aarch64/loongarch64 \u7b49\u591a\u79cd\u6307\u4ee4\u67b6\u6784\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728\u661f\u5149\u4e8c\u4ee3\u3001\u98de\u817e\u6d3e\u7b49\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\u4e0a\u3002</p> </li> <li> <p>\u5b89\u5168\u6027\uff1a\u5185\u6838\u5b8c\u5168\u4f7f\u7528 Rust \u8bed\u8a00\u7f16\u5199\uff0c\u63d0\u4f9b\u4e86\u5185\u5b58\u5b89\u5168\u3001\u7ebf\u7a0b\u5b89\u5168\u7b49\u591a\u79cd\u5b89\u5168\u4fdd\u969c\u3002</p> </li> <li> <p>Linux \u517c\u5bb9\uff1a\u5bf9\u5916\u63d0\u4f9b\u6807\u51c6\u7684 POSIX \u63a5\u53e3</p> </li> </ol>"},{"location":"roadmap/","title":"Starry \u5f00\u53d1\u89c4\u5212","text":""},{"location":"appendix/","title":"\u9644\u5f55","text":"<p>\u672c\u7ae0\u8282\u4ecb\u7ecd\u4e00\u4e9b\u5b9e\u7528\u7684\u9644\u5f55\u5185\u5bb9\u3002</p>"},{"location":"appendix/qemu-user/","title":"\u5229\u7528 qemu-linux-user \u8fd0\u884c\u548c\u8c03\u8bd5\u7a0b\u5e8f","text":"<p>\u672c\u7ae0\u8282\u7b80\u8981\u4ecb\u7ecd\u600e\u4e48\u5229\u7528 <code>qemu-linux-user</code> \u8fd0\u884c\u548c\u8c03\u8bd5\u4e0d\u540c\u67b6\u6784\u7684 <code>linux</code> \u7a0b\u5e8f\u3002</p>"},{"location":"appendix/qemu-user/#_1","title":"\u73af\u5883\u5b89\u88c5","text":"<p>\u5728\u5b9e\u9a8c\u73af\u5883\u914d\u7f6e\u4e2d\u5b89\u88c5 QEMU\u7684\u90e8\u5206\u5df2\u7ecf\u6307\u51fa\u4e86\u5b89\u88c5 qemu \u6240\u9700\u8981\u7684\u5de5\u5177\uff0c\u8bf7\u786e\u4fdd\u60a8\u5728\u5b89\u88c5 qemu \u7684\u65f6\u5019\u4e5f\u5b89\u88c5\u4e86\u5bf9\u5e94\u67b6\u6784\u7684 <code>linux-user</code>\uff0c\u4f8b\u5982 <code>riscv64-linux-user</code>\u3002</p>"},{"location":"appendix/qemu-user/#_2","title":"\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>qemu-riscv64</code> \u8fd0\u884c <code>riscv64</code> \u67b6\u6784\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u7c7b\u4f3c <code>strace</code> \u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u6307\u4ee4\uff1a</p> <pre><code>qemu-riscv64 -strace command\n</code></pre> <p><code>command</code> \u4e3a\u9700\u8981\u8fd0\u884c\u7684\u6307\u4ee4\uff0c\u4f8b\u5982\u5728\u5f53\u4e0b\u6587\u4ef6\u5939\u627e\u5230 <code>busybox</code> \u5e76\u8fd0\u884c\u5bf9\u5e94\u7684\u6307\u4ee4\u3002</p> <pre><code>qemu-riscv64 -strace ./busybox ls\n</code></pre>"},{"location":"arceos-modules/alloc/","title":"\u52a8\u6001\u5185\u5b58\u5206\u914d\u6a21\u5757","text":"<p>\u52a8\u6001\u5185\u5b58\u5206\u914d\u6a21\u5757\u662f\u4e00\u4e2a\u7528\u4e8e\u5728ArceOS\u4e2d\u8fdb\u884c\u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u6a21\u5757\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u3002</p>"},{"location":"arceos-modules/alloc/api/","title":"\u52a8\u6001\u5185\u5b58\u5206\u914d\u6a21\u5757\u63a5\u53e3","text":""},{"location":"arceos-modules/alloc/api/#axalloc","title":"axalloc \u5168\u5c40\u5185\u5b58\u5206\u914d\u5668\u6a21\u5757","text":""},{"location":"arceos-modules/alloc/api/#globalallocator","title":"GlobalAllocator \u5168\u5c40\u5185\u5b58\u5206\u914d\u5668\u7279\u6027","text":""},{"location":"arceos-modules/alloc/api/#1-new","title":"1. <code>new</code>","text":"<p><pre><code>/// Creates an empty [`GlobalAllocator`].\npub const fn new() -&gt; Self {\n    Self {\n        balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n        palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n    }\n}\n</code></pre> - \u529f\u80fd\uff1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 <code>GlobalAllocator</code> \u5b9e\u4f8b\uff0c\u521d\u59cb\u5316\u5b57\u8282\u5206\u914d\u5668 <code>balloc</code> \u548c\u9875\u5206\u914d\u5668 <code>palloc</code>\u3002 - \u7528\u4f8b\uff1a\u5728\u521d\u59cb\u5316\u5168\u5c40\u5206\u914d\u5668\u65f6\uff0c\u53ef\u80fd\u4f1a\u4f7f\u7528\u8be5\u63a5\u53e3\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u914d\u5668\u5b9e\u4f8b\u3002</p>"},{"location":"arceos-modules/alloc/api/#2-name","title":"2. <code>name</code>","text":"<p><pre><code>pub const fn name(&amp;self) -&gt; &amp;'static str {\n    cfg_if::cfg_if! {\n        if #[cfg(feature = \"slab\")] {\n            \"slab\"\n        } else if #[cfg(feature = \"buddy\")] {\n            \"buddy\"\n        } else if #[cfg(feature = \"tlsf\")] {\n            \"TLSF\"\n        }\n    }\n}\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5f53\u524d\u5168\u5c40\u5206\u914d\u5668\u7684\u540d\u79f0\u3002 - \u7528\u4f8b\uff1a\u5728\u9700\u8981\u83b7\u53d6\u5168\u5c40\u5206\u914d\u5668\u540d\u79f0\u7684\u5730\u65b9\u8c03\u7528\u8be5\u63a5\u53e3\uff0c\u4f8b\u5982\u5728\u65e5\u5fd7\u8bb0\u5f55\u6216\u8c03\u8bd5\u4fe1\u606f\u4e2d\u3002</p>"},{"location":"arceos-modules/alloc/api/#3-init","title":"3. <code>init</code>","text":"<p><pre><code>/// Initializes the allocator with the given region.\n///\n/// It firstly adds the whole region to the page allocator, then allocates\n/// a small region (32 KB) to initialize the byte allocator. Therefore,\n/// the given region must be larger than 32 KB.\npub fn init(&amp;self, start_vaddr: usize, size: usize) {\n    assert!(size &gt; MIN_HEAP_SIZE);\n    let init_heap_size = MIN_HEAP_SIZE;\n    self.palloc.lock().init(start_vaddr, size);\n    let heap_ptr = self\n        .alloc_pages(init_heap_size / PAGE_SIZE, PAGE_SIZE)\n        .unwrap();\n    self.balloc.lock().init(heap_ptr, init_heap_size);\n}\n</code></pre> - \u529f\u80fd\uff1a\u521d\u59cb\u5316\u5168\u5c40\u5206\u914d\u5668\uff0c\u9700\u8981\u63d0\u4f9b\u8d77\u59cb\u865a\u62df\u5730\u5740\u548c\u5927\u5c0f\u3002\u5b83\u9996\u5148\u5c06\u6574\u4e2a\u533a\u57df\u6dfb\u52a0\u5230\u9875\u5206\u914d\u5668\uff0c\u7136\u540e\u5206\u914d\u4e00\u4e2a\u5c0f\u533a\u57df\uff0832 KB\uff09\u6765\u521d\u59cb\u5316\u5b57\u8282\u5206\u914d\u5668\u3002\u56e0\u6b64\uff0c\u7ed9\u5b9a\u7684\u533a\u57df\u5fc5\u987b\u5927\u4e8e 32 KB\u3002 - \u7528\u4f8b\uff1a\u5728\u521d\u59cb\u5316\u5168\u5c40\u5206\u914d\u5668\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#4-add_memory","title":"4. <code>add_memory</code>","text":"<p><pre><code>pub fn add_memory(&amp;self, start_vaddr: usize, size: usize) -&gt; AllocResult {\n    self.balloc.lock().add_memory(start_vaddr, size)\n}\n</code></pre> - \u529f\u80fd\uff1a\u5411\u5168\u5c40\u5206\u914d\u5668\u6dfb\u52a0\u5185\u5b58\u533a\u57df\uff0c\u9700\u8981\u63d0\u4f9b\u8d77\u59cb\u865a\u62df\u5730\u5740\u548c\u5927\u5c0f\u3002 - \u7528\u4f8b\uff1a\u5728\u9700\u8981\u52a8\u6001\u6dfb\u52a0\u5185\u5b58\u533a\u57df\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#5-alloc","title":"5. <code>alloc</code>","text":"<p><pre><code>unsafe fn alloc(&amp;self, layout: Layout) -&gt; *mut u8 {\n    if let Ok(ptr) = GlobalAllocator::alloc(self, layout) {\n        ptr.as_ptr()\n    } else {\n        alloc::alloc::handle_alloc_error(layout)\n    }\n}\n</code></pre> - \u529f\u80fd\uff1a\u6839\u636e\u7ed9\u5b9a\u7684 <code>Layout</code> \u5206\u914d\u5185\u5b58\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5206\u914d\u5185\u5b58\u7684\u6307\u9488\u3002\u5982\u679c\u5206\u914d\u5931\u8d25\uff0c\u8c03\u7528 <code>handle_alloc_error</code> \u5904\u7406\u9519\u8bef\u3002 - \u7528\u4f8b\uff1a\u5728\u9700\u8981\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\u5730\u65b9\u8c03\u7528\u8be5\u63a5\u53e3\uff0c\u4f8b\u5982\u5728 <code>arceos/modules/axdma/src/dma.rs</code> \u4e2d\uff0c<code>DmaAllocator</code> \u7684 <code>alloc_coherent_bytes</code> \u65b9\u6cd5\u53ef\u80fd\u4f1a\u95f4\u63a5\u4f7f\u7528\u8be5\u63a5\u53e3\u8fdb\u884c\u5185\u5b58\u5206\u914d\u3002</p>"},{"location":"arceos-modules/alloc/api/#6-alloc_pages","title":"6. <code>alloc_pages</code>","text":"<p><pre><code>pub fn alloc_pages(&amp;self, num_pages: usize, align_pow2: usize) -&gt; AllocResult&lt;usize&gt; {\n    self.palloc.lock().alloc_pages(num_pages, align_pow2)\n}\n</code></pre> - \u529f\u80fd\uff1a\u5206\u914d\u6307\u5b9a\u6570\u91cf\u548c\u5bf9\u9f50\u8981\u6c42\u7684\u9875\u9762\uff0c\u8fd4\u56de\u5206\u914d\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740\u3002 - \u7528\u4f8b\uff1a\u5728\u9700\u8981\u5206\u914d\u9875\u9762\u7684\u5730\u65b9\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#7-dealloc","title":"7. <code>dealloc</code>","text":"<p><pre><code>unsafe fn dealloc(&amp;self, ptr: *mut u8, layout: Layout) {\n    GlobalAllocator::dealloc(self, NonNull::new(ptr).expect(\"dealloc null ptr\"), layout)\n}\n</code></pre> - \u529f\u80fd\uff1a\u91ca\u653e\u4e4b\u524d\u5206\u914d\u7684\u5185\u5b58\uff0c\u9700\u8981\u63d0\u4f9b\u6307\u5411\u5185\u5b58\u7684\u6307\u9488\u548c <code>Layout</code>\u3002 - \u7528\u4f8b\uff1a\u5728\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u5206\u914d\u7684\u5185\u5b58\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#8-dealloc_pages","title":"8. <code>dealloc_pages</code>","text":"<p><pre><code>/// [`alloc_pages`]: GlobalAllocator::alloc_pages\npub fn dealloc_pages(&amp;self, pos: usize, num_pages: usize) {\n    self.palloc.lock().dealloc_pages(pos, num_pages)\n}\n</code></pre> - \u529f\u80fd\uff1a\u91ca\u653e\u4e4b\u524d\u5206\u914d\u7684\u8fde\u7eed\u9875\u9762\uff0c\u9700\u8981\u63d0\u4f9b\u9875\u9762\u7684\u8d77\u59cb\u5730\u5740\u548c\u9875\u9762\u6570\u91cf\u3002 - \u7528\u4f8b\uff1a\u5728\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u5206\u914d\u7684\u8fde\u7eed\u9875\u9762\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#9-used_bytes","title":"9. <code>used_bytes</code>","text":"<p><pre><code>/// Returns the number of allocated bytes in the byte allocator.\npub fn used_bytes(&amp;self) -&gt; usize {\n    self.balloc.lock().used_bytes()\n}\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5b57\u8282\u5206\u914d\u5668\u4e2d\u5df2\u5206\u914d\u7684\u5b57\u8282\u6570\u3002 - \u7528\u4f8b\uff1a\u5728\u76d1\u63a7\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\uff0c\u4f8b\u5982\u5728\u5185\u5b58\u7edf\u8ba1\u5de5\u5177\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"arceos-modules/alloc/api/#10-used_pages","title":"10. <code>used_pages</code>","text":"<p><pre><code>/// Returns the number of allocated pages in the page allocator.\npub fn used_pages(&amp;self) -&gt; usize {\n    self.palloc.lock().used_pages()\n}\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u9875\u5206\u914d\u5668\u4e2d\u5df2\u5206\u914d\u7684\u9875\u9762\u6570\u3002 - \u7528\u4f8b\uff1a\u5728\u76d1\u63a7\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\uff0c\u4f8b\u5982\u5728\u5185\u5b58\u7edf\u8ba1\u5de5\u5177\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"arceos-modules/alloc/api/#11-vailable_bytes","title":"11. <code>vailable_bytes</code>","text":"<p><pre><code>/// Returns the number of available bytes in the byte allocator.\npub fn available_bytes(&amp;self) -&gt; usize {\n    self.balloc.lock().available_bytes()\n}\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5b57\u8282\u5206\u914d\u5668\u4e2d\u53ef\u7528\u7684\u5b57\u8282\u6570\u3002 - \u7528\u4f8b\uff1a\u5728\u76d1\u63a7\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\uff0c\u4f8b\u5982\u5728\u5185\u5b58\u7edf\u8ba1\u5de5\u5177\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"arceos-modules/alloc/api/#globalpage","title":"GlobalPage \u5168\u5c40\u9875\u9762\u7279\u6027","text":""},{"location":"arceos-modules/alloc/api/#1-alloc","title":"1. <code>alloc</code>","text":"<pre><code>pub fn alloc() -&gt; AxResult&lt;Self&gt;\n</code></pre> <ul> <li>\u529f\u80fd\uff1a\u5206\u914d\u6307\u5b9a\u6570\u91cf\u548c\u5bf9\u9f50\u8981\u6c42\u7684\u9875\u9762\uff0c\u8fd4\u56de\u5206\u914d\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740\u3002</li> <li>\u7528\u4f8b\uff1a\u5728\u9700\u8981\u5206\u914d\u9875\u9762\u7684\u5730\u65b9\u8c03\u7528\u8be5\u63a5\u53e3\uff0c\u4f8b\u5982\u5728 <code>arceos/modules/axhal/src/paging.rs</code> \u4e2d\uff0c<code>alloc_frame</code> \u51fd\u6570\u8c03\u7528\u8be5\u63a5\u53e3\u5206\u914d\u5355\u4e2a\u9875\u9762\u3002</li> </ul>"},{"location":"arceos-modules/alloc/api/#2-alloc_zero","title":"2. <code>alloc_zero</code>","text":"<pre><code>pub fn alloc_zero() -&gt; AxResult&lt;Self&gt;\n</code></pre> <ul> <li>\u529f\u80fd\uff1a\u5206\u914d\u6307\u5b9a\u6570\u91cf\u548c\u5bf9\u9f50\u8981\u6c42\u7684\u9875\u9762\uff0c\u5e76\u5c06\u5176\u5185\u5bb9\u6e05\u96f6\uff0c\u8fd4\u56de\u5206\u914d\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740\u3002</li> </ul>"},{"location":"arceos-modules/alloc/api/#3-alloc_contiguous","title":"3. <code>alloc_contiguous</code>","text":"<pre><code>pub fn alloc_contiguous(num_pages: usize, align_pow2: usize) -&gt; AxResult&lt;Self&gt;\n</code></pre> <ul> <li>\u529f\u80fd\uff1a\u5206\u914d\u8fde\u7eed\u7684\u6307\u5b9a\u6570\u91cf\u548c\u5bf9\u9f50\u8981\u6c42\u7684\u9875\u9762\uff0c\u8fd4\u56de\u5206\u914d\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740\u3002</li> </ul>"},{"location":"arceos-modules/alloc/api/#4-start_vaddr","title":"4. <code>start_vaddr</code>","text":"<p><pre><code>pub fn start_vaddr(&amp;self) -&gt; VirtAddr\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740\u3002</p>"},{"location":"arceos-modules/alloc/api/#5-start_paddr","title":"5. <code>start_paddr</code>","text":"<p><pre><code>pub fn start_paddr&lt;F&gt;(&amp;self, virt_to_phys: F) -&gt; PhysAddr\n</code></pre> - \u529f\u80fd\uff1a\u6839\u636e\u63d0\u4f9b\u7684\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u8f6c\u6362\u51fd\u6570\uff0c\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u3002</p>"},{"location":"arceos-modules/alloc/api/#6-size","title":"6. <code>size</code>","text":"<p><pre><code>pub fn size(&amp;self) -&gt; usize\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u5927\u5c0f\u3002</p>"},{"location":"arceos-modules/alloc/api/#7-as_ptr","title":"7. <code>as_ptr</code>","text":"<pre><code>pub fn as_ptr(&amp;self) -&gt; *const u8\n</code></pre> <ul> <li>\u529f\u80fd\uff1a\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u6307\u9488\u3002</li> </ul>"},{"location":"arceos-modules/alloc/api/#8-as_mut_ptr","title":"8. <code>as_mut_ptr</code>","text":"<p><pre><code>pub fn as_mut_ptr(&amp;self) -&gt; *mut u8\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u53ef\u53d8\u6307\u9488\u3002</p>"},{"location":"arceos-modules/alloc/api/#9-fill","title":"9. <code>fill</code>","text":"<p><pre><code>pub fn fill(&amp;mut self, byte: u8)\n</code></pre> - \u529f\u80fd\uff1a\u5c06\u5206\u914d\u7684\u9875\u9762\u7684\u5185\u5bb9\u586b\u5145\u4e3a\u6307\u5b9a\u7684\u503c\u3002</p>"},{"location":"arceos-modules/alloc/api/#10-zero","title":"10. <code>zero</code>","text":"<p><pre><code>pub fn zero(&amp;mut self)\n</code></pre> - \u529f\u80fd\uff1a\u5c06\u5206\u914d\u7684\u9875\u9762\u7684\u5185\u5bb9\u6e05\u96f6\u3002</p>"},{"location":"arceos-modules/alloc/api/#11-as_slice","title":"11. <code>as_slice</code>","text":"<p><pre><code>pub fn as_slice(&amp;self) -&gt; &amp;[u8]\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u5207\u7247\u3002</p>"},{"location":"arceos-modules/alloc/api/#12-as_mut_slice","title":"12. <code>as_mut_slice</code>","text":"<p><pre><code>pub fn as_mut_slice(&amp;mut self) -&gt; &amp;mut [u8]\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5206\u914d\u7684\u9875\u9762\u7684\u53ef\u53d8\u5207\u7247\u3002</p>"},{"location":"arceos-modules/alloc/api/#_2","title":"\u63a5\u53e3","text":""},{"location":"arceos-modules/alloc/api/#1-global_allocator","title":"1. <code>global_allocator</code>","text":"<p><pre><code>pub fn global_allocator() -&gt; &amp;'static GlobalAllocator {\n    &amp;GLOBAL_ALLOCATOR\n}\n</code></pre> - \u529f\u80fd\uff1a\u8fd4\u56de\u5168\u5c40\u5206\u914d\u5668\u7684\u5f15\u7528\u3002 - \u7528\u4f8b\uff1a\u5728\u9700\u8981\u5168\u5c40\u5206\u914d\u5668\u7684\u5730\u65b9\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#2-global_init","title":"2. <code>global_init</code>","text":"<p><pre><code>pub fn global_init(start_vaddr: usize, size: usize) {\n    debug!(\n        \"initialize global allocator at: [{:#x}, {:#x})\",\n        start_vaddr,\n        start_vaddr + size\n    );\n    GLOBAL_ALLOCATOR.init(start_vaddr, size);\n}\n</code></pre> - \u529f\u80fd\uff1a\u521d\u59cb\u5316\u5168\u5c40\u5206\u914d\u5668\uff0c\u9700\u8981\u63d0\u4f9b\u8d77\u59cb\u865a\u62df\u5730\u5740\u548c\u5927\u5c0f\u3002 - \u7528\u4f8b\uff1a\u5728\u521d\u59cb\u5316\u5168\u5c40\u5206\u914d\u5668\u65f6\u8c03\u7528\u8be5\u63a5\u53e3\u3002</p>"},{"location":"arceos-modules/alloc/api/#axdma","title":"axdma \u6a21\u5757","text":""},{"location":"arceos-modules/alloc/api/#dmaallocator-dma","title":"DmaAllocator DMA \u5206\u914d\u5668\u7279\u6027","text":""},{"location":"arceos-modules/alloc/api/#1-alloc_coherent","title":"1 <code>alloc_coherent</code>","text":"<p><pre><code>pub unsafe fn alloc_coherent(layout: Layout) -&gt; AllocResult&lt;DMAInfo&gt;;\n</code></pre> - \u529f\u80fd\uff1a\u6839\u636e\u7ed9\u5b9a\u7684 <code>Layout</code> \u5206\u914d\u8fde\u8d2f\u5185\u5b58\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a <code>DMAInfo</code> \u7ed3\u6784\u4f53\uff0c\u5305\u542b CPU \u5730\u5740\u548c\u603b\u7ebf\u5730\u5740\u3002</p>"},{"location":"arceos-modules/alloc/api/#2-dealloc_coherent","title":"2 <code>dealloc_coherent</code>","text":"<p><pre><code>pub unsafe fn dealloc_coherent(dma: DMAInfo, layout: Layout);\n</code></pre> - \u529f\u80fd\uff1a\u91ca\u653e\u4e4b\u524d\u901a\u8fc7 <code>alloc_coherent</code> \u5206\u914d\u7684\u8fde\u8d2f\u5185\u5b58\u3002</p>"},{"location":"arceos-modules/alloc/api/#3-phys_to_bus","title":"3 <code>phys_to_bus</code>","text":"<p><pre><code>pub const fn phys_to_bus(paddr: PhysAddr) -&gt; BusAddr {\n    BusAddr::new((paddr.as_usize() + axconfig::plat::PHYS_BUS_OFFSET) as u64)\n}\n</code></pre> - \u529f\u80fd\uff1a\u5c06\u7269\u7406\u5730\u5740\u8f6c\u6362\u4e3a\u603b\u7ebf\u5730\u5740\uff0c\u901a\u8fc7\u5728\u7269\u7406\u5730\u5740\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\u6765\u5b9e\u73b0\u3002</p>"},{"location":"arceos-modules/alloc/api/#4-virt_to_bus","title":"4 <code>virt_to_bus</code>","text":"<p><pre><code>const fn virt_to_bus(addr: VirtAddr) -&gt; BusAddr {\n    let paddr = virt_to_phys(addr);\n    phys_to_bus(paddr)\n}\n</code></pre> - \u529f\u80fd\uff1a\u5c06\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u603b\u7ebf\u5730\u5740\uff0c\u5148\u5c06\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u518d\u8c03\u7528 <code>phys_to_bus</code> \u65b9\u6cd5\u5c06\u7269\u7406\u5730\u5740\u8f6c\u6362\u4e3a\u603b\u7ebf\u5730\u5740\u3002</p>"},{"location":"arceos-modules/config/","title":"ArceOS \u914d\u7f6e\u4e0e\u6784\u5efa\u7cfb\u7edf","text":"<p>ArceOS \u7684\u914d\u7f6e\u7cfb\u7edf\u4e3b\u8981\u5206\u4e3a\u4e24\u6761\u4e3b\u7ebf\uff1a</p> <ol> <li>\u6a21\u5757\u914d\u7f6e\u7cfb\u7edf\uff1a\u901a\u8fc7\u5728 <code>Cargo.toml</code> \u4e2d\u914d\u7f6e\u6a21\u5757\u4f9d\u8d56\u6765\u5b9e\u73b0\uff0c\u51b3\u5b9a\u4e86\u54ea\u4e9b\u6a21\u5757\u4f1a\u88ab\u7f16\u8bd1\u548c\u5305\u542b\u5728\u6700\u7ec8\u7684\u7cfb\u7edf\u4e2d\u3002</li> <li>\u5e73\u53f0\u914d\u7f6e\u7cfb\u7edf\uff1a\u901a\u8fc7 <code>axconfig</code> \u5de5\u5177\u6765\u7ba1\u7406\u548c\u751f\u6210\u5e73\u53f0\u914d\u7f6e\uff0c\u51b3\u5b9a\u4e86\u5185\u6838\u7684\u8fd0\u884c\u5e73\u53f0\u3001\u5185\u5b58\u5e03\u5c40\u548c\u8bbe\u5907\u9a71\u52a8\u7b49\u3002</li> </ol>"},{"location":"arceos-modules/config/#_1","title":"\u6a21\u5757\u914d\u7f6e\u7cfb\u7edf","text":"<p>\u6a21\u5757\u914d\u7f6e\u901a\u8fc7\u5728 <code>Cargo.toml</code> \u6587\u4ef6\u4e2d\u6307\u5b9a\u4f9d\u8d56\u6765\u5b9e\u73b0\uff0cArceOS \u4e2d\u7684\u6bcf\u4e2a\u6a21\u5757\u90fd\u6709\u81ea\u5df1\u7684\u914d\u7f6e\u9009\u9879\uff0c\u4f46\u662f\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6a21\u5757\u4e0e\u6a21\u5757\u4e4b\u95f4\u5b58\u5728\u7740\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f8b\u5982\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757 <code>axfs</code> \u4f9d\u8d56\u4e8e\u8bbe\u5907\u9a71\u52a8\u6a21\u5757 <code>axdriver</code> \u7684 <code>virtio-blk</code> \u4f5c\u4e3a\u5757\u8bbe\u5907\u3002</p> <p>\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\uff0c\u5982\u679c\u7528\u6237\u9700\u8981\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u540c\u65f6\u542f\u7528\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u7684 <code>virtio-blk</code> \u529f\u80fd\u3002</p> <p>\u663e\u7136\uff0c\u8fd9\u6837\u7684\u4f9d\u8d56\u5173\u7cfb\u4f1a\u5bfc\u81f4\u7528\u6237\u9700\u8981\u4e86\u89e3\u6bcf\u4e2a\u6a21\u5757\u7684\u4f9d\u8d56\u5173\u7cfb\u624d\u80fd\u6b63\u786e\u5730\u914d\u7f6e\u5185\u6838\u5e94\u7528\u3002</p> <p>\u56e0\u6b64 ArceOS \u63d0\u4f9b\u4e86 <code>axfeat</code> \u8fd9\u6837\u4e00\u4e2a Feature \u914d\u7f6e\u6a21\u5757\u6765\u7ba1\u7406\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u6838\u5fc3\u601d\u60f3\u5728\u4e8e\uff1a\u5c06\u7528\u6237\u7684\u89c6\u89d2\u4ece\u914d\u7f6e\u6a21\u5757\u8f6c\u5411\u4e86\u914d\u7f6e\u9700\u8981\u4f7f\u7528\u7684\u529f\u80fd\u3002</p> <p><code>axfeat</code> \u5185\u90e8\u6ca1\u6709\u4efb\u4f55\u7684 rust \u4ee3\u7801\uff0c\u4e3b\u8981\u4f7f\u7528 <code>Cargo.toml</code> \u4e2d\u7684 <code>features</code> \u5b57\u6bb5\u6765\u5b9a\u4e49\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1a</p> <pre><code>[features]\ndefault = []\n\n# Multicore\nsmp = [\"axhal/smp\", \"axruntime/smp\", \"axtask?/smp\", \"kspin/smp\"]\n\n# Floating point/SIMD\nfp_simd = [\"axhal/fp_simd\"]\n\n# Interrupts\nirq = [\"axhal/irq\", \"axruntime/irq\", \"axtask?/irq\"]\n\n# Memory\nalloc = [\"axalloc\", \"axruntime/alloc\"]\nalloc-tlsf = [\"axalloc/tlsf\"]\nalloc-slab = [\"axalloc/slab\"]\nalloc-buddy = [\"axalloc/buddy\"]\npage-alloc-64g = [\"axalloc/page-alloc-64g\"] # up to 64G memory capacity\npage-alloc-4g = [\"axalloc/page-alloc-4g\"] # up to 4G memory capacity\npaging = [\"alloc\", \"axhal/paging\", \"axruntime/paging\"]\ntls = [\"alloc\", \"axhal/tls\", \"axruntime/tls\", \"axtask?/tls\"]\ndma = [\"alloc\", \"paging\"]\n\n# Multi-threading and scheduler\nmultitask = [\"alloc\", \"axtask/multitask\", \"axsync/multitask\", \"axruntime/multitask\"]\nsched_fifo = [\"axtask/sched_fifo\"]\nsched_rr = [\"axtask/sched_rr\", \"irq\"]\nsched_cfs = [\"axtask/sched_cfs\", \"irq\"]\n\n# File system\nfs = [\"alloc\", \"paging\", \"axdriver/virtio-blk\", \"dep:axfs\", \"axruntime/fs\"] # TODO: try to remove \"paging\"\nmyfs = [\"axfs?/myfs\"]\nlwext4_rs = [\"axfs/lwext4_rs\"]\n\n# Networking\nnet = [\"alloc\", \"paging\", \"axdriver/virtio-net\", \"dep:axnet\", \"axruntime/net\"]\n\n# Display\ndisplay = [\"alloc\", \"paging\", \"axdriver/virtio-gpu\", \"dep:axdisplay\", \"axruntime/display\"]\n\n# Real Time Clock (RTC) Driver.\nrtc = [\"axhal/rtc\", \"axruntime/rtc\"]\n\n# Device drivers\nbus-mmio = [\"axdriver?/bus-mmio\"]\nbus-pci = [\"axdriver?/bus-pci\"]\ndriver-ramdisk = [\"axdriver?/ramdisk\", \"axfs?/use-ramdisk\"]\ndriver-ixgbe = [\"axdriver?/ixgbe\"]\ndriver-fxmac = [\"axdriver?/fxmac\"] # fxmac ethernet driver for PhytiumPi\ndriver-bcm2835-sdhci = [\"axdriver?/bcm2835-sdhci\"]\n\n# Logging\nlog-level-off = [\"axlog/log-level-off\"]\nlog-level-error = [\"axlog/log-level-error\"]\nlog-level-warn = [\"axlog/log-level-warn\"]\nlog-level-info = [\"axlog/log-level-info\"]\nlog-level-debug = [\"axlog/log-level-debug\"]\nlog-level-trace = [\"axlog/log-level-trace\"]\n</code></pre> <p>\u4ee5\u4e0a\u7684 Feature \u914d\u7f6e\u53ef\u4ee5\u5212\u5206\u6210\u4ee5\u4e0b\u4e03\u4e2a\u90e8\u5206\uff1a</p> <ol> <li> <p>CPU\uff1a</p> <ul> <li><code>smp</code>: \u542f\u7528\u5bf9\u79f0\u591a\u5904\u7406\uff08SMP\uff09\u652f\u6301</li> <li><code>fp_simd</code>: \u542f\u7528\u6d6e\u70b9\u548c\u5355\u6307\u4ee4\u591a\u6570\u636e\uff08SIMD\uff09\u652f\u6301</li> </ul> </li> <li> <p>\u4e2d\u65ad\uff1a</p> <ul> <li><code>irq</code>: \u542f\u7528\u4e2d\u65ad\u5904\u7406\u652f\u6301</li> </ul> </li> <li> <p>\u5185\u5b58\uff1a</p> <ul> <li><code>alloc</code>: \u542f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d<ul> <li><code>alloc-tlsf</code>: \u4f7f\u7528 TLSF \u5206\u914d\u5668</li> <li><code>alloc-slab</code>: \u4f7f\u7528 slab \u5206\u914d\u5668</li> <li><code>alloc-buddy</code>: \u4f7f\u7528\u4f19\u4f34\u7cfb\u7edf\u5206\u914d\u5668</li> </ul> </li> <li><code>paging</code>: \u542f\u7528\u9875\u8868\u64cd\u4f5c</li> <li><code>tls</code>: \u542f\u7528\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\uff08thread-local\uff09</li> </ul> </li> <li> <p>\u4efb\u52a1\u7ba1\u7406\uff1a</p> <ul> <li><code>multitask</code>: \u542f\u7528\u591a\u7ebf\u7a0b\u652f\u6301<ul> <li><code>sched_fifo</code>: \u4f7f\u7528\u5148\u5165\u5148\u51fa\uff08FIFO\uff09\u534f\u4f5c\u8c03\u5ea6\u5668</li> <li><code>sched_rr</code>: \u4f7f\u7528\u8f6e\u8be2\uff08Round-robin\uff09\u62a2\u5360\u5f0f\u8c03\u5ea6\u5668</li> <li><code>sched_cfs</code>: \u4f7f\u7528\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\uff08CFS\uff09\u62a2\u5360\u5f0f\u8c03\u5ea6\u5668</li> </ul> </li> </ul> </li> <li> <p>\u4e0a\u5c42\u534f\u8bae\u6808\uff1a</p> <ul> <li><code>fs</code>: \u542f\u7528\u6587\u4ef6\u7cfb\u7edf\u652f\u6301<ul> <li><code>myfs</code>: \u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6587\u4ef6\u7cfb\u7edf\u4ee5\u8986\u76d6\u9ed8\u8ba4\u8bbe\u7f6e</li> </ul> </li> <li><code>net</code>: \u542f\u7528\u7f51\u7edc\u652f\u6301</li> <li><code>display</code>: \u542f\u7528\u56fe\u5f62\u652f\u6301</li> </ul> </li> <li> <p>\u8bbe\u5907\u9a71\u52a8\uff1a</p> <ul> <li><code>bus-mmio</code>: \u4f7f\u7528\u8bbe\u5907\u6811\u63a2\u6d4b\u6240\u6709\u5185\u5b58\u6620\u5c04 I/O\uff08MMIO\uff09\u8bbe\u5907</li> <li><code>bus-pci</code>: \u4f7f\u7528 PCI \u603b\u7ebf\u63a2\u6d4b\u6240\u6709 PCI \u8bbe\u5907</li> <li><code>driver-ramdisk</code>: \u4f7f\u7528 RAM \u78c1\u76d8\u6a21\u62df\u5757\u8bbe\u5907</li> <li><code>driver-ixgbe</code>: \u542f\u7528\u82f1\u7279\u5c14 82599 10Gbit \u7f51\u5361\u9a71\u52a8</li> <li><code>driver-bcm2835-sdhci</code>: \u542f\u7528 BCM2835 SDHCI \u9a71\u52a8\uff08\u6811\u8393\u6d3e SD \u5361\uff09</li> </ul> </li> <li> <p>\u65e5\u5fd7\u7cfb\u7edf</p> <ul> <li><code>log-level-off</code>: \u7981\u7528\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55</li> <li><code>log-level-error</code>\uff1a\u4ec5\u4fdd\u7559 error \u7ea7\u522b\u53ca\u4ee5\u4e0a\u7684\u65e5\u5fd7\u8bb0\u5f55</li> <li><code>log-level-warn</code>\uff1a\u4ec5\u4fdd\u7559 warn \u7ea7\u522b\u53ca\u4ee5\u4e0a\u7684\u65e5\u5fd7\u8bb0\u5f55</li> <li><code>log-level-info</code>\uff1a\u4ec5\u4fdd\u7559 info \u7ea7\u522b\u53ca\u4ee5\u4e0a\u7684\u65e5\u5fd7\u8bb0\u5f55</li> <li><code>log-level-debug</code>\uff1a\u4ec5\u4fdd\u7559 debug \u7ea7\u522b\u53ca\u4ee5\u4e0a\u7684\u65e5\u5fd7\u8bb0\u5f55</li> <li><code>log-level-trace</code>: \u4ec5\u4fdd\u7559 trace \u7ea7\u522b\u53ca\u4ee5\u4e0a\u7684\u65e5\u5fd7\u8bb0\u5f55</li> </ul> </li> </ol>"},{"location":"arceos-modules/config/#_2","title":"\u5e73\u53f0\u914d\u7f6e\u7cfb\u7edf","text":"<p>ArceOS \u652f\u6301\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\uff0c\u4e0d\u540c\u5e73\u53f0\u6709\u7740\u4e0d\u540c\u7684\u542f\u52a8\u6d41\u7a0b\u3001\u5904\u7406\u5668\u72b6\u6001\u4ee5\u53ca\u5e73\u53f0\u76f8\u5173\u8bbe\u5907\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u7cfb\u7edf\u6765\u7ba1\u7406\u8fd9\u4e9b\u5dee\u5f02\u3002\u57fa\u4e8e\u8fd9\u6837\u7684\u9700\u6c42\uff0cArceOS \u7684\u5e73\u53f0\u914d\u7f6e\u7cfb\u7edf\u7684\u76ee\u6807\u5982\u4e0b\uff1a</p> <ol> <li>\u914d\u7f6e\u6587\u4ef6\u5e94\u6613\u4e8e\u7406\u89e3\u548c\u4fee\u6539\uff0c\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\uff08\u7279\u5b9a\u5e73\u53f0\u914d\u7f6e\u6587\u4ef6\uff09</li> <li>\u914d\u7f6e\u4fe1\u606f\u8981\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\uff0c\u4ee5\u4fbf\u5728\u5185\u6838\u542f\u52a8\u65f6\u80fd\u591f\u6b63\u786e\u5730\u8bc6\u522b\u548c\u4f7f\u7528\uff08axconfig \u6a21\u5757\uff09</li> <li>\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a Arch \u548c Platform \u6765\u9009\u62e9\u7f16\u8bd1\u76ee\u6807\u5e73\u53f0\uff0c\u5e76\u4e14\u7075\u6d3b\u914d\u7f6e\uff08Makefile\uff09</li> </ol> <p></p> <p>\u4ece\u5168\u5c40\u7684\u89c6\u89d2\u4e0a\u770b ArceOS \u4e3a\u6211\u4eec\u6784\u5efa\u4e86\u5982\u4e0a\u7684\u914d\u7f6e\u7cfb\u7edf\uff1a</p> <p>\u53f3\u534a\u90e8\u5206\u662f\u5185\u6838\u7f16\u8bd1\u524d\u9636\u6bb5\uff0c\u7528\u6237\u901a\u8fc7\u6307\u5b9a <code>Arch</code> \u548c <code>Platform</code> \u6765\u8fd0\u884c <code>make deconfig</code>\uff0c\u8fd9\u4f1a\u5c06\u7279\u5b9a\u5e73\u53f0\u914d\u7f6e\u6587\u4ef6\u590d\u5236\u5230 <code>.axconfig.toml</code> \u4e2d\uff0c\u4e3a\u63a5\u4e0b\u6765\u7684\u7f16\u8bd1\u63d0\u4f9b\u57fa\u7840\u3002</p> <p>\u5de6\u534a\u90e8\u5206\u662f\u5185\u6838\u7f16\u8bd1\u540e\u9636\u6bb5\uff0c\u901a\u8fc7 <code>axconfig</code> \u6a21\u5757\u5c06 <code>.axconfig</code> \u914d\u7f6e\u6587\u4ef6\u8f6c\u6362\u4e3a\u9759\u6001\u7684 rust \u6587\u4ef6\uff0c\u7531\u6b64\u914d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u8fdb\u5165\u5185\u6838\u73af\u5883\u4ee5\u63d0\u4f9b\u7ed9 ArceOS \u4e2d\u7684\u5176\u4ed6\u6a21\u5757\u8fdb\u884c\u8bfb\u53d6\u3002</p>"},{"location":"arceos-modules/config/#_3","title":"\u7279\u5b9a\u5e73\u53f0\u914d\u7f6e\u6587\u4ef6","text":"<p>ArceOS \u7684\u5e73\u53f0\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e <code>configs/platforms</code> \u76ee\u5f55\u4e0b\uff0c\u6bcf\u4e2a\u5e73\u53f0\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u4e9b\u914d\u7f6e\u4e2d\u5305\u542b\uff1a</p> <ul> <li><code>arch</code>\uff1a\u67b6\u6784\u6807\u8bc6\u7b26\uff0c\u5982 <code>x86_64</code>\u3001<code>riscv64</code> \u7b49</li> <li><code>platform</code>\uff1a\u5e73\u53f0\u6807\u8bc6\u7b26\uff0c\u5982 <code>x86-pc</code>\u3001<code>riscv64-qemu-virt</code> \u7b49</li> <li><code>plat</code>\uff1a\u5e73\u53f0\u7279\u5b9a\u914d\u7f6e\uff0c\u5982\u5185\u6838\u5730\u5740\u7a7a\u95f4\u3001\u7269\u7406\u5185\u5b58\u5927\u5c0f\u7b49</li> <li><code>devices</code>\uff1a\u8bbe\u5907\u76f8\u5173\u914d\u7f6e\uff0c\u5982 MMIO \u533a\u57df\u3001VirtIO \u8bbe\u5907\u7b49</li> </ul> <p>\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u5e73\u53f0\u914d\u7f6e\uff0c\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 TOML \u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u901a\u5e38\u4ee5 <code>&lt;arch&gt;-&lt;platform&gt;.toml</code> \u7684\u683c\u5f0f\u547d\u540d\u3002</p> <p>\u4e0b\u9762\u4ee5 <code>riscv64-qemu-virt.toml</code> \u4f5c\u4e3a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u8fdb\u884c\u8bf4\u660e\uff1a</p> <pre><code># Architecture identifier.\narch = \"riscv64\"                    # str\n# Platform identifier.\nplatform = \"riscv64-qemu-virt\"      # str\n\n#\n# Platform configs\n#\n[plat]\n# Platform family.\nfamily = \"riscv64-qemu-virt\"        # str\n\n# Base address of the whole physical memory.\nphys-memory-base = 0x8000_0000      # uint\n# Size of the whole physical memory. (128M)\nphys-memory-size = 0x800_0000       # uint\n# Base physical address of the kernel image.\nkernel-base-paddr = 0x8020_0000     # uint\n# Base virtual address of the kernel image.\nkernel-base-vaddr = \"0xffff_ffc0_8020_0000\"     # uint\n# Linear mapping offset, for quick conversions between physical and virtual\n# addresses.\nphys-virt-offset = \"0xffff_ffc0_0000_0000\"      # uint\n# Offset of bus address and phys address. some boards, the bus address is\n# different from the physical address.\nphys-bus-offset = 0                             # uint\n# Kernel address space base.\nkernel-aspace-base = \"0xffff_ffc0_0000_0000\"    # uint\n# Kernel address space size.\nkernel-aspace-size = \"0x0000_003f_ffff_f000\"    # uint\n\n#\n# Device specifications\n#\n[devices]\n# MMIO regions with format (`base_paddr`, `size`).\nmmio-regions = [\n    [0x0010_1000, 0x1000],          # RTC\n    [0x0c00_0000, 0x21_0000],       # PLIC\n    [0x1000_0000, 0x1000],          # UART\n    [0x1000_1000, 0x8000],          # VirtIO\n    [0x3000_0000, 0x1000_0000],     # PCI config space\n    [0x4000_0000, 0x4000_0000],     # PCI memory ranges (ranges 1: 32-bit MMIO space)\n]                                   # [(uint, uint)]\n# VirtIO MMIO regions with format (`base_paddr`, `size`).\nvirtio-mmio-regions = [\n    [0x1000_1000, 0x1000],\n    [0x1000_2000, 0x1000],\n    [0x1000_3000, 0x1000],\n    [0x1000_4000, 0x1000],\n    [0x1000_5000, 0x1000],\n    [0x1000_6000, 0x1000],\n    [0x1000_7000, 0x1000],\n    [0x1000_8000, 0x1000],\n] # [(uint, uint)]\n# Base physical address of the PCIe ECAM space.\npci-ecam-base = 0x3000_0000 # uint\n# End PCI bus number (`bus-range` property in device tree).\npci-bus-end = 0xff # uint\n# PCI device memory ranges (`ranges` property in device tree).\npci-ranges = [\n    [0x0300_0000, 0x1_0000],        # PIO space\n    [0x4000_0000, 0x4000_0000],     # 32-bit MMIO space\n    [0x4_0000_0000, 0x4_0000_0000], # 64-bit MMIO space\n]                                   # [(uint, uint)]\n\n# Timer interrupt frequency in Hz.\ntimer-frequency = 10_000_000        # uint\n\n# rtc@101000 {\n#     interrupts = &lt;0x0b&gt;;\n#     interrupt-parent = &lt;0x03&gt;;\n#     reg = &lt;0x00 0x101000 0x00 0x1000&gt;;\n#     compatible = \"google,goldfish-rtc\";\n# };\n# RTC (goldfish) Address\nrtc-paddr = 0x10_1000               # uint\n</code></pre> <p>\u5f53\u7136\uff0c\u4ee5\u4e0a\u662f <code>riscv64-qemu-virt</code> \u5e73\u53f0\u4e0b\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5982\u679c\u5f00\u53d1\u8005\u6709\u989d\u5916\u7684\u9700\u8981\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5185\u90e8\u7684\u914d\u7f6e\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u4f8b\u5982\uff0c\u5728\u8f83\u4e3a\u590d\u6742\u7684\u60c5\u5f62\u4e0b\uff0c\u9ed8\u8ba4\u7684 <code>phys-memory-size</code> \u4ec5 128MB\uff0c\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u90a3\u4e48\u5f00\u53d1\u8005\u53ef\u4ee5\u5c06\u5176\u6269\u5927\u4e3a <code>0x1000_0000</code>\uff08256MB\uff09\u4ee5\u9002\u5e94\u66f4\u5927\u7684\u5185\u5b58\u9700\u6c42\u3002</p> <p>\u4e0b\u9762\u662f\u5bf9\u8be5\u914d\u7f6e\u6587\u4ef6\u8fdb\u4e00\u6b65\u7684\u8bf4\u660e\uff1a</p> \u914d\u7f6e\u9879 \u63cf\u8ff0 \u67b6\u6784\u4fe1\u606f arch \u67b6\u6784\u6807\u8bc6\u7b26\uff0c\u4e3a <code>riscv64</code> platform \u5e73\u53f0\u6807\u8bc6\u7b26\uff0c\u4e3a <code>riscv64-qemu-virt</code> \u5e73\u53f0\u914d\u7f6e family \u5e73\u53f0\u6807\u8bc6\u7b26\uff0c\u4e3a <code>riscv64-qemu-virt</code> phys-memory-base \u7269\u7406\u5185\u5b58\u7684\u57fa\u5730\u5740\uff0c\u4e3a <code>0x8000_0000</code> phys-memory-size \u7269\u7406\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u4e3a <code>0x800_0000</code>\uff08128MB\uff09 kernel-base-paddr kernel \u7684\u7269\u7406\u57fa\u5730\u5740\uff0c\u4e3a <code>0x8020_0000</code> kernel-base-vaddr kernel \u7684\u865a\u62df\u57fa\u5730\u5740\uff0c\u4e3a <code>0xffff_ffc0_8020_0000</code> phys-virt-offset \u7269\u7406\u5730\u5740\u4e0e\u865a\u62df\u5730\u5740\u7684\u8f6c\u6362\u504f\u79fb\u91cf\uff0c\u4e3a <code>0xffff_ffc0_0000_0000</code> phys-bus-offset \u7269\u7406\u5730\u5740\u4e0e\u603b\u7ebf\u5730\u5740\u7684\u504f\u79fb\u91cf\uff0c\u4e3a <code>0</code> kernel-aspace-base \u5185\u6838\u5730\u5740\u7a7a\u95f4\u7684\u57fa\u5730\u5740\uff0c\u4e3a <code>0xffff_ffc0_0000_0000</code> kernel-aspace-size \u5185\u6838\u5730\u5740\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u4e3a <code>0x0000_003f_ffff_f000</code> \u8bbe\u5907\u914d\u7f6e mmio-regions MMIO \u533a\u57df\u5217\u8868\uff0c\u683c\u5f0f\u4e3a <code>[\u57fa\u5730\u5740, \u5927\u5c0f]</code>\uff0c\u5305\u62ec\uff1a \u00a0\u00a0\u00a0\u00a0RTC \u5b9e\u65f6\u65f6\u949f\uff0c\u7528\u4e8e\u63d0\u4f9b\u65f6\u95f4\u4fe1\u606f <code>[0x0010_1000, 0x1000]</code> \u00a0\u00a0\u00a0\u00a0PLIC \u5e73\u53f0\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668 <code>[0x0c00_0000, 0x21_0000]</code> \u00a0\u00a0\u00a0\u00a0UART \u4e32\u884c\u901a\u4fe1 <code>[0x1000_0000, 0x1000]</code> \u00a0\u00a0\u00a0\u00a0VirtIO \u865a\u62df\u5316\u8bbe\u5907\u63a5\u53e3 <code>[0x1000_1000, 0x8000]</code> \u00a0\u00a0\u00a0\u00a0PCI config space PCI\u914d\u7f6e\u7a7a\u95f4\uff0c\u7528\u4e8e\u5b58\u50a8 PCI \u8bbe\u5907\u7684\u914d\u7f6e\u4fe1\u606f <code>[0x3000_0000, 0x1000_0000]</code> \u00a0\u00a0\u00a0\u00a0PCI memory ranges PCI \u8bbe\u5907\u7684 32 \u4f4d MMIO \u7a7a\u95f4 <code>[0x4000_0000, 0x4000_0000]</code> virtio-mmio-regions VirtIO MMIO \u533a\u57df\u5217\u8868\uff0c\u683c\u5f0f\u4e3a <code>[\u57fa\u5730\u5740, \u5927\u5c0f]</code>\uff0c\u5305\u62ec\uff1a \u00a0\u00a0\u00a0\u00a0VirtIO 1 <code>[0x1000_1000, 0x1000]</code> \u00a0\u00a0\u00a0\u00a0VirtIO ... <code>[0x1000_N000, 0x1000]</code> \u00a0\u00a0\u00a0\u00a0VirtIO 8 <code>[0x1000_8000, 0x1000]</code> pci-ecam-base PCIe ECAM \u7a7a\u95f4\u7684\u57fa\u5730\u5740\uff0c\u4e3a <code>0x3000_0000</code> pci-bus-end \u6700\u5927 PCI \u603b\u7ebf\u53f7\uff0c\u4e3a <code>0xff</code> pci-ranges PCI \u8bbe\u5907\u5185\u5b58\u8303\u56f4\u5217\u8868\uff0c\u683c\u5f0f\u4e3a <code>[\u57fa\u5730\u5740, \u5927\u5c0f]</code>\uff0c\u5305\u62ec\uff1a \u00a0\u00a0\u00a0\u00a0PIO space <code>[0x0300_0000, 0x1_0000]</code> \u00a0\u00a0\u00a0\u00a032-bit MMIO space <code>[0x4000_0000, 0x4000_0000]</code> \u00a0\u00a0\u00a0\u00a064-bit MMIO space <code>[0x4_0000_0000, 0x4_0000_0000]</code> timer-frequency \u5b9a\u65f6\u5668\u4e2d\u65ad\u9891\u7387\uff0c\u4e3a <code>10_000_000</code> Hz rtc-paddr RTC \u8bbe\u5907\u7684\u7269\u7406\u5730\u5740\uff0c\u4e3a <code>0x10_1000</code>"},{"location":"arceos-modules/config/#axconfig","title":"axconfig \u6a21\u5757","text":"<p><code>axconfig</code> \u6a21\u5757\u5728\u5e73\u53f0\u914d\u7f6e\u4e2d\u626e\u6f14\u4e86\u6865\u7684\u89d2\u8272\uff0c\u7528\u6765\u5904\u7406\u914d\u7f6e\u6587\u4ef6\uff08toml\uff09\u5230\u5185\u6838\u4ee3\u7801\uff08rust\uff09\u7684\u8f6c\u6362\u3002\u5185\u90e8\u7684\u5b9e\u73b0\u4e3b\u8981\u4f9d\u8d56\u4e8e axconfig-gen \u5143\u4ef6\u7684 <code>include_configs!</code> \u5b8f\u6765\u5b9e\u73b0\u5728\u7f16\u8bd1\u671f\u7684\u5b8c\u6210\u914d\u7f6e\u6587\u4ef6\u8f6c\u6362\u3002</p> <pre><code>/// modules/axconfig/src/lib.rs\n#![no_std]\n\naxconfig_gen_macros::include_configs!(env!(\"AX_CONFIG_PATH\"));\n</code></pre> <p>\u73af\u5883\u53d8\u91cf <code>AX_CONFIG_PATH</code> \u901a\u5e38\u4e3a\u9879\u76ee\u76ee\u5f55\u4e2d\u7684 <code>.axconfig.toml</code>\uff0c\u8be5\u6587\u4ef6\u5305\u542b\u4e86\u7528\u6237\u6307\u5b9a\u7684\u5e73\u53f0\u914d\u7f6e\uff0c\u4f8b\u5982 <code>make ARCH=riscv64 defconfig</code> \u5c06\u4f1a\u6765\u81ea\u4e8e <code>riscv64-qemu-virt.toml</code> \u6587\u4ef6\u3002</p> <p>\u5bf9\u4e8e <code>axconfig_gen_macros::include_configs!</code> \u5b8f\uff0cArceOS \u4e3a\u4e86\u7b80\u5316\u914d\u7f6e\u7684\u96be\u5ea6\uff0c\u5efa\u7acb\u4e86 toml \u5230 rust \u7684\u6620\u5c04\u5173\u7cfb\uff0c\u57fa\u672c\u89c4\u5219\u5982\u4e0b\uff1a</p> \u6620\u5c04\u5185\u5bb9 TOML Rust \u5355\u884c\u6ce8\u91ca <code># \u6ce8\u91ca\u5185\u5bb9</code> <code>/// \u6ce8\u91ca\u5185\u5bb9</code> \u6a21\u5757\u5b9a\u4e49 <code>[plat]</code> <code>pub mod plat { ... }</code> \u5b57\u7b26\u4e32\u5e38\u91cf <code>key = \"value\"</code> <code>pub const KEY: &amp;str = \"value\";</code> \u6574\u6570\u5e38\u91cf <code>key = 0x1234_5678</code> <code>pub const KEY: usize = 0x1234_5678;</code> \u6570\u7ec4\u5e38\u91cf <code>key =[</code> <code>[0x1234, 0x5678],</code> <code>[0x9abc, 0xdef0]</code> <code>]</code> <code>pub const KEY: &amp;[(usize, usize)] = &amp;[</code> <code>(0x1234, 0x5678),</code> <code>(0x9abc, 0xdef0)</code> <code>];</code> \u5d4c\u5957\u6a21\u5757 <code>[plat]</code><code>key = \"value\"</code> <code>pub mod plat {</code> <code>pub const KEY: usize = value;</code><code>}</code> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e <code>riscv64-qemu-virt.toml</code> \u914d\u7f6e\u6587\u4ef6\uff0c\u547d\u4ee4\u884c\u6267\u884c <pre><code>axconfig-gen -f rust configs/platforms/riscv64-qemu-virt.toml\n</code></pre></p> <p>\u53ef\u4ee5\u751f\u6210\u5982\u4e0b\u7684 Rust \u4ee3\u7801\uff1a</p> <pre><code>/// Architecture identifier.\npub const ARCH: &amp;str = \"riscv64\";\n/// Platform identifier.\npub const PLATFORM: &amp;str = \"riscv64-qemu-virt\";\n\n///\n/// Device specifications\n///\npub mod devices {\n    /// MMIO regions with format (`base_paddr`, `size`).\n    pub const MMIO_REGIONS: &amp;[(usize, usize)] = &amp;[\n        (0x0010_1000, 0x1000),\n        (0x0c00_0000, 0x21_0000),\n        (0x1000_0000, 0x1000),\n        (0x1000_1000, 0x8000),\n        (0x3000_0000, 0x1000_0000),\n        (0x4000_0000, 0x4000_0000),\n    ];\n    /// End PCI bus number (`bus-range` property in device tree).\n    pub const PCI_BUS_END: usize = 0xff;\n    /// Base physical address of the PCIe ECAM space.\n    pub const PCI_ECAM_BASE: usize = 0x3000_0000;\n    /// PCI device memory ranges (`ranges` property in device tree).\n    pub const PCI_RANGES: &amp;[(usize, usize)] = &amp;[\n        (0x0300_0000, 0x1_0000),\n        (0x4000_0000, 0x4000_0000),\n        (0x4_0000_0000, 0x4_0000_0000),\n    ];\n    /// rtc@101000 {\n    ///     interrupts = &lt;0x0b&gt;;\n    ///     interrupt-parent = &lt;0x03&gt;;\n    ///     reg = &lt;0x00 0x101000 0x00 0x1000&gt;;\n    ///     compatible = \"google,goldfish-rtc\";\n    /// };\n    /// RTC (goldfish) Address\n    pub const RTC_PADDR: usize = 0x10_1000;\n    /// Timer interrupt frequency in Hz.\n    pub const TIMER_FREQUENCY: usize = 10_000_000;\n    /// VirtIO MMIO regions with format (`base_paddr`, `size`).\n    pub const VIRTIO_MMIO_REGIONS: &amp;[(usize, usize)] = &amp;[\n        (0x1000_1000, 0x1000),\n        (0x1000_2000, 0x1000),\n        (0x1000_3000, 0x1000),\n        (0x1000_4000, 0x1000),\n        (0x1000_5000, 0x1000),\n        (0x1000_6000, 0x1000),\n        (0x1000_7000, 0x1000),\n        (0x1000_8000, 0x1000),\n    ];\n}\n\n///\n/// Platform configs\n///\npub mod plat {\n    /// Platform family.\n    pub const FAMILY: &amp;str = \"riscv64-qemu-virt\";\n    /// Kernel address space base.\n    pub const KERNEL_ASPACE_BASE: usize = 0xffff_ffc0_0000_0000;\n    /// Kernel address space size.\n    pub const KERNEL_ASPACE_SIZE: usize = 0x0000_003f_ffff_f000;\n    /// Base physical address of the kernel image.\n    pub const KERNEL_BASE_PADDR: usize = 0x8020_0000;\n    /// Base virtual address of the kernel image.\n    pub const KERNEL_BASE_VADDR: usize = 0xffff_ffc0_8020_0000;\n    /// Offset of bus address and phys address. some boards, the bus address is\n    /// different from the physical address.\n    pub const PHYS_BUS_OFFSET: usize = 0;\n    /// Base address of the whole physical memory.\n    pub const PHYS_MEMORY_BASE: usize = 0x8000_0000;\n    /// Size of the whole physical memory. (128M)\n    pub const PHYS_MEMORY_SIZE: usize = 0x800_0000;\n    /// Linear mapping offset, for quick conversions between physical and virtual\n    /// addresses.\n    pub const PHYS_VIRT_OFFSET: usize = 0xffff_ffc0_0000_0000;\n}\n</code></pre> <p>\u8fd9\u6837\uff0cArceOS \u7684\u5185\u6838\u4ee3\u7801\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u914d\u7f6e\u5e38\u91cf\uff0c\u800c\u4e0d\u9700\u8981\u5728\u8fd0\u884c\u65f6\u89e3\u6790 TOML \u6587\u4ef6\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6027\u80fd\u548c\u5b89\u5168\u6027\u3002</p>"},{"location":"arceos-modules/config/#makefile","title":"Makefile","text":"<p>ArceOS \u7684 Makefile \u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u5185\u6838\u7684\u7f16\u8bd1\u6d41\u7a0b\u548c\u914d\u7f6e\u751f\u6210\uff0c\u5177\u4f53\u7ec6\u8282\u5efa\u8bae\u53c2\u8003 Makefile\uff0c\u4e0b\u9762\u7ed9\u51fa Makefile \u7684\u4e00\u4e9b\u9009\u9879\u548c\u529f\u80fd\u8bf4\u660e\uff1a</p>"},{"location":"arceos-modules/config/#_4","title":"\u901a\u7528\u9009\u9879","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b/\u9ed8\u8ba4\u503c <code>ARCH</code> \u76ee\u6807\u67b6\u6784\uff0c\u652f\u6301 x86_64\u3001riscv64\u3001aarch64\u3001loongach \u56db\u79cd\u67b6\u6784 <code>ARCH=x86_64</code> <code>PLATFORM</code> \u76ee\u6807\u5e73\u53f0\uff08\u9700\u5728 <code>platforms</code> \u76ee\u5f55\u4e2d\u5b58\u5728\u5bf9\u5e94\u914d\u7f6e\uff09 <code>PLATFORM=qemu_x86_64</code> <code>SMP</code> CPU\u6838\u5fc3\u6570\u91cf <code>SMP=4</code> <code>MODE</code> \u6784\u5efa\u6a21\u5f0f\uff0c<code>release</code> \u4e3a\u53d1\u5e03\u7248\uff08\u4f18\u5316\u6027\u80fd\uff09\uff0c<code>debug</code> \u4e3a\u8c03\u8bd5\u7248\uff08\u542b\u8c03\u8bd5\u4fe1\u606f\uff09 <code>MODE=release</code> <code>LOG</code> \u65e5\u5fd7\u7ea7\u522b\uff0c\u4ece\u4f4e\u5230\u9ad8\uff1awarn\uff08\u8b66\u544a\uff09\u3001error\uff08\u9519\u8bef\uff09\u3001info\uff08\u4fe1\u606f\uff09\u3001debug\uff08\u8c03\u8bd5\uff09\u3001trace\uff08\u8ffd\u8e2a\uff09 <code>LOG=info</code> <code>V</code> \u8be6\u7ec6\u7a0b\u5ea6\uff0c\u6570\u5b57\u8d8a\u5927\u8f93\u51fa\u4fe1\u606f\u8d8a\u8be6\u7ec6 <code>V=2</code> <code>TARGET_DIR</code> \u6784\u5efa\u4ea7\u7269\u8f93\u51fa\u76ee\u5f55\uff08\u5bf9\u5e94 Cargo \u7684 target \u76ee\u5f55\uff09 <code>TARGET_DIR=./target</code> <code>EXTRA_CONFIG</code> \u989d\u5916\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 <code>EXTRA_CONFIG=</code> <code>OUT_CONFIG</code> \u6700\u7ec8\u751f\u6548\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 <code>OUT_CONFIG=$(PWD)/.axconfig.toml</code> <code>UIMAGE</code> \u751f\u6210 U-Boot \u955c\u50cf\uff08\u7528\u4e8e\u5d4c\u5165\u5f0f\u542f\u52a8\u573a\u666f\uff09 <code>UIMAGE=n</code>"},{"location":"arceos-modules/config/#_5","title":"\u5e94\u7528\u9009\u9879","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b/\u9ed8\u8ba4\u503c <code>A</code>/<code>APP</code> \u5e94\u7528\u7a0b\u5e8f\u8def\u5f84 <code>A=examples/helloworld</code> \u6216 <code>APP=$(A)</code> <code>FEATURES</code> \u542f\u7528 ArceOS \u6a21\u5757\u7684\u529f\u80fd\u7279\u6027 <code>FEATURES=\"network,driver\"</code> <code>APP_FEATURES</code> \u542f\u7528 Rust \u5e94\u7528\u7684\u529f\u80fd\u7279\u6027 <code>APP_FEATURES=</code>"},{"location":"arceos-modules/config/#qemu","title":"QEMU \u9009\u9879","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b/\u9ed8\u8ba4\u503c <code>BLK</code> \u542f\u7528\u5b58\u50a8\u8bbe\u5907\uff08virtio-blk \u9a71\u52a8\uff09 <code>BLK=n</code> <code>NET</code> \u542f\u7528\u7f51\u7edc\u8bbe\u5907\uff08virtio-net \u9a71\u52a8\uff09 <code>NET=n</code> <code>GRAPHIC</code> \u542f\u7528\u663e\u793a\u8bbe\u5907\u548c\u56fe\u5f62\u8f93\u51fa\uff08virtio-gpu \u9a71\u52a8\uff09 <code>GRAPHIC=n</code> <code>BUS</code> \u8bbe\u5907\u603b\u7ebf\u7c7b\u578b\uff0c\u652f\u6301<code>mmio</code>\uff08\u5185\u5b58\u6620\u5c04 I/O\uff09\u6216<code>pci</code>\uff08PCI \u603b\u7ebf\uff09 <code>BUS=pci</code> <code>MEM</code> \u5206\u914d\u5185\u5b58\u5927\u5c0f\uff08\u9ed8\u8ba4 128M\uff09 <code>MEM=512M</code> <code>DISK_IMG</code> \u865a\u62df\u78c1\u76d8\u955c\u50cf\u8def\u5f84 <code>DISK_IMG=disk.img</code> <code>ACCEL</code> \u542f\u7528\u786c\u4ef6\u52a0\u901f\uff08Linux\u4e0b\u4f7f\u7528KVM\uff09 \u82e5\u4e3a\u865a\u62df\u673a\u76ee\u6807\u67b6\u6784\u4e0e\u4e3b\u673a\u67b6\u6784\u76f8\u540c\uff0c\u5219<code>ACCEL=y</code> <code>QEMU_LOG</code> \u542f\u7528QEMU\u65e5\u5fd7\uff0c\u65e5\u5fd7\u6587\u4ef6\u4e3a <code>qemu.log</code> <code>QEMU_LOG=n</code> <code>NET_DUMP</code> \u542f\u7528\u7f51\u7edc\u6570\u636e\u5305\u6355\u83b7\uff0c\u4fdd\u5b58\u4e3a <code>netdump.pcap</code> \u6587\u4ef6 <code>NET_DUMP=n</code> <code>NET_DEV</code> QEMU\u7f51\u7edc\u8bbe\u5907\u540e\u7aef\u7c7b\u578b\uff0c\u652f\u6301 <code>user</code>\uff08\u7528\u6237\u6a21\u5f0f\uff09\u3001<code>tap</code>\uff08tap\u8bbe\u5907\uff09\u3001<code>bridge</code>\uff08\u6865\u63a5\uff09 <code>NET_DEV=tap</code> <code>VFIO_PCI</code> PCI\u8bbe\u5907\u900f\u4f20\uff0c\u683c\u5f0f\u4e3a <code>bus:dev.func</code>\uff08\u5982<code>01:00.0</code>\uff09 <code>VFIO_PCI=</code> <code>VHOST</code> \u4e3a <code>tap</code> \u540e\u7aef\u542f\u7528vhost-net\u52a0\u901f\uff08\u4ec5\u5f53 <code>NET_DEV=tap</code> \u65f6\u6709\u6548\uff09 <code>VHOST=n</code>"},{"location":"arceos-modules/config/#_6","title":"\u7f51\u7edc\u9009\u9879","text":"\u53c2\u6570 \u8bf4\u660e \u793a\u4f8b/\u9ed8\u8ba4\u503c <code>IP</code> ArceOS\u7cfb\u7edf\u7684IPv4\u5730\u5740\uff08QEMU\u7528\u6237\u6a21\u5f0f\u7f51\u7edc\u9ed8\u8ba410.0.2.15\uff09 <code>IP=192.168.1.100</code> <code>GW</code> \u7f51\u5173IPv4\u5730\u5740\uff08QEMU\u7528\u6237\u6a21\u5f0f\u7f51\u7edc\u9ed8\u8ba410.0.2.2\uff09 <code>GW=192.168.1.1</code>"},{"location":"arceos-modules/driver/","title":"ArceOS \u9a71\u52a8\u5c42\u4ecb\u7ecd","text":""},{"location":"arceos-modules/driver/bus/","title":"ArceOS \u9a71\u52a8\u603b\u7ebf","text":""},{"location":"arceos-modules/driver/bus/#pci","title":"PCI \u603b\u7ebf","text":""},{"location":"arceos-modules/driver/bus/#mmio","title":"MMIO \u603b\u7ebf","text":""},{"location":"arceos-modules/driver/support/","title":"ArceOS \u63a5\u5165\u9a71\u52a8\u4ecb\u7ecd","text":""},{"location":"arceos-modules/driver/support/#_1","title":"\u63a5\u5165\u9a71\u52a8\u79cd\u7c7b","text":""},{"location":"arceos-modules/driver/support/#_2","title":"\u5757\u8bbe\u5907\u9a71\u52a8","text":""},{"location":"arceos-modules/driver/support/#_3","title":"\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8","text":""},{"location":"arceos-modules/driver/support/#display","title":"Display \u8bbe\u5907\u9a71\u52a8","text":""},{"location":"arceos-modules/driver/support/#_4","title":"\u63a5\u5165\u65b9\u5f0f","text":""},{"location":"arceos-modules/driver/support/#_5","title":"\u9759\u6001\u52a0\u8f7d","text":""},{"location":"arceos-modules/driver/support/#_6","title":"\u52a8\u6001\u52a0\u8f7d","text":""},{"location":"arceos-modules/fs/","title":"ArceOS \u6587\u4ef6\u7cfb\u7edf","text":"<p><code>axfs</code> \u6a21\u5757\u8d1f\u8d23\u63a5\u5165\u4e0d\u540c\u6765\u6e90\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u4e3a\u7528\u6237\u63d0\u4f9b\u7edf\u4e00\u7684\u6587\u4ef6\u7cfb\u7edf\u529f\u80fd\u7684\u8c03\u7528\u63a5\u53e3\uff0c\u4f7f\u5f97\u5176\u4ed6\u7684\u6a21\u5757\u5728\u64cd\u4f5c\u6587\u4ef6\\\u76ee\u5f55\u65f6\u65e0\u9700\u5173\u5fc3\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u7ec6\u8282\uff0c\u540c\u65f6\u4e5f\u4e3a\u4e0b\u5c42\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u63a5\u5165 ArceOS \u4e2d\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u63a5\u53e3\u3002ArceOS \u6587\u4ef6\u7cfb\u7edf\u5206\u5c42\u7ed3\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a</p> <p>\u672c\u6a21\u5757\u7684\u662f\u57fa\u4e8e\u865a\u62df\u6587\u4ef6\u7cfb\u7edf axfs_vfs \u5143\u4ef6\u5b9e\u73b0\u7684\uff0c\u8fd9\u662f ArceOS \u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7ba1\u7406\u7684\u6838\u5fc3\u62bd\u8c61\u5c42\uff0c\u8d1f\u8d23\u5c4f\u853d\u4e0d\u540c\u6587\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> <p>\u5728\u8fd9\u5c42\u62bd\u8c61\u5c42\u4e4b\u4e0a\uff0c<code>axfs</code> \u5bf9\u5176\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u6587\u4ef6\u7cfb\u7edf\u529f\u80fd\u8c03\u7528\u63a5\u53e3\uff0c\u5982\u6587\u4ef6\u8bfb\u5199\u3001\u76ee\u5f55\u64cd\u4f5c\u7b49\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u672c\u6587\u4ef6\u7cfb\u7edf\u7ae0\u8282\u5c06\u4f1a\u4ecb\u7ecd\u5982\u4e0b\u5185\u5bb9\uff1a</p> <ol> <li>ArceOS \u6587\u4ef6\u7cfb\u7edf\u517c\u5bb9\u5c42\u7684\u5177\u4f53\u5b9e\u73b0</li> <li><code>axfs</code> \u6a21\u5757\u7684\u542f\u52a8\u4e0e\u521d\u59cb\u5316</li> <li>\u5982\u4f55\u5411 ArceOS \u4e2d\u63a5\u5165\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5173\u952e\u7ed3\u6784\u4f53\u5b57\u6bb5\u4e0e API \u4ee5\u53ca\u57fa\u672c\u793a\u4f8b\u4ee3\u7801</li> <li><code>axfs</code> \u6a21\u5757 <code>Features</code> \u7684\u914d\u7f6e\u7b56\u7565</li> </ol>"},{"location":"arceos-modules/fs/#todo","title":"TODO","text":"<p>\u6700\u540e\uff0c\u76ee\u524d ArceOS \u7684\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757\u8fd8\u5904\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u90e8\u5206\u529f\u80fd\u8fd8\u6ca1\u6709\u5b9e\u73b0\uff0c\u6b22\u8fce\u5927\u5bb6\u63d0\u51fa PR\uff01</p> <ul> <li>\u6539\u8fdb\u5bf9 <code>devfs/shmfs/procfs</code> \u7b49\u7279\u6b8a\u6587\u4ef6\u7cfb\u7edf\u652f\u6301\uff0c\u5bf9\u652f\u6301 libc \u7684\u4e00\u4e9b\u529f\u80fd\u6709\u91cd\u8981\u4f5c\u7528 </li> <li>\u652f\u6301\u6587\u4ef6/\u76ee\u5f55\u7684\u8f6f\\\u786c\u94fe\u63a5\u529f\u80fd</li> <li>\u652f\u6301\u83b7\u53d6\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f</li> <li>\u652f\u6301\u6587\u4ef6/\u76ee\u5f55\u7684\u65f6\u95f4\u6233\u529f\u80fd</li> </ul>"},{"location":"arceos-modules/fs/api/","title":"ArceOS \u6587\u4ef6\u7cfb\u7edf\u63a5\u53e3","text":"<p>\u672c\u6587\u4ecb\u7ecd\u4e86 ArceOS \u7684\u6587\u4ef6\u7cfb\u7edf\u63a5\u53e3\u8bbe\u8ba1\uff0c\u4e3b\u8981\u9762\u5411\u4f7f\u7528 <code>axfs</code> \u6a21\u5757\u6784\u5efa\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u5f00\u53d1\u8005\uff0c\u6d89\u53ca\u7684\u5185\u5bb9\u5305\u62ec\uff1a</p> <ol> <li>\u5173\u952e\u7ed3\u6784\u4f53\u4e0e\u5173\u8054\u51fd\u6570</li> <li><code>std-like</code> \u98ce\u683c\u7684 API</li> <li><code>axfs</code> \u6a21\u5757\u4e2d Features \u914d\u7f6e\u7b56\u7565</li> </ol>"},{"location":"arceos-modules/fs/api/#_1","title":"\u5173\u952e\u7ed3\u6784\u4f53\u4e0e\u5173\u8054\u51fd\u6570","text":"<p>\u5728 <code>axfs</code> \u6a21\u5757\u4e2d\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u7ed3\u6784\u4f53\uff1a</p> <ul> <li><code>File</code>\uff1a\u5177\u4f53\u7684\u6587\u4ef6\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u7684\u6253\u5f00\u548c\u8bfb\u5199\u7b49\u64cd\u4f5c\u3002</li> <li><code>Directory</code>\uff1a\u5177\u4f53\u7684\u76ee\u5f55\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e86\u5bf9\u76ee\u5f55\u7684\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002</li> <li><code>DirEntry</code>\uff1a\u76ee\u5f55\u9879\uff0c\u7528\u4e8e\u8868\u793a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u540d\u548c\u7c7b\u578b\u7b49\u4fe1\u606f\u3002</li> <li><code>FileAttr</code>\uff1a\u6587\u4ef6\u5c5e\u6027\uff0c\u5305\u62ec\u6587\u4ef6\u7c7b\u578b\u3001\u6743\u9650\u3001\u5927\u5c0f\u7b49\u4fe1\u606f\u3002</li> </ul>"},{"location":"arceos-modules/fs/api/#file","title":"FILE \u6587\u4ef6\u64cd\u4f5c","text":"<p><code>File</code> \u7ed3\u6784\u4f53\u8868\u793a\u6253\u5f00\u7684\u6587\u4ef6\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u7b49\u64cd\u4f5c\uff1a</p> <ul> <li><code>node</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u8282\u70b9\u7684\u5f15\u7528\uff0c\u662f\u4e00\u4e2a <code>WithCap</code> \u5305\u88c5\u7684 <code>VfsNodeRef</code>\u3002</li> <li><code>is_append</code>\uff1a\u8868\u793a\u6587\u4ef6\u662f\u5426\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u3002\u4f8b\u5982 <code>open(\"/tmp/xxx\", \"a\")</code> \u6253\u5f00\u6587\u4ef6\u65f6\uff0c<code>is_append</code> \u4e3a <code>true</code>\uff0c\u5e76\u4e14 <code>offset</code> \u6307\u5411\u6587\u4ef6\u672b\u5c3e\u3002</li> <li><code>offset</code>\uff1a\u6587\u4ef6\u6307\u9488\uff0c\u8868\u793a\u6587\u4ef6\u7684\u8bfb\u5199\u4f4d\u7f6e\u3002</li> </ul> <pre><code>/// An opened file object, with open permissions and a cursor.\npub struct File {\n    node: WithCap&lt;VfsNodeRef&gt;,\n    is_append: bool,\n    offset: u64,\n}\n</code></pre> <p>\u6743\u9650\u63a7\u5236 <code>WithCap</code></p> <p><code>WithCap</code> \u589e\u52a0\u4e86\u5bf9\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7684\u529f\u80fd\uff0c\u5305\u542b\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\uff08rwx\uff09\u3002\u5177\u4f53\u53c2\u8003cap_access\u3002</p> <p><code>File</code> \u5b9e\u73b0\u4e86\u5982\u4e0b\u7684\u51fd\u6570\uff1a</p> <pre><code>// modules/axfs/src/fops.rs\n\n/// Opens a file at the path relative to the current directory. \n///\n/// Returns a [`File`] object.\npub fn open(path: &amp;str, opts: &amp;OpenOptions) -&gt; AxResult&lt;Self&gt;;\n\n/// Truncates the file to the specified size.\npub fn truncate(&amp;self, size: u64) -&gt; AxResult;\n\n/// Reads the file at the current position. Returns the number of bytes read.\n///\n/// After the read, the cursor will be advanced by the number of bytes read.\npub fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; AxResult&lt;usize&gt;;\n\n/// Reads the file at the given position. Returns the number of bytes read.\n/// \n/// It does not update the file cursor.\npub fn read_at(&amp;self, offset: u64, buf: &amp;mut [u8]) -&gt; AxResult&lt;usize&gt;;\n\n/// Writes the file at the current position. Returns the number of bytes written.\n/// \n/// After the write, the cursor will be advanced by the number of bytes written.\npub fn write(&amp;mut self, buf: &amp;[u8]) -&gt; AxResult&lt;usize&gt;;\n\n/// Writes the file at the given position. Returns the number of bytes written.\n/// \n/// It does not update the file cursor.\npub fn write_at(&amp;self, offset: u64, buf: &amp;[u8]) -&gt; AxResult&lt;usize&gt;;\n\n/// Flushes the file, writes all buffered data to the underlying device.\npub fn flush(&amp;self) -&gt; AxResult;\n\n/// Sets the cursor of the file to the specified offset. Returns the new\n/// position after the seek.\npub fn seek(&amp;mut self, pos: SeekFrom) -&gt; AxResult&lt;u64&gt;;\n\n/// Gets the file attributes.\npub fn get_attr(&amp;self) -&gt; AxResult&lt;FileAttr&gt;;\n</code></pre> \u51fd\u6570\u540d \u529f\u80fd <code>open</code> \u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55\u6253\u5f00\u6587\u4ef6\uff0c\u8fd4\u56de <code>File</code> \u5bf9\u8c61 <code>truncate</code> \u5c06\u6587\u4ef6\u622a\u65ad\u6216\u6269\u5c55\u5230\u6307\u5b9a\u5927\u5c0f\uff0c\u82e5\u6587\u4ef6\u5c0f\u4e8e\u6307\u5b9a\u5927\u5c0f\uff0c\u5219\u5728\u6587\u4ef6\u672b\u5c3e\u586b\u5145 <code>\\0</code> <code>read</code> \u4ece\u5f53\u524d\u4f4d\u7f6e\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u5230\u7f13\u51b2\u533a\uff0c\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u66f4\u65b0\u6587\u4ef6\u6307\u9488 <code>read_at</code> \u4ece\u6307\u5b9a\u4f4d\u7f6e\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u5230\u7f13\u51b2\u533a\uff0c\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u4e0d\u66f4\u65b0\u6587\u4ef6\u6307\u9488 <code>write</code> \u4ece\u5f53\u524d\u4f4d\u7f6e\u5199\u5165\u7f13\u51b2\u533a\u5185\u5bb9\u5230\u6587\u4ef6\uff0c\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\uff0c\u66f4\u65b0\u6587\u4ef6\u6307\u9488 <code>write_at</code> \u4ece\u6307\u5b9a\u4f4d\u7f6e\u5199\u5165\u7f13\u51b2\u533a\u5185\u5bb9\u5230\u6587\u4ef6\uff0c\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\uff0c\u4e0d\u66f4\u65b0\u6587\u4ef6\u6307\u9488 <code>flush</code> \u5c06\u6587\u4ef6\u7f13\u51b2\u533a\u6570\u636e\u5237\u65b0\u5230\u5e95\u5c42\u8bbe\u5907 <code>seek</code> \u8bbe\u7f6e\u6587\u4ef6\u6307\u9488\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u8fd4\u56de\u65b0\u7684\u4f4d\u7f6e <code>get_attr</code> \u83b7\u53d6\u6587\u4ef6\u7684\u5c5e\u6027\uff0c\u8fd4\u56de <code>FileAttr</code> \u7ed3\u6784\u4f53\uff0c\u5305\u542b\u6587\u4ef6\u7684\u6743\u9650\u3001\u7c7b\u578b\u3001\u5927\u5c0f\u7b49\u4fe1\u606f <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u6ca1\u6709\u8fdb\u884c\u66f4\u591a\u7684\u5c01\u88c5\uff0c<code>axfs</code> \u4e0d\u50cf\u6807\u51c6\u5e93\u4e00\u6837\u5730\u667a\u80fd\uff0c\u6240\u4ee5\u5728\u4f7f\u7528 <code>write</code> \u8fc7\u540e\u9700\u8981\u8c03\u7528 <code>flush</code> \u51fd\u6570\u6765\u786e\u4fdd\u6570\u636e\u6301\u4e45\u5316\u5230\u8bbe\u5907\u4e2d\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u53ea\u6709 <code>File</code> \u88ab <code>drop</code> \u89e6\u53d1\u6790\u6784\u51fd\u6570\uff0c\u5f3a\u5236\u5237\u65b0\u6587\u4ef6\u7684\u7f13\u51b2\u533a\u6570\u636e\u624d\u80fd\u591f\u8fdb\u884c\u540c\u6b65\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u793a\u4f8b\uff1a <pre><code>/// \u521b\u5efa\u4e00\u4e2a OpenOptions \u5bf9\u8c61\nfn options(opt: &amp;str) -&gt; fops::OpenOptions {\n    let mut opts = fops::OpenOptions::new();\n    opt.find(\"r\").map(|_| opts.read(true));\n    opt.find(\"w\").map(|_| opts.write(true));\n    opt.find(\"x\").map(|_| opts.execute(true));\n    opt.find(\"a\").map(|_| opts.append(true));\n    opt.find(\"t\").map(|_| opts.truncate(true));\n    opt.find(\"c\").map(|_| opts.create(true));\n    opt.find(\"n\").map(|_| opts.create_new(true));\n    opt.find(\"d\").map(|_| opts.directory(true));\n    opts\n}\n\nfn file() -&gt; AxResult {\n    let s = String::from(\"hello world\");\n    let s_append = String::from(\" arceOS!\");\n    let file_path = \"/test.txt\";\n\n    // write: \u5199\u5165\u6587\u4ef6\n    let mut file = fops::File::open(file_path, &amp;options(\"rwc\"))?;\n    file.write(s.as_bytes())?;\n    drop(file); // \u89e6\u53d1\u6790\u6784\u51fd\u6570\uff0c\u5237\u65b0\u6587\u4ef6\u7f13\u51b2\u533a\u6570\u636e\n    // file.flush()?;\n\n    // read: \u8bfb\u53d6\u6587\u4ef6\n    let mut file = fops::File::open(file_path, &amp;options(\"r\"))?;\n    let mut buf = [0u8; 64];\n    let len = file.read(&amp;mut buf)?;\n    assert_eq!(&amp;buf[0..len], s.as_bytes());\n\n    // write_append: \u8ffd\u52a0\u6587\u4ef6\n    let mut file = fops::File::open(file_path, &amp;options(\"rwa\"))?;\n    file.write(s_append.as_bytes())?;\n    drop(file); // \u89e6\u53d1\u6790\u6784\u51fd\u6570\uff0c\u5237\u65b0\u6587\u4ef6\u7f13\u51b2\u533a\u6570\u636e\n    // file.flush()?;\n\n    // seek: \u5b9a\u4f4d\u6587\u4ef6\u6307\u9488\n    let mut file = fops::File::open(file_path, &amp;options(\"r\"))?;\n    file.seek(SeekFrom::Start(6))?;\n    let mut buf = [0u8; 64];\n    let len = file.read(&amp;mut buf)?;\n    assert_eq!(buf[0..len], format!(\"{}{}\", s, s_append).as_bytes()[6..]);\n\n    // get_attr: \u83b7\u53d6\u6587\u4ef6\u7684\u5143\u6570\u636e\n    let metadata = file.get_attr()?;\n    assert_eq!(metadata.file_type(), fops::FileType::File);\n    assert_eq!(metadata.size(), 19);\n\n    // \u5220\u9664\u6587\u4ef6\n    let dir = fops::Directory::open_dir(\"/\", &amp;options(\"r\"))?;   \n    dir.remove_file(file_path)?;\n\n    Ok(())\n}\n</code></pre></p>"},{"location":"arceos-modules/fs/api/#directory","title":"Directory \u76ee\u5f55\u64cd\u4f5c","text":"<p><code>Directory</code> \u7ed3\u6784\u4f53\u8868\u793a\u6253\u5f00\u7684\u76ee\u5f55\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e86\u5bf9\u76ee\u5f55\u7684\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\uff1a</p> <ul> <li><code>node</code>\uff1a\u5bf9\u5e94\u7684\u76ee\u5f55\u8282\u70b9\u7684\u5f15\u7528\uff0c\u662f\u4e00\u4e2a <code>WithCap</code> \u5305\u88c5\u7684 <code>VfsNodeRef</code>\u3002</li> <li><code>entry_idx</code>\uff1a\u8868\u793a\u5f53\u524d\u76ee\u5f55\u9879\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002</li> </ul> <pre><code>/// An opened directory object, with open permissions and a cursor for\n/// [`read_dir`](Directory::read_dir).\npub struct Directory {\n    node: WithCap&lt;VfsNodeRef&gt;,\n    entry_idx: usize,\n}\n</code></pre> <p><code>Directory</code> \u5b9e\u73b0\u4e86\u5982\u4e0b\u7684\u51fd\u6570\uff1a</p> <pre><code>// modules/axfs/src/fops.rs\n\n/// Opens a directory at the path relative to the current directory.\n/// Returns a [`Directory`] object.\npub fn open_dir(path: &amp;str, opts: &amp;OpenOptions) -&gt; AxResult&lt;Self&gt;;\n\n/// Opens a directory at the path relative to this directory. \n/// Returns a [`Directory`] object.\npub fn open_dir_at(&amp;self, path: &amp;str, opts: &amp;OpenOptions) -&gt; AxResult&lt;Self&gt;;\n\n/// Opens a file at the path relative to this directory. \n/// Returns a [`File`] object.\npub fn open_file_at(&amp;self, path: &amp;str, opts: &amp;OpenOptions) -&gt; AxResult&lt;File&gt;;\n\n/// Creates an empty file at the path relative to this directory.\npub fn create_file(&amp;self, path: &amp;str) -&gt; AxResult&lt;VfsNodeRef&gt;;\n\n/// Creates an empty directory at the path relative to this directory.\npub fn create_dir(&amp;self, path: &amp;str) -&gt; AxResult;\n\n/// Removes a file at the path relative to this directory.\npub fn remove_file(&amp;self, path: &amp;str) -&gt; AxResult;\n\n/// Removes a directory at the path relative to this directory.\npub fn remove_dir(&amp;self, path: &amp;str) -&gt; AxResult;\n\n/// Reads directory entries starts from the current position into the\n/// given buffer. Returns the number of entries read.\n///\n/// After the read, the cursor will be advanced by the number of entries\n/// read.\npub fn read_dir(&amp;mut self, dirents: &amp;mut [DirEntry]) -&gt; AxResult&lt;usize&gt;;\n\n/// Rename a file or directory to a new name.\n/// Delete the original file if `old` already exists.\n///\n/// This only works then the new path is in the same mounted fs.\npub fn rename(&amp;self, old: &amp;str, new: &amp;str) -&gt; AxResult;\n</code></pre> \u51fd\u6570\u540d \u529f\u80fd <code>open_dir</code> \u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55\u6253\u5f00\u76ee\u5f55\uff0c\u8fd4\u56de <code>Directory</code> \u5bf9\u8c61 <code>open_dir_at</code> \u76f8\u5bf9\u4e8e\u6b64\u76ee\u5f55\u6253\u5f00\u76ee\u5f55\uff0c\u8fd4\u56de <code>Directory</code> \u5bf9\u8c61 <code>open_file_at</code> \u76f8\u5bf9\u4e8e\u6b64\u76ee\u5f55\u6253\u5f00\u6587\u4ef6\uff0c\u8fd4\u56de <code>File</code> \u5bf9\u8c61 <code>create_file</code> \u5728\u6b64\u76ee\u5f55\u4e0b\u521b\u5efa\u7a7a\u6587\u4ef6 <code>create_dir</code> \u5728\u6b64\u76ee\u5f55\u4e0b\u521b\u5efa\u7a7a\u76ee\u5f55 <code>remove_file</code> \u79fb\u9664\u5728\u6b64\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 <code>remove_dir</code> \u79fb\u9664\u5728\u6b64\u76ee\u5f55\u4e0b\u7684\u6307\u5b9a\u76ee\u5f55 <code>read_dir</code> \u4ece\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6\u76ee\u5f55\u6761\u76ee\u5230\u7f13\u51b2\u533a\uff0c\u8fd4\u56de\u8bfb\u53d6\u7684\u6761\u76ee\u6570\uff0c\u66f4\u65b0\u76ee\u5f55\u6307\u9488 <code>rename</code> \u91cd\u547d\u540d\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u82e5\u65b0\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5220\u9664\u539f\u6587\u4ef6\uff0c\u8981\u6c42\u65b0\u65e7\u8def\u5f84\u5fc5\u987b\u5728\u540c\u4e00\u6587\u4ef6\u7cfb\u7edf\u4e2d <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>rename</code> \u51fd\u6570\u4e0d\u662f\u57fa\u4e8e <code>self</code> \u7684\u8def\u5f84\uff0c\u800c\u662f\u57fa\u4e8e\u5f53\u524d\u76ee\u5f55\u7684\u8def\u5f84\u8fdb\u884c\u91cd\u547d\u540d\u64cd\u4f5c\uff0c\u5f53\u524d\u8def\u5f84\u53ef\u4ee5\u8c03\u7528 <code>api::current_dir()</code> \u83b7\u53d6\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u793a\u4f8b\uff1a <pre><code>/// \u68c0\u6d4b\u6587\u4ef6/\u76ee\u5f55\u662f\u5426\u5b58\u5728\nfn check_exsist(path: &amp;str, assertion: bool) {\n    debug!(\"{} exsist: {}\", path, assertion);\n    assert_eq!(api::absolute_path_exists(path), assertion);\n}\n\n/// \u6d4b\u8bd5\u76ee\u5f55 API\nfn direction() -&gt; AxResult {\n    let root_dir = fops::Directory::open_dir(\"/\", &amp;options(\"r\"))?;\n\n    // create_dir: \u521b\u5efa\u6587\u4ef6\u5939 /test\n    root_dir.create_dir(\"test\")?; check_exsist(\"/test\", true);\n\n    let dir = fops::Directory::open_dir(\"/test\", &amp;options(\"r\"))?;\n\n    // create_file: \u521b\u5efa\u6587\u4ef6 /test/test_a.txt /test/test_b.txt\n    dir.create_file(\"test_a.txt\")?; check_exsist(\"/test/test_a.txt\", true);\n    dir.create_file(\"test_b.txt\")?; check_exsist(\"/test/test_b.txt\", true);\n\n    // rename: \u4fee\u6539\u6587\u4ef6\u540d /test/test_a.txt -&gt; /test/test_c.txt\n    api::set_current_dir(\"/test\").expect(\"set current dir failed\");\n    dir.rename(\"test_a.txt\", \"test_c.txt\")?;\n    check_exsist(\"test_a.txt\", false);\n    check_exsist(\"test_c.txt\", true);\n    api::set_current_dir(\"/\").expect(\"set current dir failed\");\n\n    // remove_file: \u5220\u9664\u6587\u4ef6 /test/test_b.txt /test/test_c.txt \n    dir.remove_file(\"test_b.txt\")?;\n    check_exsist(\"/test/test_b.txt\", false);\n    dir.remove_file(\"test_c.txt\")?;\n    check_exsist(\"/test/test_c.txt\", false);\n\n    // remove_dir \u5220\u9664\u6587\u4ef6\u5939 /test\n    root_dir.remove_dir(\"test\")?;\n    check_exsist(\"/test\", false);\n\n    Ok(())\n}\n</code></pre></p>"},{"location":"arceos-modules/fs/api/#direntry","title":"DirEntry \u76ee\u5f55\u9879","text":"<p><code>DirEntry</code> \u7ed3\u6784\u4f53\u8868\u793a\u76ee\u5f55\u9879\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u5c5e\u6027\u7b49\u4fe1\u606f\u3002\u5b83\u662f <code>axfs_vfs::VfsDirEntry</code> \u7684\u522b\u540d\u3002</p> <p>\u76ee\u524d\u5185\u90e8\u8bb0\u5f55\u4e24\u4e2a\u5b57\u6bb5\uff1a</p> <ul> <li><code>d_type</code>\uff1a\u8868\u793a\u6587\u4ef6\u7c7b\u578b\uff0c\u4e3a <code>VfsNodeType</code> \u679a\u4e3e\u7c7b\u578b\u3002</li> <li><code>d_name</code>\uff1a\u8868\u793a\u6587\u4ef6\u540d\uff0c\u4f7f\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a 63 \u7684\u5b57\u8282\u6570\u7ec4\u5b58\u50a8\u6587\u4ef6\u540d\u3002</li> </ul> <pre><code>/// Alias of [`axfs_vfs::VfsDirEntry`].\npub type DirEntry = axfs_vfs::VfsDirEntry;\n\n/// Directory entry.\npub struct VfsDirEntry {\n    d_type: VfsNodeType,\n    d_name: [u8; 63],\n}\n</code></pre> <p>\u6587\u4ef6\u540d\u957f\u5ea6\u9650\u5236</p> <p>\u76ee\u524d Arceos \u4e2d\u7684\u6587\u4ef6\u540d\u957f\u5ea6\u9650\u5236\u4e3a 63 \u5b57\u8282\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u95ee\u9898\uff0c\u4f8b\u5982 <code>lwext4</code> \u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u540d\u957f\u5ea6\u9650\u5236\u4e3a 255 \u5b57\u8282\uff0c\u56e0\u6b64\u5728\u4f7f\u7528 <code>lwext4</code> \u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u6587\u4ef6\u540d\u8fc7\u957f\u7684\u95ee\u9898\u3002</p>"},{"location":"arceos-modules/fs/api/#openoptions","title":"OpenOptions \u6253\u5f00\u9009\u9879","text":"<p><code>OpenOptions</code> \u7ed3\u6784\u4f53\u7528\u4e8e\u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u6216\u76ee\u5f55\u65f6\u7684\u9009\u9879\u3002\u7c7b\u4f3c\u4e8e Rust \u6807\u51c6\u5e93\u4e2d\u7684 std::fs::OpenOptions\u3002\u4e0d\u8fc7\uff0c\u8003\u8651\u5230 ArceOS \u7684\u7279\u6b8a\u6027\uff0c<code>OpenOptions</code> \u7ed3\u6784\u4f53\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u9009\u9879\u6765\u914d\u7f6e\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\u3002</p> <pre><code>/// Options and flags which can be used to configure how a file is opened.\n#[derive(Default, Clone)]\npub struct OpenOptions {\n    // generic\n    read    : bool,         \n    write   : bool,        \n    execute : bool,      \n    append  : bool,       \n    truncate: bool,     \n    create  : bool,       \n    create_new: bool,   \n    directory: bool,    \n    // system-specific\n    _custom_flags: i32,\n    _mode: u32,\n}\n</code></pre> <p>\u8be5 <code>OpenOptions</code> \u7ed3\u6784\u4f53\u4e0e Rust \u6807\u51c6\u5e93\u4e2d\u7684 <code>std::fs::OpenOptions</code> \u7c7b\u4f3c\uff0c\u4f46\u4e3a\u4e86\u6ee1\u8db3 <code>axfs</code> \u7684\u9700\u8981\uff0c\u5185\u90e8\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u9009\u9879\u6765\u914d\u7f6e\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\u3002\u5b83\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a</p> <ul> <li><code>read</code>\uff1a\u662f\u5426\u53ef\u8bfb</li> <li><code>write</code>\uff1a\u662f\u5426\u53ef\u5199</li> <li><code>execute</code>\uff1a\u662f\u5426\u53ef\u6267\u884c</li> <li><code>append</code>\uff1a\u662f\u5426\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\uff0c\u82e5\u4e3a true\uff0c\u5199\u5165\u64cd\u4f5c\u5c06\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e\u800c\u975e\u8986\u76d6\u539f\u6709\u5185\u5bb9\u3002</li> <li><code>truncate</code>\uff1a\u662f\u5426\u622a\u65ad\u6587\u4ef6\uff0c\u82e5\u4e3a true\uff0c\u6253\u5f00\u6587\u4ef6\u65f6\u5c06\u6e05\u7a7a\u5176\u5185\u5bb9\uff08\u6587\u4ef6\u5927\u5c0f\u7f6e\u4e3a 0\uff09\u3002</li> <li><code>create</code>\uff1a\u662f\u5426\u521b\u5efa\u6587\u4ef6\uff0c\u5373\u4f7f\u6587\u4ef6\u5df2\u5b58\u5728\u4e5f\u4e0d\u4f1a\u8fd4\u56de\u9519\u8bef</li> <li><code>create_new</code>\uff1a\u662f\u5426\u521b\u5efa\u65b0\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef</li> <li><code>directory</code>\uff1a\u662f\u5426\u6253\u5f00\u76ee\u5f55\uff0c\u82e5\u4e3a true\uff0c\u5c1d\u8bd5\u5c06\u8def\u5f84\u4f5c\u4e3a\u76ee\u5f55\u6253\u5f00\uff08\u800c\u975e\u6587\u4ef6\uff09</li> <li><code>_custom_flags</code>\uff1a\u7cfb\u7edf\u7279\u5b9a\u7684\u81ea\u5b9a\u4e49\u6807\u5fd7\uff0c\u6682\u672a\u4f7f\u7528</li> <li><code>_mode</code>\uff1a\u6587\u4ef6\u6743\u9650\u6a21\u5f0f\uff0c\u6682\u672a\u4f7f\u7528</li> </ul>"},{"location":"arceos-modules/fs/api/#_2","title":"\u5143\u6570\u636e","text":"<p>\u5728 <code>axfs</code> \u6a21\u5757\u4e2d\uff0c\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5143\u6570\u636e\u7684\u63a5\u53e3\u662f\u901a\u8fc7 <code>FileAttr</code> \u7ed3\u6784\u4f53\u6765\u5b9e\u73b0\u7684\u3002\u5185\u90e8\u5305\u542b\u4e86\u6587\u4ef6\u7684\u6743\u9650\u3001\u7c7b\u578b\u3001\u5927\u5c0f\u548c\u5206\u914d\u7684\u5757\u6570\u7b49\u4fe1\u606f\u3002\u5b83\u662f <code>axfs_vfs::VfsNodeAttr</code> \u7684\u522b\u540d\u3002\u5185\u90e8\u7ef4\u62a4\u4e86\u4ee5\u4e0b\u5b57\u6bb5\uff1a</p> <ol> <li><code>mode</code>\uff1a\u6587\u4ef6\u6743\u9650\u6a21\u5f0f\uff0c\u4f7f\u7528 <code>FilePerm</code> \u7c7b\u578b\u8868\u793a\u3002\u63cf\u8ff0\u4e86\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5305\u62ec\u6240\u6709\u8005\u3001\u7ec4\u548c\u5176\u4ed6\u7528\u6237\u7684\u8bfb\u3001\u5199\u548c\u6267\u884c\u6743\u9650\u3002</li> <li><code>ty</code>\uff1a\u6587\u4ef6\u7c7b\u578b\uff0c\u4f7f\u7528 <code>FileType</code> \u7c7b\u578b\u8868\u793a\u3002</li> <li><code>size</code>\uff1a\u6587\u4ef6\u7684\u603b\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002</li> <li><code>blocks</code>\uff1a\u5206\u914d\u7684\u5757\u6570\uff0c\u4ee5 512 \u5b57\u8282\u4e3a\u5355\u4f4d\u3002</li> </ol> <pre><code>/// Alias of [`axfs_vfs::VfsNodeAttr`].\npub type FileAttr = axfs_vfs::VfsNodeAttr;\n/// Alias of [`axfs_vfs::VfsNodePerm`].\npub type FilePerm = axfs_vfs::VfsNodePerm;\n/// Alias of [`axfs_vfs::VfsNodeType`].\npub type FileType = axfs_vfs::VfsNodeType;\n\n/// Node (file/directory) attributes.\npub struct VfsNodeAttr {\n    /// File permission mode.\n    mode: VfsNodePerm,\n    /// File type.\n    ty: VfsNodeType,\n    /// Total size, in bytes.\n    size: u64,\n    /// Number of 512B blocks allocated.\n    blocks: u64,\n}\n\npub enum VfsNodeType {\n    /// FIFO (named pipe)\n    Fifo = 0o1,\n    /// Character device\n    CharDevice = 0o2,\n    /// Directory\n    Dir = 0o4,\n    /// Block device\n    BlockDevice = 0o6,\n    /// Regular file\n    File = 0o10,\n    /// Symbolic link\n    SymLink = 0o12,\n    /// Socket\n    Socket = 0o14,\n}\n\nbitflags::bitflags! {\n    /// Node (file/directory) permission mode.\n    #[derive(Debug, Clone, Copy)]\n    pub struct VfsNodePerm: u16 {\n        /// Owner has read permission.\n        const OWNER_READ = 0o400;\n        /// Owner has write permission.\n        const OWNER_WRITE = 0o200;\n        /// Owner has execute permission.\n        const OWNER_EXEC = 0o100;\n\n        /// Group has read permission.\n        const GROUP_READ = 0o40;\n        /// Group has write permission.\n        const GROUP_WRITE = 0o20;\n        /// Group has execute permission.\n        const GROUP_EXEC = 0o10;\n\n        /// Others have read permission.\n        const OTHER_READ = 0o4;\n        /// Others have write permission.\n        const OTHER_WRITE = 0o2;\n        /// Others have execute permission.\n        const OTHER_EXEC = 0o1;\n    }\n}\n</code></pre> <p><code>axfs</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u3001\u76ee\u5f55\u8fdb\u884c\u76f4\u63a5\u64cd\u4f5c\u7684\u63a5\u53e3\uff0c\u73b0\u5728\u53ea\u9700\u8981\u5c06\u6839\u76ee\u5f55 <code>ROOT</code> \u66b4\u9732\u7ed9\u5f00\u53d1\u8005\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u6587\u4ef6\u7cfb\u7edf API \u4e86\u3002</p>"},{"location":"arceos-modules/fs/api/#std-like-api","title":"<code>std-like</code> API","text":"<p>\u9664\u4e86\u4e0a\u4e00\u8282\u4e2d\u64cd\u4f5c\u6587\u4ef6/\u76ee\u5f55 API \u5916\uff0cArceOS \u8fd8\u63d0\u4f9b\u4e86\u4e00\u5957\u7c7b\u4f3c\u4e8e Rust \u6807\u51c6\u5e93\u7684\u6587\u4ef6\u7cfb\u7edf API\uff0c\u8fd9\u6837\u4e5f\u7b80\u5316\u4e86\u5f00\u53d1\u8005\u5728 ArceOS \u57fa\u7840\u4e0a\u5b9e\u73b0 rust \u6807\u51c6\u5e93\u7684\u5de5\u4f5c\u3002 \u53c2\u8003 rust \u5b98\u65b9 std::fs</p> <p>\u672c\u8d28\u4e0a\uff0c<code>std-like</code> API \u662f\u5bf9\u4e0b\u5c42\u6a21\u5757\u7684\u8fdb\u4e00\u6b65\u5c01\u88c5\u3002</p> <p></p> <pre><code>// modules/axfs/src/api/mod.rs\n\n/// Returns an iterator over the entries within a directory.\npub fn read_dir(path: &amp;str) -&gt; io::Result&lt;ReadDir&gt;;\n\n/// Returns the canonical, absolute form of a path with all intermediate\n/// components normalized.\npub fn canonicalize(path: &amp;str) -&gt; io::Result&lt;String&gt;;\n\n/// Returns the current working directory as a [`String`].\npub fn current_dir() -&gt; io::Result&lt;String&gt;;\n\n/// Changes the current working directory to the specified path.\npub fn set_current_dir(path: &amp;str) -&gt; io::Result&lt;()&gt;;\n\n/// Read the entire contents of a file into a bytes vector.\npub fn read(path: &amp;str) -&gt; io::Result&lt;Vec&lt;u8&gt;&gt;;\n\n/// Read the entire contents of a file into a string.\npub fn read_to_string(path: &amp;str) -&gt; io::Result&lt;String&gt;;\n\n/// Write a slice as the entire contents of a file.\npub fn write&lt;C: AsRef&lt;[u8]&gt;&gt;(path: &amp;str, contents: C) -&gt; io::Result&lt;()&gt;;\n\n/// Given a path, query the file system to get information about a file,\n/// directory, etc.\npub fn metadata(path: &amp;str) -&gt; io::Result&lt;Metadata&gt;;\n\n/// Creates a new, empty directory at the provided path.\npub fn create_dir(path: &amp;str) -&gt; io::Result&lt;()&gt;;\n\n/// Recursively create a directory and all of its parent components if they\n/// are missing.\npub fn create_dir_all(path: &amp;str) -&gt; io::Result&lt;()&gt;;\n\n/// Removes an empty directory.\npub fn remove_dir(path: &amp;str) -&gt; io::Result&lt;()&gt;;\n\n/// Removes a file from the filesystem.\npub fn remove_file(path: &amp;str) -&gt; io::Result&lt;()&gt;;\n\n/// Rename a file or directory to a new name.\n/// Delete the original file if `old` already exists.\n///\n/// This only works then the new path is in the same mounted fs.\npub fn rename(old: &amp;str, new: &amp;str) -&gt; io::Result&lt;()&gt;;\n\n/// check whether absolute path exists.\npub fn absolute_path_exists(path: &amp;str) -&gt; bool;\n</code></pre> <p>\u4e0a\u9762\u7684 API \u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u5206\uff0c\u76ee\u524d\u9664\u4e86 <code>create_dir_all</code> \u4e4b\u5916\u90fd\u5df2\u7ecf\u5b9e\u73b0\u4e86\uff1a</p> <ol> <li>\u6587\u4ef6\u64cd\u4f5c\uff1a<code>read</code>\u3001<code>read_to_string</code>\u3001<code>write</code>\u3001<code>remove_file</code>\u3002</li> <li>\u76ee\u5f55\u64cd\u4f5c\uff1a<code>read_dir</code>\u3001<code>create_dir</code>\u3001<code>create_dir_all</code>\u3001<code>remove_dir</code>\u3002</li> <li>\u5176\u4ed6\u64cd\u4f5c\uff1a<code>metadata</code>\u3001<code>canonicalize</code>\u3001<code>absolute_path_exists</code>\u3001<code>current_dir</code>\u3001<code>set_current_dir</code>\u3001<code>rename</code>\u3002</li> </ol> \u51fd\u6570\u540d \u529f\u80fd <code>read_dir</code> \u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879\u8fed\u4ee3\u5668 <code>canonicalize</code> \u8fd4\u56de\u89c4\u8303\u5316\u7684\u7edd\u5bf9\u8def\u5f84 <code>current_dir</code> \u8fd4\u56de\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 <code>set_current_dir</code> \u66f4\u6539\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 <code>read</code> \u5c06\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u8bfb\u5165\u5b57\u8282\u5411\u91cf <code>read_to_string</code> \u5c06\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u8bfb\u5165\u5b57\u7b26\u4e32 <code>write</code> \u5c06\u5207\u7247\u5185\u5bb9\u5168\u90e8\u5199\u5165\u6587\u4ef6\u4e2d <code>metadata</code> \u67e5\u8be2\u6587\u4ef6\u7cfb\u7edf\u83b7\u53d6\u6587\u4ef6\u3001\u76ee\u5f55\u7b49\u7684\u4fe1\u606f <code>create_dir</code> \u521b\u5efa\u4e00\u4e2a\u7a7a\u76ee\u5f55 <code>create_dir_all</code> \u9012\u5f52\u521b\u5efa\u76ee\u5f55\u53ca\u5176\u6240\u6709\u7236\u76ee\u5f55\uff08\u76ee\u524d\u4e0d\u652f\u6301\uff09 <code>remove_dir</code> \u5220\u9664\u6307\u5b9a\u7a7a\u76ee\u5f55 <code>remove_file</code> \u5220\u9664\u6587\u4ef6 <code>rename</code> \u91cd\u547d\u540d\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u82e5\u65b0\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5220\u9664\u539f\u6587\u4ef6 <code>absolute_path_exists</code> \u68c0\u67e5\u8def\u5f84\u662f\u5426\u5b58\u5728 <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u793a\u4f8b\uff1a <pre><code>/// \u8f93\u51fa\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5217\u8868\nfn do_ls(dir_path: &amp;str) {\n    info!(\"do_ls in {}\", dir_path);\n    api::read_dir(dir_path)\n        .expect(\"read dir failed\")\n        .enumerate()\n        .for_each(|(i, entry)| {\n            let entry = entry.expect(\"read dir failed\");\n            info!(\"{} {}\", i, entry.file_name());\n        });\n}\n\nfn std_like_api() -&gt; axio::Result {\n    do_ls(\"/\"); // \u8f93\u51fa\u6839\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5217\u8868\n\n    let file_name = \"test.txt\";\n    let s = String::from(\"hello world\");\n\n    // canonicalize: \u8def\u5f84\u89c4\u8303\u5316\n    assert_eq!(api::canonicalize(\"/path/./to//foo\")?, \"/path/to/foo\");\n\n    // current_dir: \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\n    let current_dir = api::current_dir()?;\n    assert_eq!(current_dir, \"/\");\n\n    // create_dir: \u521b\u5efa\u76ee\u5f55\n    api::create_dir(\"/test\")?;\n    check_exsist(\"/test\", true);\n\n    // // create_dir_all: \u9012\u5f52\u521b\u5efa\u76ee\u5f55\uff08\u6682\u65f6\u4e0d\u652f\u6301\uff09\n    // api::create_dir_all(\"/test/b/c/d\")?;\n    // check_exsist(\"/test/b/c/d\", true);\n\n    // set_current_dir: \u8bbe\u7f6e\u5f53\u524d\u76ee\u5f55\n    api::set_current_dir(\"/test\")?;\n    api::current_dir().map(|dir| assert_eq!(dir, \"/test/\"))?;\n\n    // write: \u5199\u5165\u6587\u4ef6\n    api::write(file_name, &amp;s)?;\n    check_exsist(\"/test/test.txt\", true);\n\n    // read: \u8bfb\u53d6\u6587\u4ef6\n    let res = api::read(file_name)?;\n    assert_eq!(res, s.as_bytes());\n\n    // read_to_string: \u8bfb\u53d6\u6587\u4ef6\u5230\u5b57\u7b26\u4e32\n    let res = api::read_to_string(file_name)?;\n    assert_eq!(res, s);\n\n    // rename: \u91cd\u547d\u540d\u6587\u4ef6\n    api::rename(file_name, \"test_renamed.txt\")?;\n    check_exsist(\"/test/test.txt\", false);\n    check_exsist(\"/test/test_renamed.txt\", true);\n\n    // read_dir: \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5217\u8868\n    do_ls(\"/test\");\n\n    // remove_file: \u5220\u9664\u6587\u4ef6\n    api::remove_file(\"test_renamed.txt\")?;\n    check_exsist(\"/test/test_renamed.txt\", false);\n\n    // remove_dir: \u5220\u9664\u76ee\u5f55\n    api::set_current_dir(\"/\")?;\n    api::remove_dir(\"test\")?;\n    check_exsist(\"/test\", false);\n\n    Ok(())\n}\n</code></pre></p> <p>\u57fa\u672c\u5143\u4ef6 <code>axio</code></p> <p>\u8fd9\u91cc\u7684 io \u662f axio\uff0c\u5b83\u7c7b\u4f3c\u4e8e Rust \u6807\u51c6\u5e93\u7684 <code>std::io</code>\uff0c\u63d0\u4f9b\u4e86\u5728 <code>no_std</code> \u73af\u5883\u4e0b\u57fa\u672c IO \u64cd\u4f5c\u7684\u63a5\u53e3\u3002 <code>axio</code> \u5c5e\u4e8e ArceOS \u7684\u57fa\u672c\u5143\u4ef6\u4e4b\u4e00\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684 crate \u53d1\u5e03\uff0c\u7c7b\u4f3c\u7684\u5143\u4ef6\u8fd8\u6709 axfs_crates,  axmm_crates \u7b49\u3002\u4f53\u73b0\u4e86 ArceOS \u7684\u6a21\u5757\u5316\u8bbe\u8ba1\u7406\u5ff5\u3002</p>"},{"location":"arceos-modules/fs/api/#features","title":"Features \u914d\u7f6e\u7b56\u7565","text":"<p>\u4ece ArceOS \u7684\u8bbe\u8ba1\u7406\u5ff5\u6765\u770b\uff0c\u6587\u4ef6\u7cfb\u7edf\u7684\u9009\u62e9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u51b3\u7b56\uff0c\u56e0\u6b64\u5728\u6a21\u5757\u5c42\u7684 <code>axfs</code> \u4e2d\uff0c\u4e3a\u7528\u6237\u5185\u6838\u63d0\u4f9b\u4e86 <code>features</code> \u914d\u7f6e\uff0c\u9759\u6001\u9009\u62e9\u6240\u9700\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fdb\u884c\u521d\u59cb\u5316\u5e76\u6302\u8f7d\u3002</p> <pre><code># modules/axfs/Cargo.toml\n[features]\ndevfs = [\"dep:axfs_devfs\"]\nramfs = [\"dep:axfs_ramfs\"]\nprocfs = [\"dep:axfs_ramfs\"]\nsysfs = [\"dep:axfs_ramfs\"]\nlwext4_rs = [\"dep:lwext4_rust\"]\nfatfs = [\"dep:fatfs\"]\nmyfs = [\"dep:crate_interface\"]\nuse-ramdisk = []\n\ndefault = [\"devfs\", \"ramfs\", \"fatfs\", \"procfs\", \"sysfs\"]\n</code></pre>"},{"location":"arceos-modules/fs/api/#_3","title":"\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf","text":"<p>ArceOS \u662f\u4e00\u4e2a\u517c\u5bb9 linux \u63a5\u53e3\u7684\u7ec4\u4ef6\u5316\u5185\u6838\uff0c\u56e0\u6b64\u9700\u8981\u6302\u8f7d <code>devfs</code>\u3001<code>procfs</code> \u548c <code>sysfs</code> \u4e09\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a</p> <ol> <li><code>devfs</code>\uff1a\u8bbe\u5907\u6587\u4ef6\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u76ee\u524d\u7684 <code>devfs</code> \u4ec5\u5b9e\u73b0\u4e86 <code>/dev/null</code> \u548c <code>/dev/zero</code> \u8bbe\u5907\u6587\u4ef6\uff0c\u5177\u4f53\u53c2\u8003axfs_vfs::axfs_devfs\u3002</li> <li><code>procfs</code>\uff1a\u662f\u4e00\u4e2a\u57fa\u4e8e\u5185\u5b58\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u5bf9\u8fdb\u7a0b\u4fe1\u606f\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u76ee\u524d\u7684\u5b9e\u73b0\u6709\u5f85\u5f00\u53d1\u4e2d\u3002</li> <li><code>sysfs</code>\uff1a\u7cfb\u7edf\u6587\u4ef6\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u5bf9\u7cfb\u7edf\u4fe1\u606f\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u76ee\u524d\u6709\u5f85\u5f00\u53d1\u4e2d\u3002</li> </ol> <p>\u8fd9\u4e9b\u6587\u4ef6\u7cfb\u7edf\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\uff0c\u63d0\u4f9b\u4e86\u5bf9\u5185\u6838\u6570\u636e\u7ed3\u6784\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u7528\u4e8e\u5728\u5185\u6838\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u4f20\u9012\u7279\u5b9a\u4fe1\u606f\u6216\u5b9e\u73b0\u7279\u5b9a\u529f\u80fd\u3002</p> <p>\u5982\u679c\u5728 Arceos \u4e2d\u542f\u7528\u4e86 <code>axfs</code> \u6a21\u5757\u7684 feature\uff0c\u90a3\u4e48\u521d\u59cb\u5316\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a\u5728\u6839\u76ee\u5f55\u4e2d\u5bf9\u5b83\u4eec\u8fdb\u884c\u6302\u8f7d\u3002</p> <pre><code>pub(crate) fn init_rootfs(disk: crate::dev::Disk) {\n    // ...\n\n    #[cfg(feature = \"devfs\")]\n    root_dir\n        .mount(\"/dev\", mounts::devfs())\n        .expect(\"failed to mount devfs at /dev\");\n\n    #[cfg(feature = \"ramfs\")]\n    root_dir\n        .mount(\"/tmp\", mounts::ramfs())\n        .expect(\"failed to mount ramfs at /tmp\");\n\n    // Mount another ramfs as procfs\n    #[cfg(feature = \"procfs\")]\n    root_dir // should not fail\n        .mount(\"/proc\", mounts::procfs().unwrap())\n        .expect(\"fail to mount procfs at /proc\");\n\n    // Mount another ramfs as sysfs\n    #[cfg(feature = \"sysfs\")]\n    root_dir // should not fail\n        .mount(\"/sys\", mounts::sysfs().unwrap())\n        .expect(\"fail to mount sysfs at /sys\");\n\n    // ...\n}\n</code></pre>"},{"location":"arceos-modules/fs/api/#_4","title":"\u6839\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u6839\u6587\u4ef6\u7cfb\u7edf\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u57fa\u7840\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u90fd\u9700\u8981\u6302\u8f7d\u5728\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002</p> <p>\u5728 ArceOS \u4e2d\uff0c\u5f00\u53d1\u8005\u901a\u8fc7\u6539\u53d8 feature \u9009\u62e9\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6839\u6587\u4ef6\u7cfb\u7edf\u9009\u62e9\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u4f9d\u6b21\u4e3a <code>myfs</code>\u3001<code>lwext4_rs</code>\u3001<code>fatfs</code>\u3002\u5982\u679c\u6ca1\u6709\u9009\u62e9\u4efb\u4f55\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684 <code>feature</code>\uff0c\u5219\u7f16\u8bd1\u9519\u8bef\u3002</p> <pre><code>pub(crate) fn init_rootfs(disk: crate::dev::Disk) {\n    cfg_if::cfg_if! {\n        if #[cfg(feature = \"myfs\")] { // override the default filesystem\n            let main_fs = fs::myfs::new_myfs(disk);\n        } else if #[cfg(feature = \"lwext4_rs\")] {\n            static EXT4_FS: LazyInit&lt;Arc&lt;fs::lwext4_rust::Ext4FileSystem&gt;&gt; = LazyInit::new();\n            EXT4_FS.init_once(Arc::new(fs::lwext4_rust::Ext4FileSystem::new(disk)));\n            let main_fs = EXT4_FS.clone();\n        } else if #[cfg(feature = \"fatfs\")] {\n            static FAT_FS: LazyInit&lt;Arc&lt;fs::fatfs::FatFileSystem&gt;&gt; = LazyInit::new();\n            FAT_FS.init_once(Arc::new(fs::fatfs::FatFileSystem::new(disk)));\n            FAT_FS.init();\n            let main_fs = FAT_FS.clone();\n        }\n    }\n\n    let root_dir = RootDirectory::new(main_fs);\n\n    // ...\n}\n</code></pre>"},{"location":"arceos-modules/fs/api/#_5","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u7cfb\u7edf","text":"<p>ArceOS \u5141\u8bb8\u5f00\u53d1\u8005\u5728\u7528\u6237\u5185\u6838\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ea\u9700\u8981\u5b8c\u6210\u4e24\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u5728\u7528\u6237\u5e94\u7528\u7684 <code>Cargo.toml</code> \u4e2d\u6dfb\u52a0\u5bf9 <code>myfs</code> \u7684 feature\uff0c\u4e00\u822c\u901a\u8fc7\u5bf9 <code>axstd/myfs</code> \u7684\u4f9d\u8d56\u6765\u5b9e\u73b0\u3002</li> <li>\u5b9e\u73b0 <code>MyFileSystemIfImpl</code> \u63a5\u53e3</li> </ol> <pre><code>/// The interface to define custom filesystems in user apps.\n#[crate_interface::def_interface]\npub trait MyFileSystemIf {\n    /// Creates a new instance of the filesystem with initialization.\n    ///\n    /// TODO: use generic disk type\n    fn new_myfs(disk: Disk) -&gt; Arc&lt;dyn VfsOps&gt;;\n}\n\npub(crate) fn new_myfs(disk: Disk) -&gt; Arc&lt;dyn VfsOps&gt; {\n    crate_interface::call_interface!(MyFileSystemIf::new_myfs(disk))\n}\n</code></pre> <p>\u8fd9\u91cc <code>#[crate_interface::def_interface]</code> \u662f crate_interface \u63d0\u4f9b\u7684\u5b8f\uff0c\u901a\u8fc7\u5728\u94fe\u63a5\u65f6\u901a\u8fc7\u7b26\u53f7\u5c06\u63a5\u53e3\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0\u8fde\u63a5\u8d77\u6765\u5b9e\u73b0\u4e86\u4f9d\u8d56\u6ce8\u5165\u3002\u6700\u540e\uff0c\u4ece\u7528\u6237\u89c6\u89d2\u770b <code>modules/axfs/src/fs/myfs.rs</code> \u4f1a\u6210\u529f\u8f6c\u6362\u4e3a\u7528\u6237\u5185\u6838\u4e2d\u5b9a\u4e49\u7684\u5177\u4f53\u5b9e\u73b0\u3002</p> <p>\u4e0b\u9762\u4ee5 ArceOS \u9879\u76ee\u4e0b\u7684 <code>examples/shell</code> \u4e3a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> <ol> <li> <p>\u6dfb\u52a0\u5bf9 <code>myfs</code> \u7684\u4f9d\u8d56     <pre><code># examples/shell/Cargo.toml\n\n[features]\nuse-ramfs = [\"axstd/myfs\", \"dep:axfs_vfs\", \"dep:axfs_ramfs\", \"dep:crate_interface\"]\ndefault = []\n\n[dependencies]\naxfs_vfs = { version = \"0.1\", optional = true }\naxfs_ramfs = { version = \"0.1\", optional = true }\ncrate_interface = { version = \"0.1\", optional = true }\naxstd = { workspace = true, features = [\"alloc\", \"fs\"], optional = true }\n</code></pre></p> </li> <li> <p>\u5b9e\u73b0 <code>MyFileSystemIfImpl</code> \u63a5\u53e3     <pre><code>// examples/shell/src/ramfs.rs\n\nstruct MyFileSystemIfImpl;\n\n#[crate_interface::impl_interface]\nimpl MyFileSystemIf for MyFileSystemIfImpl {\n    fn new_myfs(_disk: AxDisk) -&gt; Arc&lt;dyn VfsOps&gt; {\n        Arc::new(RamFileSystem::new())\n    }\n}\n</code></pre></p> </li> </ol> <p>\u968f\u540e\uff0c\u5f53 ArceOS \u542f\u52a8\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528 <code>MyFileSystemIfImpl::new_myfs</code> \u51fd\u6570\u6765\u521b\u5efa\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\uff0c\u5e76\u5c06\u5176\u6302\u8f7d\u5230\u6839\u76ee\u5f55\u4e0a\u3002</p> <pre><code>pub(crate) fn init_rootfs(disk: crate::dev::Disk) {\n    cfg_if::cfg_if! {\n        if #[cfg(feature = \"myfs\")] { // override the default filesystem\n            let main_fs = fs::myfs::new_myfs(disk);\n        } else if #[cfg(feature = \"lwext4_rs\")] {\n            // ...\n        } else if #[cfg(feature = \"fatfs\")] {\n            // ...\n        }\n    }\n\n    let root_dir = RootDirectory::new(main_fs);\n}\n</code></pre>"},{"location":"arceos-modules/fs/vfs/","title":"ArceOS \u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0","text":"<p>\u5728 ArceOS \u4e2d\uff0c\u6587\u4ef6\u7cfb\u7edf\u81f3\u5c11\u5206\u4e3a\u4e09\u5c42\uff1a</p> <ol> <li>\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u5c42\uff1a\u5305\u62ec\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\uff0c\u5982 <code>ramfs</code>\u3001<code>devfs</code>\u3001<code>fatfs</code> \u548c <code>ext4</code> \u7b49</li> <li>\u6587\u4ef6\u7cfb\u7edf\u517c\u5bb9\u5c42\uff1a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u5bf9\u8c61 <code>dyn VfsNodeOps</code> \u4f9b\u4e0a\u5c42\u8c03\u7528\uff0c\u4e0b\u5c42\u7684\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u53ea\u9700\u8981\u5b9e\u73b0 <code>VfsOps</code> \u548c <code>VfsNodeOps</code> trait \u5373\u53ef\u63a5\u5165 ArceOS \u7684\u6587\u4ef6\u7cfb\u7edf\u6846\u67b6\u4e2d</li> <li>\u7528\u6237\u63a5\u53e3\u5c42\uff1a\u6700\u7ec8\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u6587\u4ef6\u7cfb\u7edf API</li> </ol>"},{"location":"arceos-modules/fs/vfs/#_1","title":"\u6a21\u5757\u7ec4\u7ec7","text":"<pre><code>axfs\n\u251c\u2500\u2500 Cargo.toml  - Cargo \u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 resources\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 create_test_img.sh  - \u521b\u5efa\u6d4b\u8bd5\u7528\u7684\u78c1\u76d8\u955c\u50cf\u811a\u672c\n\u2514\u2500\u2500 src\n \u00a0\u00a0 \u251c\u2500\u2500 api         - std-like API\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dir.rs  - \u76ee\u5f55\u76f8\u5173\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 file.rs - \u6587\u4ef6\u76f8\u5173\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 mod.rs  \n \u00a0\u00a0 \u251c\u2500\u2500 dev.rs  - \u6587\u4ef6\u7cfb\u7edf\u8bbe\u5907\u5b9a\u4e49\n \u00a0\u00a0 \u251c\u2500\u2500 fops.rs - \u6587\u4ef6/\u76ee\u5f55\u7ed3\u6784\u4f53\u4ee5\u53ca\u64cd\u4f5c\n \u00a0\u00a0 \u251c\u2500\u2500 fs\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fatfs.rs        - FAT \u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u73b0\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 lwext4_rust.rs  - Rust \u5b9e\u73b0\u7684 Ext4 \u6587\u4ef6\u7cfb\u7edf\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 myfs.rs         - \u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u63a5\u53e3\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mod.rs\n \u00a0\u00a0 \u251c\u2500\u2500 lib.rs      - \u6a21\u5757\u5165\u53e3\n \u00a0\u00a0 \u251c\u2500\u2500 mounts.rs   - \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u76ee\u6807\n \u00a0\u00a0 \u2514\u2500\u2500 root.rs     - \u6839\u76ee\u5f55\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\n</code></pre>"},{"location":"arceos-modules/fs/vfs/#_2","title":"\u6587\u4ef6\u7cfb\u7edf\u517c\u5bb9\u5c42","text":"<p>ArceOS \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u517c\u5bb9\u5c42\uff0c\u5b83\u5411\u5e95\u5c42\u7684\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4f7f\u5f97\u6587\u4ef6\u7cfb\u7edf\u53ea\u9700\u8981\u5b9e\u73b0\u5177\u4f53\u7684 <code>trait</code> \u5373\u53ef\u63a5\u5165 ArceOS \u7684\u6587\u4ef6\u7cfb\u7edf\u6846\u67b6\u4e2d\u3002</p> <p>\u5927\u81f4\u53ef\u4ee5\u5212\u5206\u4e3a\u4ee5\u4e0b\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ol> <li><code>axfs_vfs</code> \u4e3b\u8981\u4e3a\u4e0b\u5c42\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u3002</li> <li><code>axfs</code> \u5c01\u88c5 <code>axfs_vfs</code> \u4e2d\u7684 <code>VfsOps</code> \u548c <code>VfsNodeOps</code> trait\uff0c\u9762\u5411\u7528\u6237\u63d0\u4f9b\u6587\u4ef6\u7cfb\u7edf\u66f4\u9ad8\u5c42\u6b21\u7684\u62bd\u8c61\u3002</li> </ol>"},{"location":"arceos-modules/fs/vfs/#_3","title":"\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u63a5\u53e3","text":"<p><code>axfs_vfs</code>\u6a21\u5757\u4e2d\u6709\u4e24\u4e2a\u6838\u5fc3\u7684 trait\uff0c\u5206\u522b\u662f <code>VfsOps</code> \u548c <code>VfsNodeOps</code>\uff0c\u8fd9\u4e24\u4e2a trait \u7684\u5b9e\u73b0\u662f\u6587\u4ef6\u7cfb\u7edf\u63a5\u5165 ArceOS \u7684\u5173\u952e\u3002</p> <ul> <li>trait VfsNodeOps\uff1a\u5b9a\u4e49\u4e86\u6587\u4ef6\u7cfb\u7edf\u8282\u70b9\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5982\u6253\u5f00\u3001\u8bfb\u53d6\u3001\u5199\u5165\u3001\u5220\u9664\u7b49\uff0c\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8282\u70b9\uff08\u6587\u4ef6/\u76ee\u5f55\uff09\u7684\u6838\u5fc3\u63a5\u53e3\uff1a</li> </ul> <pre><code>/// Node (file/directory) operations.\npub trait VfsNodeOps: Send + Sync {\n    /// Do something when the node is opened.\n    fn open(&amp;self) -&gt; VfsResult;\n    /// Do something when the node is closed.\n    fn release(&amp;self) -&gt; VfsResult;\n    /// Get the attributes of the node.\n    fn get_attr(&amp;self) -&gt; VfsResult&lt;VfsNodeAttr&gt;;\n\n\n    // file operations:\n\n    /// Read data from the file at the given offset.\n    fn read_at(&amp;self, _offset: u64, _buf: &amp;mut [u8]) -&gt; VfsResult&lt;usize&gt;;\n    /// Write data to the file at the given offset.\n    fn write_at(&amp;self, _offset: u64, _buf: &amp;[u8]) -&gt; VfsResult&lt;usize&gt;;\n    /// Flush the file, synchronize the data to disk.\n    fn fsync(&amp;self) -&gt; VfsResult;\n    /// Truncate the file to the given size.\n    fn truncate(&amp;self, _size: u64) -&gt; VfsResult;\n\n\n    // directory operations:\n\n    /// Get the parent directory of this directory.\n    ///\n    /// Return `None` if the node is a file.\n    fn parent(&amp;self) -&gt; Option&lt;VfsNodeRef&gt;;\n    /// Lookup the node with given `path` in the directory.\n    ///\n    /// Return the node if found.\n    fn lookup(self: Arc&lt;Self&gt;, _path: &amp;str) -&gt; VfsResult&lt;VfsNodeRef&gt;;\n    /// Create a new node with the given `path` in the directory\n    ///\n    /// Return [`Ok(())`](Ok) if it already exists.\n    fn create(&amp;self, _path: &amp;str, _ty: VfsNodeType) -&gt; VfsResult;\n    /// Remove the node with the given `path` in the directory.\n    fn remove(&amp;self, _path: &amp;str) -&gt; VfsResult;\n    /// Read directory entries into `dirents`, starting from `start_idx`.\n    fn read_dir(&amp;self, _start_idx: usize, _dirents: &amp;mut [VfsDirEntry]) -&gt; VfsResult&lt;usize&gt;;\n    /// Renames or moves existing file or directory.\n    fn rename(&amp;self, _src_path: &amp;str, _dst_path: &amp;str) -&gt; VfsResult;\n\n\n    /// Convert `&amp;self` to [`&amp;dyn Any`][1] that can use\n    /// [`Any::downcast_ref`][2].\n    ///\n    /// [1]: core::any::Any\n    /// [2]: core::any::Any#method.downcast_ref\n    fn as_any(&amp;self) -&gt; &amp;dyn core::any::Any;\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u8282\u70b9\u64cd\u4f5c\uff1a<code>open</code>\u3001<code>release</code>\u3001<code>get_attr</code></li> <li>\u6587\u4ef6\u64cd\u4f5c\uff1a<code>read_at</code>\u3001<code>write_at</code>\u3001<code>fsync</code>\u3001<code>truncate</code></li> <li>\u76ee\u5f55\u64cd\u4f5c\uff1a<code>parent</code>\u3001<code>lookup</code>\u3001<code>create</code>\u3001<code>remove</code>\u3001<code>read_dir</code>\u3001<code>rename</code></li> <li>\u5176\u4ed6\u64cd\u4f5c\uff1a<code>as_any</code></li> </ol> <p>\u8fd9\u91cc\u89e3\u91ca\u5176\u4e2d\u7684\u51e0\u4e2a\u51fd\u6570\uff1a</p> <ol> <li><code>get_attr</code>\uff1a\u83b7\u53d6\u8282\u70b9\u7684\u5c5e\u6027\uff0c\u8fd4\u56de <code>VfsNodeAttr</code>\uff0c\u5305\u542b\u8282\u70b9\u7684\u6587\u4ef6\u7c7b\u578b\u3001\u5927\u5c0f\u3001\u8bfb\u5199\u6743\u9650\u7b49\u4fe1\u606f</li> <li><code>truncate</code>\uff1a\u8c03\u6574\u6587\u4ef6\u7684\u5927\u5c0f\u5230\u6307\u5b9a\u5927\u5c0f\uff0c\u5982\u679c\u6307\u5b9a\u5927\u5c0f\u5c0f\u4e8e\u5f53\u524d\u6587\u4ef6\u5927\u5c0f\uff0c\u5219\u4f1a\u4e22\u5f03\u591a\u4f59\u7684\u90e8\u5206\uff1b\u82e5\u679c\u6307\u5b9a\u5927\u5c0f\u5927\u4e8e\u5f53\u524d\u6587\u4ef6\u5927\u5c0f\uff0c\u5219\u4f1a\u5728\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u7a7a\u5b57\u8282\uff08<code>\\0</code>\uff09</li> <li><code>lookup</code>\uff1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u6307\u5b9a\u8def\u5f84\u7684\u8282\u70b9\uff0c\u8fd4\u56de\u8282\u70b9\u7684\u5f15\u7528</li> <li><code>read_dir</code>\uff1a\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 <code>VfsDirEntry</code>\uff0c\u8fd4\u56de\u8bfb\u53d6\u7684\u6570\u91cf</li> <li><code>as_any</code>\uff1a\u5c06\u5f53\u524d\u8282\u70b9\u8f6c\u6362\u4e3a <code>&amp;dyn Any</code>\uff0c\u4ee5\u4fbf\u4e8e\u540e\u7eed\u7684\u7c7b\u578b\u8f6c\u6362</li> </ol> <ul> <li>trait VfsOps\uff1a\u5b9a\u4e49\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5982\u6302\u8f7d\u3001\u5378\u8f7d\u3001\u83b7\u53d6\u6839\u8282\u70b9\u7b49\uff0c\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u5165\u53e3\u63a5\u53e3\uff1a</li> </ul> <pre><code>/// Filesystem operations.\npub trait VfsOps: Send + Sync {\n    /// Do something when the filesystem is mounted.\n    fn mount(&amp;self, _path: &amp;str, _mount_point: VfsNodeRef) -&gt; VfsResult;\n    /// Do something when the filesystem is unmounted.\n    fn umount(&amp;self) -&gt; VfsResult;\n    /// Format the filesystem.\n    fn format(&amp;self) -&gt; VfsResult;\n    /// Get the attributes of the filesystem.\n    fn statfs(&amp;self) -&gt; VfsResult&lt;FileSystemInfo&gt;;\n    /// Get the root directory of the filesystem.\n    fn root_dir(&amp;self) -&gt; VfsNodeRef;\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u89e3\u91ca\u5176\u4e2d\u7684\u4e09\u4e2a\u51fd\u6570\uff1a</p> <ul> <li><code>format</code>\uff1a\u5bf9\u78c1\u76d8\u8fdb\u884c\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u5316</li> <li><code>statfs</code>\uff1a\u83b7\u53d6\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u4fe1\u606f\uff08\u76ee\u524d\u6ca1\u6709\u88ab\u4f7f\u7528\uff09</li> <li><code>root_dir</code>\uff1a\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7cfb\u7edf\u7684\u6839\u76ee\u5f55</li> </ul>"},{"location":"arceos-modules/fs/vfs/#_4","title":"\u7528\u6237\u89c6\u89d2\u7684\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u73b0\u5728 <code>axfs_vfs</code> \u5df2\u7ecf\u5b9a\u4e49\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5c06\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u7684\u62bd\u8c61\u5c01\u88c5\u6210\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u63a5\u53e3\u3002</p> <p><code>axfs</code> \u6a21\u5757\u4e2d\u5b9a\u4e49\u4e86 <code>File</code> \u548c <code>Directory</code> \u7ed3\u6784\u4f53\uff0c\u5206\u522b\u8868\u793a\u6253\u5f00\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u5bf9\u8c61\uff0c\u8c03\u7528\u8be5\u6a21\u5757\u7684\u7528\u6237\u4f1a\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e24\u4e2a\u7ed3\u6784\u4f53\u6765\u8fdb\u884c\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u64cd\u4f5c\u3002</p> <p>\u8fd9\u4e24\u4e2a\u7ed3\u6784\u4f53\u662f\u5bf9 <code>VfsNodeRef</code> \u7684\u5c01\u88c5\uff0c\u5b83\u4eec\u5728\u5c01\u88c5\u7684\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\uff1a</p> <ol> <li>\u4f7f\u7528 <code>WithCap</code> \u5305\u88c5\uff0c\u589e\u52a0\u4e86\u5bf9\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u6743\u9650\u63a7\u5236\u529f\u80fd\uff0c\u5185\u90e8\u7b80\u5355\u6dfb\u52a0\u4e86\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u7684\u6743\u9650\u63a7\u5236\u529f\u80fd\uff0c\u5177\u4f53\u53c2\u8003cap_access\u3002</li> <li><code>is_append</code>\uff1a\u8868\u793a\u6587\u4ef6\u662f\u5426\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u3002\u4f8b\u5982 <code>open(\"/tmp/xxx\", \"a\")</code> \u6253\u5f00\u6587\u4ef6\u65f6\uff0c<code>is_append</code> \u4e3a <code>true</code>\uff0c\u5e76\u4e14 <code>offset</code> \u6307\u5411\u6587\u4ef6\u672b\u5c3e\u3002</li> <li><code>offset</code>\uff1a\u8868\u793a\u6587\u4ef6\u7684\u8bfb\u5199\u4f4d\u7f6e\u3002</li> <li><code>entry_idx</code>\uff1a\u8868\u793a\u76ee\u5f55\u7684\u8bfb\u5199\u4f4d\u7f6e\u3002</li> </ol> <pre><code>/// \u4e00\u4e2a\u5bf9 [`Arc&lt;dyn VfsNodeOps&gt;`] \u7684\u5305\u88c5\u3002\npub type VfsNodeRef = Arc&lt;dyn VfsNodeOps&gt;;\n\n\n/// \u6587\u4ef6\u7ed3\u6784\u4f53\uff1a\u5305\u542b\u6253\u5f00\u7684\u6743\u9650\u548c\u4e00\u4e2a\u6e38\u6807\u3002\npub struct File {\n    node: WithCap&lt;VfsNodeRef&gt;,\n    is_append: bool,\n    offset: u64,\n}\n\n/// \u76ee\u5f55\u7ed3\u6784\u4f53\uff1a\u5305\u542b\u6253\u5f00\u7684\u6743\u9650\u548c\u4e00\u4e2a\u6e38\u6807\uff0c\u7528\u4e8e\u8bfb\u53d6\u76ee\u5f55\u5185\u5bb9\u3002\npub struct Directory {\n    node: WithCap&lt;VfsNodeRef&gt;,\n    entry_idx: usize,\n}\n</code></pre> <p>\u73b0\u5728\u53ea\u8981\u6709\u6839\u76ee\u5f55\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>File</code> \u548c <code>Directory</code> \u7ed3\u6784\u4f53\u6765\u5b8c\u6210\u9488\u5bf9\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u64cd\u4f5c\u4e86\u3002</p>"},{"location":"arceos-modules/fs/vfs/#_5","title":"\u63a5\u5165\u4e0d\u540c\u6587\u4ef6\u7cfb\u7edf","text":"<p>ArceOS \u76ee\u524d\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528<code>ramfs</code>\u3001<code>devfs</code>\u3001<code>fatfs</code>\u548c <code>ext4</code> \u6587\u4ef6\u7cfb\u7edf\u4e86\uff0c\u524d\u4e24\u4e2a\u662f\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f\u57fa\u4e8e\u5185\u5b58\u548c\u8bbe\u5907\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u540e\u4e24\u4e2a\u662f\u57fa\u4e8e\u78c1\u76d8\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>\u73b0\u5728\u4ee5 <code>fatfs</code> \u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u5411 ArceOS \u4e2d\u63a5\u5165\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u4e2d <code>fatfs</code> \u7684\u5177\u4f53\u5b9e\u73b0\u4f7f\u7528\u4e86 rust-fatfs\u3002\u5f53\u7136\uff0c\u7531\u4e8e\u4ee3\u7801\u91cf\u8f83\u5927\uff0c\u8fd9\u91cc\u53ea\u4f1a\u8bb2\u89e3\u5982\u4f55\u63a5\u5165\u6587\u4ef6\u7cfb\u7edf\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003 <code>arceos/modules/fs/fatfs.rs</code>\u3002</p>"},{"location":"arceos-modules/fs/vfs/#_6","title":"\u5c01\u88c5\u539f\u59cb\u6570\u636e\u7ed3\u6784","text":"<p>\u5f53\u524d <code>trait</code> \u548c <code>fatfs</code> \u7684\u7ed3\u6784\u4f53\u90fd\u4e0d\u5728\u5f53\u524d\u6a21\u5757\u4e2d\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u5bf9 <code>rust-fatfs</code> \u7684\u539f\u59cb\u7ed3\u6784\u4f53\u76f4\u63a5\u8fdb\u884c <code>impl</code>\uff0c\u540c\u65f6\u7531\u4e8e\u6211\u4eec\u9700\u8981\u6dfb\u52a0 <code>Mutex</code> \u6765\u5b9e\u73b0\u591a\u7ebf\u7a0b\u5b89\u5168\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8981\u5bf9 <code>fatfs</code> \u7684\u6570\u636e\u7ed3\u6784\u5148\u8fdb\u884c\u4e00\u5c42\u5c01\u88c5\u3002 <pre><code>pub struct FatFileSystem {\n    inner: fatfs::FileSystem&lt;Disk, NullTimeProvider, LossyOemCpConverter&gt;,\n    root_dir: UnsafeCell&lt;Option&lt;VfsNodeRef&gt;&gt;,\n}\n\n/// A wrapper of [`fatfs::File`].\npub struct FileWrapper&lt;'a, IO: IoTrait&gt;(Mutex&lt;File&lt;'a, IO, NullTimeProvider, LossyOemCpConverter&gt;&gt;);\n/// A wrapper of [`fatfs::Dir`].\npub struct DirWrapper&lt;'a, IO: IoTrait&gt;(Dir&lt;'a, IO, NullTimeProvider, LossyOemCpConverter&gt;);\n\npub trait IoTrait: Read + Write + Seek {}\n</code></pre></p>"},{"location":"arceos-modules/fs/vfs/#_7","title":"\u9002\u914d\u865a\u62df\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u8fd9\u91cc\u7ed9\u51fa <code>FileWrapper</code> \u7684\u5b9e\u73b0\uff0c<code>DirWrapper</code> \u7684\u5b9e\u73b0\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u540c\u65f6\u8fd9\u91cc\u8fd8\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a</p> <p>\u9996\u5148\uff0c\u7b2c\u4e8c\u884c <code>axfs_vfs::impl_vfs_non_dir_default! {}</code> \u63d0\u4f9b\u4e86\u975e\u76ee\u5f55\u8282\u70b9\u7684\u9ed8\u8ba4\u7684\u5b9e\u73b0\uff0c\u4e3b\u8981\u662f <code>lookup</code>\u3001<code>create</code>\u3001<code>remove</code> \u548c <code>read_dir</code> \u7684\u5b9e\u73b0\u3002</p> <p>\u5176\u6b21\uff0c<code>fatfs</code> \u4e2d\u4e0d\u652f\u6301\u6743\u9650\u63a7\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c06\u6743\u9650\u8bbe\u7f6e\u4e3a <code>0o755</code>\uff0c\u5373 <code>rwxr-xr-x</code>\u3002</p> <pre><code>impl&lt;IO: IoTrait&gt; VfsNodeOps for FileWrapper&lt;'static, IO&gt; {\n    axfs_vfs::impl_vfs_non_dir_default! {}\n\n    fn get_attr(&amp;self) -&gt; VfsResult&lt;VfsNodeAttr&gt; {\n        let size = self.0.lock().seek(SeekFrom::End(0)).map_err(as_vfs_err)?;\n        let blocks = (size + BLOCK_SIZE as u64 - 1) / BLOCK_SIZE as u64;\n        // FAT fs doesn't support permissions, we just set everything to 755\n        let perm = VfsNodePerm::from_bits_truncate(0o755);\n        Ok(VfsNodeAttr::new(perm, VfsNodeType::File, size, blocks))\n    }\n\n    fn read_at(&amp;self, offset: u64, buf: &amp;mut [u8]) -&gt; VfsResult&lt;usize&gt; {\n        let mut file = self.0.lock();\n        file.seek(SeekFrom::Start(offset)).map_err(as_vfs_err)?;\n        file.read(buf).map_err(as_vfs_err)\n    }\n\n    fn write_at(&amp;self, offset: u64, buf: &amp;[u8]) -&gt; VfsResult&lt;usize&gt; {\n        let mut file = self.0.lock();\n        file.seek(SeekFrom::Start(offset)).map_err(as_vfs_err)?;\n        file.write(buf).map_err(as_vfs_err)\n    }\n\n    fn truncate(&amp;self, size: u64) -&gt; VfsResult {\n        let mut file = self.0.lock();\n        file.seek(SeekFrom::Start(size)).map_err(as_vfs_err)?;\n        file.truncate().map_err(as_vfs_err)\n    }\n}\n</code></pre>"},{"location":"arceos-modules/fs/vfs/#_8","title":"\u5b9a\u4e49\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u5bf9\u8c61","text":"<p>\u5728 <code>fatfs</code> \u7684\u5b9a\u4e49\u4e2d\uff0c\u9700\u8981\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Read</code>\u3001<code>Write</code> \u548c <code>Seek</code> trait \u7684\u7ed3\u6784\u4f53\u6765\u7ed9 <code>fatfs</code> \u8fdb\u884c\u8bfb\u5199\u7b49\u64cd\u4f5c\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 <code>Disk</code> \u8bbe\u5907\u6765\u4f5c\u4e3a\u88ab\u64cd\u4f5c\u7684\u5bf9\u8c61\u3002</p> <p>\u4e0b\u9762\u662f <code>Disk</code> \u5bf9 <code>Read</code>\u3001<code>Write</code> \u548c <code>Seek</code> trait \u7684\u5b9e\u73b0\uff1a</p> <pre><code>impl fatfs::IoBase for Disk {\n    type Error = ();\n}\n\nimpl IoTrait for Disk {}\n\nimpl Read for Disk {\n    fn read(&amp;mut self, mut buf: &amp;mut [u8]) -&gt; Result&lt;usize, Self::Error&gt; {\n        let mut read_len = 0;\n        while !buf.is_empty() {\n            match self.read_one(buf) {\n                Ok(0) =&gt; break,\n                Ok(n) =&gt; {\n                    let tmp = buf;\n                    buf = &amp;mut tmp[n..];\n                    read_len += n;\n                }\n                Err(_) =&gt; return Err(()),\n            }\n        }\n        Ok(read_len)\n    }\n}\n\nimpl Write for Disk {\n    fn write(&amp;mut self, mut buf: &amp;[u8]) -&gt; Result&lt;usize, Self::Error&gt; {\n        let mut write_len = 0;\n        while !buf.is_empty() {\n            match self.write_one(buf) {\n                Ok(0) =&gt; break,\n                Ok(n) =&gt; {\n                    buf = &amp;buf[n..];\n                    write_len += n;\n                }\n                Err(_) =&gt; return Err(()),\n            }\n        }\n        Ok(write_len)\n    }\n    fn flush(&amp;mut self) -&gt; Result&lt;(), Self::Error&gt; {\n        Ok(())\n    }\n}\n\nimpl Seek for Disk {\n    fn seek(&amp;mut self, pos: SeekFrom) -&gt; Result&lt;u64, Self::Error&gt; {\n        let size = self.size();\n        let new_pos = match pos {\n            SeekFrom::Start(pos) =&gt; Some(pos),\n            SeekFrom::Current(off) =&gt; self.position().checked_add_signed(off),\n            SeekFrom::End(off) =&gt; size.checked_add_signed(off),\n        }\n        .ok_or(())?;\n        if new_pos &gt; size {\n            warn!(\"Seek beyond the end of the block device\");\n        }\n        self.set_position(new_pos);\n        Ok(new_pos)\n    }\n}\n</code></pre> <p>\u6587\u4ef6\u7cfb\u7edf\u8bfb\u5199\u5bf9\u8c61</p> <p>\u6211\u4eec\u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06\u6587\u4ef6\u4f5c\u4e3a\u8bfb\u5199\u5bf9\u8c61\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003 <code>arceos/modules/fs/fatfs.rs</code> \u4e2d\u7684 <code>struct FatFileSystemFromFile</code>\u3002</p>"},{"location":"arceos-modules/fs/vfs/#_9","title":"\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d","text":"<p>\u5b8c\u6210\u4e86\u5bf9 <code>fatfs</code> \u7684\u5c01\u88c5\u540e\uff0c\u542f\u7528 <code>fatfs</code> \u7279\u6027\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5185\u6838\u4e2d\u6302\u8f7d <code>fatfs</code> \u6587\u4ef6\u7cfb\u7edf\uff1a <pre><code>// modules/axfs/src/root.rs\n// fn init_rootfs(disk: crate::dev::Disk);\ncfg_if::cfg_if! {\n    if #[cfg(feature = \"myfs\")] { // override the default filesystem\n        let main_fs = fs::myfs::new_myfs(disk);\n    } else if #[cfg(feature = \"lwext4_rs\")] {\n        static EXT4_FS: LazyInit&lt;Arc&lt;fs::lwext4_rust::Ext4FileSystem&gt;&gt; = LazyInit::new();\n        EXT4_FS.init_once(Arc::new(fs::lwext4_rust::Ext4FileSystem::new(disk)));\n        let main_fs = EXT4_FS.clone();\n    } else if #[cfg(feature = \"fatfs\")] {\n        static FAT_FS: LazyInit&lt;Arc&lt;fs::fatfs::FatFileSystem&gt;&gt; = LazyInit::new();\n        FAT_FS.init_once(Arc::new(fs::fatfs::FatFileSystem::new(disk)));\n        FAT_FS.init();\n        let main_fs = FAT_FS.clone();\n    }\n}\n\nlet root_dir = RootDirectory::new(main_fs);\n</code></pre></p>"},{"location":"arceos-modules/fs/vfs/#_10","title":"\u542f\u52a8\u4e0e\u521d\u59cb\u5316","text":"<p>ArceOS \u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757 <code>axfs</code> \u5c06\u5728\u5185\u6838\u542f\u52a8\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u6267\u884c\u6d41\u5982\u4e0b\uff1a</p>"},{"location":"arceos-modules/fs/vfs/#_11","title":"\u521d\u59cb\u5316\u8bbe\u5907","text":"<p><code>axruntime</code> \u627f\u62c5\u7740\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u57fa\u7840\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u786e\u4fdd\u5185\u6838\u8fd0\u884c\u73af\u5883\u5c31\u7eea\u3002</p> <p><code>axruntime</code> \u4f1a\u5728\u542f\u52a8\u65f6\u8c03\u7528 <code>axdriver</code> \u6a21\u5757\uff0c\u521d\u59cb\u5316\u6240\u6709\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3002\u5f53\u542f\u52a8 <code>fs</code> \u7279\u6027\u65f6\uff0c\u4f1a\u5c06\u5757\u8bbe\u5907\u4f20\u9012\u7ed9 <code>axfs</code> \u6a21\u5757\u521d\u59cb\u5316\u5165\u53e3\u4e2d\u3002</p> <pre><code>/// modules/axruntime/src/lib.rs\n#[cfg_attr(not(test), unsafe(no_mangle))]\npub extern \"C\" fn rust_main(cpu_id: usize, dtb: usize) -&gt; ! {\n    // ...\n    #[cfg(any(feature = \"fs\", feature = \"net\", feature = \"display\"))]\n    {\n        #[allow(unused_variables)]\n        let all_devices = axdriver::init_drivers();\n\n        #[cfg(feature = \"fs\")]\n        axfs::init_filesystems(all_devices.block);\n\n        #[cfg(feature = \"net\")]\n        axnet::init_network(all_devices.net);\n\n        #[cfg(feature = \"display\")]\n        axdisplay::init_display(all_devices.display);\n    }\n    // ...\n}\n</code></pre>"},{"location":"arceos-modules/fs/vfs/#_12","title":"\u521d\u59cb\u5316\u6587\u4ef6\u7cfb\u7edf","text":"<p><code>axfs</code> \u83b7\u53d6\u5230\u7b2c\u4e00\u4e2a\u5757\u8bbe\u5907\u7684\u6240\u6709\u6743\u540e\uff0c\u8c03\u7528 <code>init_rootfs</code> \u51fd\u6570\u5bf9\u6839\u76ee\u5f55\u8fdb\u884c\u521d\u59cb\u5316\u3002</p> <pre><code>/// modules/axfs/src/lib.rs\npub fn init_filesystems(mut blk_devs: AxDeviceContainer&lt;AxBlockDevice&gt;) {\n    info!(\"Initialize filesystems...\");\n\n    let dev = blk_devs.take_one().expect(\"No block device found!\");\n    info!(\"  use block device 0: {:?}\", dev.device_name());\n    self::root::init_rootfs(self::dev::Disk::new(dev));\n}\n</code></pre>"},{"location":"arceos-modules/fs/vfs/#_13","title":"\u6302\u8f7d\u6839\u76ee\u5f55\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u6839\u636e <code>Cargo.toml</code> \u4e2d\u7684 <code>features</code> \u914d\u7f6e\uff0c\u9009\u62e9\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6839\u6587\u4ef6\u7cfb\u7edf\u9009\u62e9\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u4f9d\u6b21\u4e3a <code>myfs</code>\u3001<code>lwext4_rs</code>\u3001<code>fatfs</code>\u3002\u5982\u679c\u6ca1\u6709\u9009\u62e9\u4efb\u4f55\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684 <code>feature</code>\uff0c\u5219\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002</p> <pre><code>pub(crate) fn init_rootfs(disk: crate::dev::Disk) {\n    cfg_if::cfg_if! {\n        if #[cfg(feature = \"myfs\")] { // override the default filesystem\n            let main_fs = fs::myfs::new_myfs(disk);\n        } else if #[cfg(feature = \"lwext4_rs\")] {\n            static EXT4_FS: LazyInit&lt;Arc&lt;fs::lwext4_rust::Ext4FileSystem&gt;&gt; = LazyInit::new();\n            EXT4_FS.init_once(Arc::new(fs::lwext4_rust::Ext4FileSystem::new(disk)));\n            let main_fs = EXT4_FS.clone();\n        } else if #[cfg(feature = \"fatfs\")] {\n            static FAT_FS: LazyInit&lt;Arc&lt;fs::fatfs::FatFileSystem&gt;&gt; = LazyInit::new();\n            FAT_FS.init_once(Arc::new(fs::fatfs::FatFileSystem::new(disk)));\n            FAT_FS.init();\n            let main_fs = FAT_FS.clone();\n        }\n    }\n\n    let root_dir = RootDirectory::new(main_fs);\n    // ...\n}\n</code></pre>"},{"location":"arceos-modules/fs/vfs/#_14","title":"\u6302\u8f7d\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u4e3a\u4e86\u4fdd\u8bc1\u4e0e linux \u7cfb\u7edf\u7684\u517c\u5bb9\u6027\uff0c\u8fd8\u9700\u8981\u57fa\u4e8e <code>features</code> \u7684\u914d\u7f6e\uff0c\u6302\u8f7d\u4e00\u4e9b\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf <code>devfs</code>\u3001<code>procfs</code>\u3001<code>tmp</code> \u548c <code>sysfs</code>\u3002</p> <pre><code>#[cfg(feature = \"devfs\")]\nroot_dir\n    .mount(\"/dev\", mounts::devfs())\n    .expect(\"failed to mount devfs at /dev\");\n\n#[cfg(feature = \"ramfs\")]\nroot_dir\n    .mount(\"/tmp\", mounts::ramfs())\n    .expect(\"failed to mount ramfs at /tmp\");\n\n// Mount another ramfs as procfs\n#[cfg(feature = \"procfs\")]\nroot_dir // should not fail\n    .mount(\"/proc\", mounts::procfs().unwrap())\n    .expect(\"fail to mount procfs at /proc\");\n\n// Mount another ramfs as sysfs\n#[cfg(feature = \"sysfs\")]\nroot_dir // should not fail\n    .mount(\"/sys\", mounts::sysfs().unwrap())\n    .expect(\"fail to mount sysfs at /sys\");\n</code></pre>"},{"location":"arceos-modules/fs/vfs/#_15","title":"\u6ce8\u518c\u76ee\u5f55\u8282\u70b9","text":"<p>\u6700\u540e\uff0c\u5c06\u6839\u76ee\u5f55\u3001\u5f53\u524d\u76ee\u5f55\u7684 <code>VfsNodeRef</code> \u6ce8\u518c\u5230 <code>axfs</code> \u7684\u5168\u5c40\u53d8\u91cf\u4e2d\uff0c\u4f9b\u5176\u4ed6\u6a21\u5757\u4f7f\u7528\u3002</p> <pre><code>ROOT_DIR.init_once(Arc::new(root_dir));\nCURRENT_DIR.init_new(Mutex::new(ROOT_DIR.clone()));\nCURRENT_DIR_PATH.init_new(Mutex::new(\"/\".into()));\n</code></pre>"},{"location":"arceos-modules/hal/customization/","title":"\u81ea\u5b9a\u4e49\u5e73\u53f0\u7ec6\u8282\u5b9e\u73b0","text":"<p>TODO</p>"},{"location":"arceos-modules/memory/","title":"\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6a21\u5757","text":"<p>\u865a\u62df\u5185\u5b58\u5206\u914d\u6a21\u5757\u662f ArceOS \u5185\u6838\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u7ba1\u7406\u865a\u62df\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u3002\u5b83\u63d0\u4f9b\u4e86\u865a\u62df\u5185\u5b58\u7684\u5206\u914d\u3001\u91ca\u653e\u548c\u6620\u5c04\u529f\u80fd\uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u865a\u62df\u5185\u5b58\u7684\u7ba1\u7406\u80fd\u529b\u3002</p>"},{"location":"arceos-modules/memory/api/","title":"\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6a21\u5757\u63a5\u53e3","text":""},{"location":"arceos-modules/memory/api/#1","title":"1. \u7ed3\u6784\u4f53\u6982\u8ff0","text":"<p><code>AddrSpace</code> \u7ed3\u6784\u4f53\u8868\u793a\u865a\u62df\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u5305\u542b\u865a\u62df\u5730\u5740\u8303\u56f4\u3001\u5185\u5b58\u533a\u57df\u96c6\u5408\u4ee5\u53ca\u9875\u8868\u3002\u901a\u8fc7\u8be5\u7ed3\u6784\u4f53\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u5bf9\u865a\u62df\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u521b\u5efa\u3001\u6620\u5c04\u3001\u89e3\u9664\u6620\u5c04\u3001\u8bfb\u5199\u6570\u636e\u7b49\u64cd\u4f5c\u3002</p>"},{"location":"arceos-modules/memory/api/#2","title":"2. \u63a5\u53e3\u6587\u6863","text":""},{"location":"arceos-modules/memory/api/#21","title":"2.1 \u57fa\u672c\u4fe1\u606f\u67e5\u8be2\u63a5\u53e3","text":"<ul> <li> <p><code>base(&amp;self) -&gt; VirtAddr</code></p> <ul> <li>\u529f\u80fd\uff1a\u8fd4\u56de\u5730\u5740\u7a7a\u95f4\u7684\u57fa\u5730\u5740\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u57fa\u5730\u5740</li> </ul> </li> <li> <p><code>end(&amp;self) -&gt; VirtAddr</code></p> <ul> <li>\u529f\u80fd\uff1a\u8fd4\u56de\u5730\u5740\u7a7a\u95f4\u7684\u7ed3\u675f\u5730\u5740\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u7ed3\u675f\u5730\u5740</li> </ul> </li> <li> <p><code>size(&amp;self) -&gt; usize</code></p> <ul> <li>\u529f\u80fd\uff1a\u8fd4\u56de\u5730\u5740\u7a7a\u95f4\u7684\u5927\u5c0f\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>usize</code> \u7c7b\u578b\u7684\u5730\u5740\u7a7a\u95f4\u5927\u5c0f</li> </ul> </li> <li> <p><code>page_table(&amp;self) -&gt; &amp;PageTable</code></p> <ul> <li>\u529f\u80fd\uff1a\u8fd4\u56de\u5185\u90e8\u9875\u8868\u7684\u5f15\u7528\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>&amp;PageTable</code> \u7c7b\u578b\u7684\u9875\u8868\u5f15\u7528</li> </ul> </li> <li> <p><code>page_table_root(&amp;self) -&gt; PhysAddr</code></p> <ul> <li>\u529f\u80fd\uff1a\u8fd4\u56de\u5185\u90e8\u9875\u8868\u7684\u6839\u7269\u7406\u5730\u5740\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>PhysAddr</code> \u7c7b\u578b\u7684\u9875\u8868\u6839\u7269\u7406\u5730\u5740</li> </ul> </li> <li> <p><code>contains_range(&amp;self, start: VirtAddr, size: usize) -&gt; bool</code></p> <ul> <li>\u529f\u80fd\uff1a\u68c0\u67e5\u5730\u5740\u7a7a\u95f4\u662f\u5426\u5305\u542b\u7ed9\u5b9a\u7684\u5730\u5740\u8303\u56f4\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u5730\u5740\u8303\u56f4\u5927\u5c0f</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>bool</code> \u7c7b\u578b\uff0c\u8868\u793a\u662f\u5426\u5305\u542b\u8be5\u5730\u5740\u8303\u56f4</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#22","title":"2.2 \u521b\u5efa\u4e0e\u521d\u59cb\u5316\u63a5\u53e3","text":"<ul> <li><code>new_empty(base: VirtAddr, size: usize) -&gt; AxResult&lt;Self&gt;</code><ul> <li>\u529f\u80fd\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u5730\u5740\u7a7a\u95f4\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>base</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u57fa\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u5730\u5740\u7a7a\u95f4\u5927\u5c0f</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult&lt;Self&gt;</code> \u7c7b\u578b\uff0c\u8868\u793a\u521b\u5efa\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#23","title":"2.3 \u9875\u8868\u6620\u5c04\u64cd\u4f5c\u63a5\u53e3","text":"<ul> <li> <p><code>copy_mappings_from(&amp;mut self, other: &amp;AddrSpace) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u4ece\u53e6\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u590d\u5236\u9875\u8868\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>other</code>\uff1a<code>&amp;AddrSpace</code> \u7c7b\u578b\u7684\u53e6\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u5f15\u7528</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> <li>\u6ce8\u610f\u4e8b\u9879\uff1a\u590d\u5236\u7684\u9875\u8868\u9879\u5728\u4e22\u5f03\u65f6\u4f1a\u88ab\u6e05\u9664\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u539f\u9875\u8868\u3002\u53ef\u4f7f\u7528 <code>clear_mappings</code> \u89e3\u51b3\u3002</li> </ul> </li> <li> <p><code>clear_mappings(&amp;mut self, range: VirtAddrRange)</code></p> <ul> <li>\u529f\u80fd\uff1a\u6e05\u9664\u7ed9\u5b9a\u5730\u5740\u8303\u56f4\u5185\u7684\u9875\u8868\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>range</code>\uff1a<code>VirtAddrRange</code> \u7c7b\u578b\u7684\u5730\u5740\u8303\u56f4</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a\u65e0</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#24","title":"2.4 \u5185\u5b58\u533a\u57df\u7ba1\u7406\u63a5\u53e3","text":"<ul> <li> <p><code>find_free_area(&amp;self, hint: VirtAddr, size: usize, limit: VirtAddrRange) -&gt; Option&lt;VirtAddr&gt;</code></p> <ul> <li>\u529f\u80fd\uff1a\u67e5\u627e\u4e00\u4e2a\u53ef\u4ee5\u5bb9\u7eb3\u7ed9\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f2\u533a\u57df\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>hint</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u63d0\u793a\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u6240\u9700\u5927\u5c0f</li> <li><code>limit</code>\uff1a<code>VirtAddrRange</code> \u7c7b\u578b\u7684\u9650\u5236\u8303\u56f4</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>Option&lt;VirtAddr&gt;</code> \u7c7b\u578b\uff0c\u8868\u793a\u7a7a\u95f2\u533a\u57df\u7684\u8d77\u59cb\u5730\u5740\uff0c\u5982\u679c\u672a\u627e\u5230\u5219\u8fd4\u56de <code>None</code></li> </ul> </li> <li> <p><code>map_linear(&amp;mut self, start_vaddr: VirtAddr, start_paddr: PhysAddr, size: usize, flags: MappingFlags) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7ebf\u6027\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start_vaddr</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>start_paddr</code>\uff1a<code>PhysAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u6620\u5c04\u5927\u5c0f</li> <li><code>flags</code>\uff1a<code>MappingFlags</code> \u7c7b\u578b\u7684\u6620\u5c04\u6807\u5fd7</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> <li> <p><code>map_alloc(&amp;mut self, start: VirtAddr, size: usize, flags: MappingFlags, populate: bool) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5206\u914d\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u6620\u5c04\u5927\u5c0f</li> <li><code>flags</code>\uff1a<code>MappingFlags</code> \u7c7b\u578b\u7684\u6620\u5c04\u6807\u5fd7</li> <li><code>populate</code>\uff1a<code>bool</code> \u7c7b\u578b\uff0c\u8868\u793a\u662f\u5426\u9884\u586b\u5145</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> <li> <p><code>populate_area(&amp;mut self, start: VirtAddr, size: usize) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u7528\u7269\u7406\u5e27\u586b\u5145\u6307\u5b9a\u533a\u57df\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u533a\u57df\u5927\u5c0f</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> <li> <p><code>unmap(&amp;mut self, start: VirtAddr, size: usize) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u79fb\u9664\u6307\u5b9a\u865a\u62df\u5730\u5740\u8303\u56f4\u5185\u7684\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u5730\u5740\u8303\u56f4\u5927\u5c0f</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> <li> <p><code>unmap_user_areas(&amp;mut self) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u79fb\u9664\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u7528\u6237\u533a\u57df\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#25","title":"2.5 \u6570\u636e\u8bfb\u5199\u63a5\u53e3","text":"<ul> <li> <p><code>read(&amp;self, start: VirtAddr, buf: &amp;mut [u8]) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u4ece\u5730\u5740\u7a7a\u95f4\u4e2d\u8bfb\u53d6\u6570\u636e\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>buf</code>\uff1a<code>&amp;mut [u8]</code> \u7c7b\u578b\u7684\u7f13\u51b2\u533a</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> <li> <p><code>write(&amp;self, start: VirtAddr, buf: &amp;[u8]) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u5411\u5730\u5740\u7a7a\u95f4\u4e2d\u5199\u5165\u6570\u636e\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>buf</code>\uff1a<code>&amp;[u8]</code> \u7c7b\u578b\u7684\u7f13\u51b2\u533a</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#26","title":"2.6 \u6620\u5c04\u4fdd\u62a4\u4e0e\u9a8c\u8bc1\u63a5\u53e3","text":"<ul> <li> <p><code>protect(&amp;mut self, start: VirtAddr, size: usize, flags: MappingFlags) -&gt; AxResult</code></p> <ul> <li>\u529f\u80fd\uff1a\u66f4\u65b0\u6307\u5b9a\u865a\u62df\u5730\u5740\u8303\u56f4\u5185\u7684\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>start</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u8d77\u59cb\u865a\u62df\u5730\u5740</li> <li><code>size</code>\uff1a<code>usize</code> \u7c7b\u578b\u7684\u5730\u5740\u8303\u56f4\u5927\u5c0f</li> <li><code>flags</code>\uff1a<code>MappingFlags</code> \u7c7b\u578b\u7684\u6620\u5c04\u6807\u5fd7</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult</code> \u7c7b\u578b\uff0c\u8868\u793a\u64cd\u4f5c\u7ed3\u679c</li> </ul> </li> <li> <p><code>check_region_access(&amp;self, range: VirtAddrRange, access_flags: MappingFlags) -&gt; bool</code></p> <ul> <li>\u529f\u80fd\uff1a\u68c0\u67e5\u5bf9\u6307\u5b9a\u5185\u5b58\u533a\u57df\u7684\u8bbf\u95ee\u662f\u5426\u6709\u6548\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>range</code>\uff1a<code>VirtAddrRange</code> \u7c7b\u578b\u7684\u5185\u5b58\u533a\u57df\u8303\u56f4</li> <li><code>access_flags</code>\uff1a<code>MappingFlags</code> \u7c7b\u578b\u7684\u8bbf\u95ee\u6807\u5fd7</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>bool</code> \u7c7b\u578b\uff0c\u8868\u793a\u8bbf\u95ee\u662f\u5426\u6709\u6548</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#27","title":"2.7 \u5f02\u5e38\u5904\u7406\u63a5\u53e3","text":"<ul> <li><code>handle_page_fault(&amp;mut self, vaddr: VirtAddr, access_flags: MappingFlags) -&gt; bool</code><ul> <li>\u529f\u80fd\uff1a\u5904\u7406\u7ed9\u5b9a\u5730\u5740\u7684\u9875\u9519\u8bef\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>vaddr</code>\uff1a<code>VirtAddr</code> \u7c7b\u578b\u7684\u865a\u62df\u5730\u5740</li> <li><code>access_flags</code>\uff1a<code>MappingFlags</code> \u7c7b\u578b\u7684\u8bbf\u95ee\u6807\u5fd7</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>bool</code> \u7c7b\u578b\uff0c\u8868\u793a\u9875\u9519\u8bef\u662f\u5426\u5904\u7406\u6210\u529f</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#28","title":"2.8 \u514b\u9686\u63a5\u53e3","text":"<ul> <li><code>clone_or_err(&amp;mut self) -&gt; AxResult&lt;Self&gt;</code><ul> <li>\u529f\u80fd\uff1a\u514b\u9686\u4e00\u4e2a <code>AddrSpace</code>\uff0c\u901a\u8fc7\u5728\u65b0\u9875\u8868\u4e2d\u91cd\u65b0\u6620\u5c04\u6240\u6709\u5185\u5b58\u533a\u57df\u5e76\u590d\u5236\u7528\u6237\u7a7a\u95f4\u7684\u6570\u636e\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a<code>AxResult&lt;Self&gt;</code> \u7c7b\u578b\uff0c\u8868\u793a\u514b\u9686\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/api/#29","title":"2.9 \u8c03\u8bd5\u4e0e\u6e05\u7406\u63a5\u53e3","text":"<ul> <li> <p><code>fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result</code></p> <ul> <li>\u529f\u80fd\uff1a\u5b9e\u73b0 <code>Debug</code> \u7279\u6027\uff0c\u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa <code>AddrSpace</code> \u7684\u4fe1\u606f\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li><code>f</code>\uff1a<code>&amp;mut fmt::Formatter</code> \u7c7b\u578b\u7684\u683c\u5f0f\u5316\u5668</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a<code>fmt::Result</code> \u7c7b\u578b\uff0c\u8868\u793a\u683c\u5f0f\u5316\u7ed3\u679c</li> </ul> </li> <li> <p><code>drop(&amp;mut self)</code></p> <ul> <li>\u529f\u80fd\uff1a\u5b9e\u73b0 <code>Drop</code> \u7279\u6027\uff0c\u5728 <code>AddrSpace</code> \u88ab\u4e22\u5f03\u65f6\u6e05\u9664\u6240\u6709\u6620\u5c04\u3002</li> <li>\u53c2\u6570\uff1a\u65e0</li> <li>\u8fd4\u56de\u503c\uff1a\u65e0</li> </ul> </li> </ul>"},{"location":"arceos-modules/memory/management/","title":"\u5185\u5b58\u7ba1\u7406\u673a\u5236","text":"<p>\u63cf\u8ff0\u5982\u4f55\u5b9e\u73b0\u5185\u5b58\u7ba1\u7406\uff0c\u5305\u62ec linear\u3001lazy alloc \u7b49\u5185\u5bb9</p>"},{"location":"arceos-modules/memory/management/#_2","title":"\u6838\u5fc3\u6570\u636e\u7ed3\u6784","text":"<p><code>AddrSpace</code> \u7ed3\u6784\u4f53\u662f\u5185\u5b58\u7ba1\u7406\u7684\u6838\u5fc3\uff0c\u5305\u542b\u4ee5\u4e0b\u4e3b\u8981\u5b57\u6bb5\uff1a <pre><code>pub struct AddrSpace {\n    va_range: VirtAddrRange,\n    areas: MemorySet&lt;Backend&gt;,\n    pt: PageTable,\n}\n</code></pre> - <code>va_range</code>\uff1a\u8868\u793a\u865a\u62df\u5730\u5740\u8303\u56f4\uff0c\u5b9a\u4e49\u4e86\u8be5\u5730\u5740\u7a7a\u95f4\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\u3002 - <code>areas</code>\uff1a\u7ba1\u7406\u591a\u4e2a\u5185\u5b58\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u548c\u6620\u5c04\u65b9\u5f0f\u3002 - <code>pt</code>\uff1a\u9875\u8868\uff0c\u8d1f\u8d23\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u3002</p>"},{"location":"arceos-modules/memory/management/#linear-mapping","title":"\u7ebf\u6027\u6620\u5c04\uff08Linear Mapping\uff09","text":"<p>\u7ebf\u6027\u6620\u5c04\u662f\u6307\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e4b\u95f4\u5b58\u5728\u56fa\u5b9a\u7684\u504f\u79fb\u5173\u7cfb\u3002\u5728 <code>AddrSpace</code> \u4e2d\uff0c\u901a\u8fc7 <code>map_linear</code> \u65b9\u6cd5\u5b9e\u73b0\u7ebf\u6027\u6620\u5c04\uff1a <pre><code>pub fn map_linear(\n    &amp;mut self,\n    start_vaddr: VirtAddr,\n    start_paddr: PhysAddr,\n    size: usize,\n    flags: MappingFlags,\n) -&gt; AxResult {\n    self.validate_region(start_vaddr, size)?;\n    if !start_paddr.is_aligned_4k() {\n        return ax_err!(InvalidInput, \"address not aligned\");\n    }\n\n    let offset = start_vaddr.as_usize() - start_paddr.as_usize();\n    let area = MemoryArea::new(start_vaddr, size, flags, Backend::new_linear(offset));\n    self.areas\n        .map(area, &amp;mut self.pt, false)\n        .map_err(mapping_err_to_ax_err)?;\n    Ok(())\n}\n</code></pre> - \u6b65\u9aa4\uff1a   1. \u9a8c\u8bc1\u5730\u5740\u8303\u56f4\uff1a\u786e\u4fdd\u8d77\u59cb\u865a\u62df\u5730\u5740\u548c\u5927\u5c0f\u5728\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185\uff0c\u4e14\u5730\u5740\u5bf9\u9f50\u3002   2. \u8ba1\u7b97\u504f\u79fb\u91cf\uff1a\u8ba1\u7b97\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e4b\u95f4\u7684\u56fa\u5b9a\u504f\u79fb\u91cf\u3002   3. \u521b\u5efa\u5185\u5b58\u533a\u57df\uff1a\u4f7f\u7528 <code>MemoryArea::new</code> \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u533a\u57df\uff0c\u5e76\u6307\u5b9a\u7ebf\u6027\u6620\u5c04\u7684\u540e\u7aef <code>Backend::new_linear(offset)</code>\u3002   4. \u6620\u5c04\u5185\u5b58\u533a\u57df\uff1a\u8c03\u7528 <code>MemorySet</code> \u7684 <code>map</code> \u65b9\u6cd5\u5c06\u5185\u5b58\u533a\u57df\u6620\u5c04\u5230\u9875\u8868\u4e2d\u3002</p>"},{"location":"arceos-modules/memory/management/#lazy-alloc","title":"\u5ef6\u8fdf\u5206\u914d\uff08Lazy Alloc\uff09","text":"<p>\u5ef6\u8fdf\u5206\u914d\u662f\u6307\u5728\u5b9e\u9645\u8bbf\u95ee\u5185\u5b58\u65f6\u624d\u8fdb\u884c\u7269\u7406\u5185\u5b58\u7684\u5206\u914d\u3002\u5728 <code>AddrSpace</code> \u4e2d\uff0c\u901a\u8fc7 <code>map_alloc</code> \u65b9\u6cd5\u5b9e\u73b0\u5ef6\u8fdf\u5206\u914d\uff1a <pre><code>pub fn map_alloc(\n    &amp;mut self,\n    start: VirtAddr,\n    size: usize,\n    flags: MappingFlags,\n    populate: bool,\n) -&gt; AxResult {\n    self.validate_region(start, size)?;\n\n    let area = MemoryArea::new(start, size, flags, Backend::new_alloc(populate));\n    self.areas\n        .map(area, &amp;mut self.pt, false)\n        .map_err(mapping_err_to_ax_err)?;\n    Ok(())\n}\n</code></pre> - \u6b65\u9aa4\uff1a   1. \u9a8c\u8bc1\u5730\u5740\u8303\u56f4\uff1a\u786e\u4fdd\u8d77\u59cb\u865a\u62df\u5730\u5740\u548c\u5927\u5c0f\u5728\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185\uff0c\u4e14\u5730\u5740\u5bf9\u9f50\u3002   2. \u521b\u5efa\u5185\u5b58\u533a\u57df\uff1a\u4f7f\u7528 <code>MemoryArea::new</code> \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u533a\u57df\uff0c\u5e76\u6307\u5b9a\u5ef6\u8fdf\u5206\u914d\u7684\u540e\u7aef <code>Backend::new_alloc(populate)</code>\u3002   3. \u6620\u5c04\u5185\u5b58\u533a\u57df\uff1a\u8c03\u7528 <code>MemorySet</code> \u7684 <code>map</code> \u65b9\u6cd5\u5c06\u5185\u5b58\u533a\u57df\u6620\u5c04\u5230\u9875\u8868\u4e2d\u3002</p>"},{"location":"arceos-modules/memory/management/#_3","title":"\u5ef6\u8fdf\u5206\u914d\u7684\u5b9e\u73b0\u7ec6\u8282","text":""},{"location":"arceos-modules/memory/management/#_4","title":"\u9875\u9762\u9519\u8bef\u5904\u7406","text":"<p>\u5f53\u8bbf\u95ee\u672a\u6620\u5c04\u7684\u9875\u9762\u65f6\uff0c\u4f1a\u89e6\u53d1\u9875\u9762\u9519\u8bef\u3002<code>AddrSpace</code> \u901a\u8fc7 <code>handle_page_fault</code> \u65b9\u6cd5\u5904\u7406\u9875\u9762\u9519\u8bef\uff1a <pre><code>pub fn handle_page_fault(&amp;mut self, vaddr: VirtAddr, access_flags: MappingFlags) -&gt; bool {\n    if !self.va_range.contains(vaddr) {\n        return false;\n    }\n    if let Some(area) = self.areas.find(vaddr) {\n        let orig_flags = area.flags();\n        if orig_flags.contains(access_flags) {\n            return area\n               .backend()\n               .handle_page_fault(vaddr, orig_flags, &amp;mut self.pt);\n        }\n    }\n    false\n}\n</code></pre> - \u6b65\u9aa4\uff1a   1. \u68c0\u67e5\u5730\u5740\u8303\u56f4\uff1a\u786e\u4fdd\u865a\u62df\u5730\u5740\u5728\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185\u3002   2. \u67e5\u627e\u5185\u5b58\u533a\u57df\uff1a\u67e5\u627e\u5305\u542b\u8be5\u865a\u62df\u5730\u5740\u7684\u5185\u5b58\u533a\u57df\u3002   3. \u68c0\u67e5\u8bbf\u95ee\u6743\u9650\uff1a\u68c0\u67e5\u8bbf\u95ee\u6743\u9650\u662f\u5426\u5408\u6cd5\u3002   4. \u5904\u7406\u9875\u9762\u9519\u8bef\uff1a\u8c03\u7528\u5185\u5b58\u533a\u57df\u540e\u7aef\u7684 <code>handle_page_fault</code> \u65b9\u6cd5\u5904\u7406\u9875\u9762\u9519\u8bef\u3002</p>"},{"location":"arceos-modules/network/","title":"ArceOS \u7f51\u7edc\u5c42","text":"<p>\u672c\u7ae0\u8282\u5c06\u4ecb\u7ecd ArceOS \u7684\u7f51\u7edc\u5c42\u63a5\u53e3\u4e0e\u5b9e\u73b0\u3002</p>"},{"location":"arceos-modules/network/api/","title":"ArceOS \u7f51\u7edc\u5c42\u63a5\u53e3","text":""},{"location":"arceos-modules/network/support/","title":"ArceOS \u7f51\u7edc\u5c42\u5b9e\u73b0","text":""},{"location":"arceos-modules/network/support/#smoltcp","title":"smoltcp \u652f\u6301","text":""},{"location":"arceos-modules/network/support/#lwip","title":"lwip \u652f\u6301","text":""},{"location":"arceos-modules/ns/","title":"ArceOS \u547d\u540d\u7a7a\u95f4","text":"<p>\u672c\u7ae0\u8282\u5c06\u4ecb\u7ecd ArceOS \u7684\u547d\u540d\u7a7a\u95f4\u3002</p>"},{"location":"arceos-modules/ns/api/","title":"\u6a21\u5757\u63a5\u53e3\u4e0e\u7528\u4f8b","text":""},{"location":"arceos-modules/ns/api/#_2","title":"\u7ba1\u7406\u547d\u540d\u7a7a\u95f4","text":""},{"location":"arceos-modules/ns/api/#axnamespaceglobal","title":"<code>AxNamespace::global</code>","text":"<p>\u83b7\u53d6\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u3002\u5b9e\u9645\u4e0a\u83b7\u53d6\u7684\u662f <code>axns_resource</code> \u6bb5\u7684\u5730\u5740\u3002</p>"},{"location":"arceos-modules/ns/api/#axnamespacenew_thread_local","title":"<code>Axnamespace::new_thread_local</code>","text":"<p>\u65b0\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u672c\u5730\u547d\u540d\u7a7a\u95f4\u3002\u5206\u914d\u4e86\u4e00\u5757\u5185\u5b58\u533a\u57df\u5e76\u62f7\u8d1d\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u3002</p>"},{"location":"arceos-modules/ns/api/#axnamespaceifcurrent_namespace_base","title":"<code>AxNamespaceIf::current_namespace_base</code>","text":"<p>\u9700\u8981\u8c03\u7528\u8005\u901a\u8fc7 <code>#[crate_interface::impl_interface]</code> \u63d0\u4f9b\u7684\u65b9\u6cd5\u3002\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u547d\u540d\u7a7a\u95f4\u7684\u57fa\u5730\u5740\u3002</p> <p>\u4f8b\u5982\u5728 Starry \u4e2d\uff0c\u6211\u4eec\u628a\u7528\u6237\u7a0b\u5e8f\u7684\u547d\u540d\u7a7a\u95f4\u4fdd\u5b58\u5728 <code>TaskExt</code> \u4e2d\uff0c\u5c31\u9700\u8981\u5728\u8fd9\u91cc\u5b9e\u73b0\u83b7\u53d6\u5f53\u524d <code>TaskExt</code> \u5e76\u8fd4\u56de\u547d\u540d\u7a7a\u95f4\u7684\u57fa\u5730\u5740\u7684\u903b\u8f91\u3002</p>"},{"location":"arceos-modules/ns/api/#_3","title":"\u6ce8\u518c\u8d44\u6e90","text":""},{"location":"arceos-modules/ns/api/#def_resource","title":"<code>def_resource!</code>","text":"<p>\u901a\u8fc7 <code>def_resource!</code> \u5b8f\u5b9a\u4e49\u53ef\u88ab\u547d\u540d\u7a7a\u95f4\u7ba1\u7406\u7684\u8d44\u6e90\u3002\u8be5\u5b8f\u628a\u8d44\u6e90\u94fe\u63a5\u5230 <code>axns_resource</code> \u6bb5\u4e2d\uff0c\u7531\u6b64\u8ba1\u7b97\u8d44\u6e90\u5b58\u50a8\u5728\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u504f\u79fb\uff0c\u5e76\u5b9e\u73b0\u4e00\u7cfb\u5217\u89e3\u5f15\u7528\u65b9\u6cd5\u3002</p>"},{"location":"arceos-modules/ns/api/#resarct","title":"<code>ResArc&lt;T&gt;</code>","text":"<p>\u5bf9 <code>LazyInit&lt;Arc&lt;T&gt;&gt;</code> \u7684\u7b80\u5355\u5c01\u88c5\uff0c\u7528\u4e8e\u61d2\u60f0\u521d\u59cb\u5316\u8d44\u6e90\u3002</p>"},{"location":"arceos-modules/ns/api/#_4","title":"\u4f8b\u5b50","text":"<pre><code>use axns::ResArc;\n\naxns::def_resource! {\n    static FOO: u32 = 42;\n    static BAR: ResArc&lt;String&gt; = ResArc::new();\n}\n\nBAR.init_new(\"hello world\".to_string());\nassert_eq!(*FOO, 42);\nassert_eq!(BAR.as_str(), \"hello world\");\n</code></pre>"},{"location":"arceos-modules/ns/management/","title":"\u547d\u540d\u7a7a\u95f4\u673a\u5236","text":"<p>\u547d\u540d\u7a7a\u95f4\u7528\u4e8e\u63a7\u5236\u7ebf\u7a0b\u95f4\u7cfb\u7edf\u8d44\u6e90\u5171\u4eab\u548c\u9694\u79bb\u3002</p> <p>\u4e0d\u540c\u7684\u5185\u6838\u67b6\u6784\u53ef\u4ee5\u57fa\u4e8e\u547d\u540d\u7a7a\u95f4\u63a7\u5236\u8d44\u6e90\u5171\u4eab\u884c\u4e3a\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u5bf9\u4e8e unikernel\uff0c\u6240\u6709\u7ebf\u7a0b\u5171\u7528\u4e00\u4e2a\u5168\u5c40\u7684\u547d\u540d\u7a7a\u95f4\u3002</li> <li>\u5bf9\u4e8e\u5b8f\u5185\u6838\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u5185\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u8d44\u6e90\uff0c\u4e0d\u540c\u8fdb\u7a0b\u95f4\u8d44\u6e90\u76f8\u4e92\u9694\u79bb\u3002</li> </ul>"},{"location":"arceos-modules/ns/management/#_2","title":"\u547d\u540d\u7a7a\u95f4\u7ba1\u7406\u7684\u8d44\u6e90","text":"<ul> <li>\u5de5\u4f5c\u76ee\u5f55 <code>axfs::CURRENT_DIR_PATH</code>/<code>axfs::CURRENT_DIR</code></li> <li>\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868 <code>FD_TABLE</code></li> <li>etc.</li> </ul>"},{"location":"arceos-modules/task/","title":"\u4efb\u52a1\u8c03\u5ea6\u6a21\u5757","text":"<p>\u4efb\u52a1\u8c03\u5ea6\u6a21\u5757\u8d1f\u8d23\u5408\u7406\u5206\u914d CPU \u8d44\u6e90\u7ed9\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\u548c\u54cd\u5e94\u80fd\u529b\u3002\u672c\u8282\u5c06\u8be6\u7ec6\u4ecb\u7ecd ArceOS \u4efb\u52a1\u8c03\u5ea6\u6a21\u5757\u7684\u63a5\u53e3\u4e0e\u7528\u4f8b\u3001\u8c03\u5ea6\u673a\u5236\u5b9e\u73b0\u4ee5\u53ca\u591a\u6838\u8c03\u5ea6\u652f\u6301\u3002</p>"},{"location":"arceos-modules/task/api/","title":"\u4efb\u52a1\u8c03\u5ea6\u63a5\u53e3","text":""},{"location":"arceos-modules/task/api/#1","title":"1. \u4efb\u52a1\u7c7b\u578b\u5b9a\u4e49","text":"<p><pre><code>cfg_if::cfg_if! {\n    if #[cfg(feature = \"sched_rr\")] {\n        const MAX_TIME_SLICE: usize = 5;\n        pub(crate) type AxTask = scheduler::RRTask&lt;TaskInner, MAX_TIME_SLICE&gt;;\n        pub(crate) type Scheduler = scheduler::RRScheduler&lt;TaskInner, MAX_TIME_SLICE&gt;;\n    } else if #[cfg(feature = \"sched_cfs\")] {\n        pub(crate) type AxTask = scheduler::CFSTask&lt;TaskInner&gt;;\n        pub(crate) type Scheduler = scheduler::CFScheduler&lt;TaskInner&gt;;\n    } else {\n        // If no scheduler features are set, use FIFO as the default.\n        pub(crate) type AxTask = scheduler::FifoTask&lt;TaskInner&gt;;\n        pub(crate) type Scheduler = scheduler::FifoScheduler&lt;TaskInner&gt;;\n    }\n}\n</code></pre> \u6839\u636e\u4e0d\u540c\u7684 Cargo \u7279\u6027\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u4efb\u52a1\u7c7b\u578b\u548c\u8c03\u5ea6\u5668\uff1a * \u5982\u679c\u542f\u7528 sched_rr \u7279\u6027\uff0c\u4f7f\u7528\u8f6e\u8f6c\u8c03\u5ea6\uff08RR\uff09\uff1b * \u5982\u679c\u542f\u7528 sched_cfs \u7279\u6027\uff0c\u4f7f\u7528\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\uff08CFS\uff09\uff1b * \u5426\u5219\uff0c\u4f7f\u7528\u5148\u8fdb\u5148\u51fa\u8c03\u5ea6\uff08FIFO\uff09\u4f5c\u4e3a\u9ed8\u8ba4\u8c03\u5ea6\u7b97\u6cd5\u3002  </p>"},{"location":"arceos-modules/task/api/#2","title":"2. \u4efb\u52a1\u8c03\u5ea6\u5668\u521d\u59cb\u5316","text":"<p><pre><code>/// Initializes the task scheduler (for the primary CPU).\npub fn init_scheduler() {\n    info!(\"Initialize scheduling...\");\n\n    crate::run_queue::init();\n    #[cfg(feature = \"irq\")]\n    crate::timers::init();\n\n    info!(\"  use {} scheduler.\", Scheduler::scheduler_name());\n}\n\n/// Initializes the task scheduler for secondary CPUs.\npub fn init_scheduler_secondary() {\n    crate::run_queue::init_secondary();\n    #[cfg(feature = \"irq\")]\n    crate::timers::init();\n}\n</code></pre> init_scheduler \u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e3b CPU \u7684\u4efb\u52a1\u8c03\u5ea6\u5668\uff1b init_scheduler_secondary \u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u8f85\u52a9 CPU \u7684\u4efb\u52a1\u8c03\u5ea6\u5668\u3002\u521d\u59cb\u5316\u8fc7\u7a0b\u5305\u62ec\u8fd0\u884c\u961f\u5217\u7684\u521d\u59cb\u5316\u548c\u5b9a\u65f6\u5668\u7684\u521d\u59cb\u5316\uff08\u5982\u679c\u542f\u7528\u4e86 irq \u7279\u6027\uff09\u3002 \u7528\u4f8b\uff1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u8c03\u7528 init_scheduler \u51fd\u6570\uff1a <pre><code>fn main() {\n    init_scheduler();~~~~\n    // \u5176\u4ed6\u521d\u59cb\u5316\u64cd\u4f5c\n}\n</code></pre></p>"},{"location":"arceos-modules/task/api/#3","title":"3. \u4efb\u52a1\u521b\u5efa","text":"<p><pre><code>/// Adds the given task to the run queue, returns the task reference.\npub fn spawn_task(task: TaskInner) -&gt; AxTaskRef {\n    let task_ref = task.into_arc();\n    select_run_queue::&lt;NoPreemptIrqSave&gt;(&amp;task_ref).add_task(task_ref.clone());\n    task_ref\n}\n\n/// Spawns a new task with the given parameters.\n///\n/// Returns the task reference.\npub fn spawn_raw&lt;F&gt;(f: F, name: String, stack_size: usize) -&gt; AxTaskRef\nwhere\n    F: FnOnce() + Send + 'static,\n{\n    spawn_task(TaskInner::new(f, name, stack_size))\n}\n\n/// Spawns a new task with the default parameters.\n///\n/// The default task name is an empty string. The default task stack size is\n/// [`axconfig::TASK_STACK_SIZE`].\n///\n/// Returns the task reference.\npub fn spawn&lt;F&gt;(f: F) -&gt; AxTaskRef\nwhere\n    F: FnOnce() + Send + 'static,\n{\n    spawn_raw(f, \"\".into(), axconfig::TASK_STACK_SIZE)\n}\n</code></pre> spawn_task \u51fd\u6570\u5c06\u4e00\u4e2a TaskInner \u7c7b\u578b\u7684\u4efb\u52a1\u6dfb\u52a0\u5230\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u5e76\u8fd4\u56de\u4efb\u52a1\u7684\u5f15\u7528\uff1b spawn_raw \u51fd\u6570\u6839\u636e\u7ed9\u5b9a\u7684\u4efb\u52a1\u5165\u53e3\u51fd\u6570\u3001\u4efb\u52a1\u540d\u79f0\u548c\u6808\u5927\u5c0f\u521b\u5efa\u4e00\u4e2a\u65b0\u4efb\u52a1\uff0c\u5e76\u8c03\u7528 spawn_task \u51fd\u6570\u5c06\u5176\u6dfb\u52a0\u5230\u8fd0\u884c\u961f\u5217\u4e2d\uff1b spawn \u51fd\u6570\u4f7f\u7528\u9ed8\u8ba4\u7684\u4efb\u52a1\u540d\u79f0\u548c\u6808\u5927\u5c0f\u521b\u5efa\u65b0\u4efb\u52a1\u3002 \u7528\u4f8b\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u4efb\u52a1\uff1a <pre><code>fn task_function() {\n    // \u4efb\u52a1\u903b\u8f91\n}\n\nfn main() {\n    init_scheduler();\n    let task = spawn(task_function);\n    // \u5176\u4ed6\u64cd\u4f5c\n}\n</code></pre></p>"},{"location":"arceos-modules/task/api/#4","title":"4. \u4efb\u52a1\u8c03\u5ea6\u76f8\u5173\u64cd\u4f5c","text":"<p><pre><code>/// Current task gives up the CPU time voluntarily, and switches to another\n/// ready task.\npub fn yield_now() {\n    current_run_queue::&lt;NoPreemptIrqSave&gt;().yield_current()\n}\n\n/// Current task is going to sleep for the given duration.\n///\n/// If the feature `irq` is not enabled, it uses busy-wait instead.\npub fn sleep(dur: core::time::Duration) {\n    sleep_until(axhal::time::wall_time() + dur);\n}\n\n/// Current task is going to sleep, it will be woken up at the given deadline.\n///\n/// If the feature `irq` is not enabled, it uses busy-wait instead.\npub fn sleep_until(deadline: axhal::time::TimeValue) {\n    #[cfg(feature = \"irq\")]\n    current_run_queue::&lt;NoPreemptIrqSave&gt;().sleep_until(deadline);\n    #[cfg(not(feature = \"irq\"))]\n    axhal::time::busy_wait_until(deadline);\n}\n\n/// Exits the current task.\npub fn exit(exit_code: i32) -&gt; ! {\n    current_run_queue::&lt;NoPreemptIrqSave&gt;().exit_current(exit_code)\n}\n</code></pre> yield_now \u51fd\u6570\u4f7f\u5f53\u524d\u4efb\u52a1\u4e3b\u52a8\u653e\u5f03 CPU \u65f6\u95f4\uff0c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5c31\u7eea\u4efb\u52a1\uff1b sleep \u51fd\u6570\u4f7f\u5f53\u524d\u4efb\u52a1\u4f11\u7720\u6307\u5b9a\u7684\u65f6\u95f4\uff1b sleep_until \u51fd\u6570\u4f7f\u5f53\u524d\u4efb\u52a1\u4f11\u7720\u5230\u6307\u5b9a\u7684\u622a\u6b62\u65f6\u95f4\uff0c\u5982\u679c\u672a\u542f\u7528 irq \u7279\u6027\uff0c\u5c06\u4f7f\u7528\u5fd9\u7b49\u5f85\u65b9\u5f0f\uff1b exit \u51fd\u6570\u7528\u4e8e\u7ec8\u6b62\u5f53\u524d\u4efb\u52a1\u3002 \u7528\u4f8b\uff1a\u4efb\u52a1\u4e3b\u52a8\u653e\u5f03 CPU \u65f6\u95f4\uff1a <pre><code>fn task_function() {\n    // \u4efb\u52a1\u903b\u8f91\n    yield_now();\n    // \u7ee7\u7eed\u6267\u884c\u4efb\u52a1\u903b\u8f91\n}\n</code></pre></p>"},{"location":"arceos-modules/task/monolithic/","title":"Starry \u5b8f\u5185\u6838\u8fdb\u7a0b\u7ba1\u7406\u5b9e\u73b0","text":""},{"location":"arceos-modules/task/multicore/","title":"\u591a\u6838\u8c03\u5ea6\u673a\u5236\u5b9e\u73b0","text":""},{"location":"arceos-modules/task/multicore/#1","title":"1. \u591a\u6838\u8c03\u5ea6\u673a\u5236","text":"<p>ArceOS \u652f\u6301\u591a\u6838\u8c03\u5ea6\uff0c\u91c7\u7528\u4e86 per-cpu run queue \u673a\u5236\u3002\u6bcf\u4e2a CPU \u90fd\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u961f\u5217\uff0c\u4efb\u52a1\u53ef\u4ee5\u5728\u4e0d\u540c\u7684 CPU \u4e4b\u95f4\u8fc1\u79fb\u3002\u5728 unblock_task \u51fd\u6570\u4e2d\uff0c\u4f1a\u6839\u636e CPU ID \u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u91cd\u65b0\u8c03\u5ea6\uff1a <pre><code>let cpu_id = self.inner.cpu_id;\nif resched &amp;&amp; cpu_id == this_cpu_id() {\n    #[cfg(feature = \"preempt\")]\n    crate::current().set_preempt_pending(true);\n}\n</code></pre></p>"},{"location":"arceos-modules/task/multicore/#2","title":"2. \u7279\u6027\u914d\u7f6e","text":"<p>\u901a\u8fc7 axtask \u6a21\u5757\u7684\u7279\u6027\u914d\u7f6e\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u6838\u8c03\u5ea6\u652f\u6301\uff1a <pre><code>smp = [\"kspin/smp\"]\n</code></pre> \u5176\u4e2d\uff0ckspin/smp \u8868\u793a\u4f7f\u7528\u652f\u6301\u591a\u6838\u7684\u81ea\u65cb\u9501\uff0c\u786e\u4fdd\u5728\u591a\u6838\u73af\u5883\u4e0b\u7684\u5e76\u53d1\u5b89\u5168\u3002</p>"},{"location":"arceos-modules/task/multicore/#3","title":"3. \u8fd0\u884c\u961f\u5217\u7ba1\u7406","text":"<p>\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a CPU \u90fd\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u961f\u5217AxRunQueue\uff0c\u901a\u8fc7percpu_static\u5b8f\u5b9a\u4e49\uff1a <pre><code>percpu_static! {\n    RUN_QUEUE: LazyInit&lt;AxRunQueue&gt; = LazyInit::new(),\n    // \u5176\u4ed6CPU\u76f8\u5173\u7684\u9759\u6001\u53d8\u91cf\n}\n</code></pre> \u529f\u80fd\uff1a\u6bcf\u4e2a CPU \u7684\u8fd0\u884c\u961f\u5217\u72ec\u7acb\u7ba1\u7406\u8be5 CPU \u4e0a\u7684\u4efb\u52a1\uff0c\u907f\u514d\u4e86\u591a\u6838\u4e4b\u95f4\u7684\u7ade\u4e89\u3002</p>"},{"location":"arceos-modules/task/multicore/#4","title":"4. \u4efb\u52a1\u5206\u914d","text":"<p>select_run_queue\u51fd\u6570\u6839\u636e\u4efb\u52a1\u7684 CPU \u4eb2\u548c\u6027\u548c\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u9009\u62e9\u5408\u9002\u7684\u8fd0\u884c\u961f\u5217\uff1a <pre><code>#[inline]\npub(crate) fn select_run_queue&lt;G: BaseGuard&gt;(task: &amp;AxTaskRef) -&gt; AxRunQueueRef&lt;'static, G&gt; {\n    let irq_state = G::acquire();\n    #[cfg(feature = \"smp\")]\n    {\n        let index = select_run_queue_index(task.cpumask());\n        AxRunQueueRef {\n            inner: get_run_queue(index),\n            state: irq_state,\n            _phantom: core::marker::PhantomData,\n        }\n    }\n    #[cfg(not(feature = \"smp\"))]\n    {\n        AxRunQueueRef {\n            inner: unsafe { RUN_QUEUE.current_ref_mut_raw() },\n            state: irq_state,\n            _phantom: core::marker::PhantomData,\n        }\n    }\n}\n</code></pre> \u529f\u80fd\uff1a\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c\u6839\u636e\u4efb\u52a1\u7684 CPU \u4eb2\u548c\u6027\u548c\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u9009\u62e9\u5408\u9002\u7684\u8fd0\u884c\u961f\u5217\uff0c\u5c06\u4efb\u52a1\u5206\u914d\u5230\u76f8\u5e94\u7684 CPU \u4e0a\u6267\u884c\u3002</p>"},{"location":"arceos-modules/task/multicore/#5","title":"5. \u4efb\u52a1\u8fc1\u79fb","text":"<p>\u5f53\u4efb\u52a1\u7684 CPU \u4eb2\u548c\u6027\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u5c06\u4efb\u52a1\u8fc1\u79fb\u5230\u5408\u9002\u7684 CPU \u4e0a\u6267\u884c\uff0c\u901a\u8fc7migrate_current\u65b9\u6cd5\u5b9e\u73b0\uff1a <pre><code>#[cfg(feature = \"smp\")]\npub fn migrate_current(&amp;mut self, migration_task: AxTaskRef) {\n    let curr = &amp;self.current_task;\n    curr.set_state(TaskState::Ready);\n    self.inner.switch_to(crate::current(), migration_task);\n}\n</code></pre> \u529f\u80fd\uff1a\u5c06\u5f53\u524d\u4efb\u52a1\u8fc1\u79fb\u5230\u5408\u9002\u7684 CPU \u4e0a\u6267\u884c\uff0c\u786e\u4fdd\u4efb\u52a1\u5728\u6b63\u786e\u7684 CPU \u4e0a\u8fd0\u884c\u3002</p>"},{"location":"arceos-modules/task/schedule/","title":"\u4efb\u52a1\u8c03\u5ea6\u673a\u5236","text":""},{"location":"arceos-modules/task/schedule/#1","title":"1. \u8c03\u5ea6\u7b97\u6cd5\u9009\u62e9","text":"<p>\u901a\u8fc7 Cargo \u7279\u6027\u9009\u62e9\u4e0d\u540c\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5982 sched_fifo\u3001sched_cfs \u548c sched_rr\u3002\u4e0d\u540c\u7684\u8c03\u5ea6\u7b97\u6cd5\u5728\u4efb\u52a1\u8c03\u5ea6\u65f6\u91c7\u7528\u4e0d\u540c\u7684\u7b56\u7565\uff0c\u4f8b\u5982\uff1a * FIFO\uff1a\u6309\u7167\u4efb\u52a1\u5230\u8fbe\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\uff0c\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u6216\u963b\u585e\u3002 * RR\uff1a\u6bcf\u4e2a\u4efb\u52a1\u88ab\u5206\u914d\u4e00\u4e2a\u56fa\u5b9a\u7684\u65f6\u95f4\u7247\uff0c\u5f53\u65f6\u95f4\u7247\u7528\u5b8c\u540e\uff0c\u4efb\u52a1\u88ab\u6682\u505c\uff0c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u3002 * CFS\uff1a\u901a\u8fc7\u8ba1\u7b97\u6bcf\u4e2a\u4efb\u52a1\u7684\u865a\u62df\u8fd0\u884c\u65f6\u95f4\uff0c\u4f18\u5148\u9009\u62e9\u865a\u62df\u8fd0\u884c\u65f6\u95f4\u6700\u77ed\u7684\u4efb\u52a1\u6267\u884c\uff0c\u4ee5\u4fdd\u8bc1\u516c\u5e73\u6027\u3002</p>"},{"location":"arceos-modules/task/schedule/#2","title":"2. \u4efb\u52a1\u72b6\u6001\u7ba1\u7406","text":"<p>\u4efb\u52a1\u6709\u56db\u79cd\u72b6\u6001\uff1aRunning\u3001Ready\u3001Blocked\u548cExited\uff0c\u5b9a\u4e49\u5728arceos/modules/axtask/src/task.rs\u4e2d\uff0c\u901a\u8fc7 put_task_with_state \u51fd\u6570\u5b9e\u73b0\u4efb\u52a1\u72b6\u6001\u7684\u8f6c\u6362\u548c\u4efb\u52a1\u7684\u63d2\u5165\u64cd\u4f5c\uff1a <pre><code>#[repr(u8)]\n#[derive(Debug, Clone, Copy, Eq, PartialEq)]\npub enum TaskState {\n    Running = 1,\n    Ready = 2,\n    Blocked = 3,\n    Exited = 4,\n}\n</code></pre> Running\uff1a\u4efb\u52a1\u6b63\u5728 CPU \u4e0a\u6267\u884c\uff1b Ready\uff1a\u4efb\u52a1\u5df2\u7ecf\u51c6\u5907\u597d\u6267\u884c\uff0c\u7b49\u5f85\u8c03\u5ea6\u5668\u5206\u914d CPU \u65f6\u95f4\uff1b Blocked\uff1a\u4efb\u52a1\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\uff08\u5982\u7b49\u5f85 I/O\u3001\u7b49\u5f85\u9501\u7b49\uff09\u88ab\u963b\u585e\uff0c\u6682\u65f6\u4e0d\u80fd\u6267\u884c\uff1b Exited\uff1a\u4efb\u52a1\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\uff0c\u7b49\u5f85\u8d44\u6e90\u56de\u6536\u3002  </p>"},{"location":"arceos-modules/task/schedule/#3","title":"3. \u8c03\u5ea6\u6838\u5fc3\u903b\u8f91","text":"<p>\u8c03\u5ea6\u7684\u6838\u5fc3\u903b\u8f91\u5728arceos/modules/axtask/src/run_queue.rs\u7684AxRunQueue\u7ed3\u6784\u4f53\u4e2d\u5b9e\u73b0\uff0c\u4e3b\u8981\u5305\u62ec\u4efb\u52a1\u6dfb\u52a0\u3001\u4efb\u52a1\u5524\u9192\u3001\u4efb\u52a1\u5207\u6362\u7b49\u64cd\u4f5c\u3002  </p>"},{"location":"arceos-modules/task/schedule/#31","title":"3.1 \u4efb\u52a1\u6dfb\u52a0","text":"<p><pre><code>impl&lt;G: BaseGuard&gt; AxRunQueueRef&lt;'_, G&gt; {\n    pub fn add_task(&amp;mut self, task: AxTaskRef) {\n        debug!(\n            \"task add: {} on run_queue {}\",\n            task.id_name(),\n            self.inner.cpu_id\n        );\n        assert!(task.is_ready());\n        self.inner.scheduler.lock().add_task(task);\n    }\n}\n</code></pre> \u529f\u80fd\uff1a\u5c06\u4e00\u4e2a\u5c31\u7eea\u72b6\u6001\u7684\u4efb\u52a1\u6dfb\u52a0\u5230\u8c03\u5ea6\u5668\u7684\u5c31\u7eea\u961f\u5217\u4e2d\u3002  </p>"},{"location":"arceos-modules/task/schedule/#32","title":"3.2 \u4efb\u52a1\u5524\u9192","text":"<p><pre><code>impl&lt;G: BaseGuard&gt; AxRunQueueRef&lt;'_, G&gt; {\n    pub fn unblock_task(&amp;mut self, task: AxTaskRef, resched: bool) {\n        let task_id_name = task.id_name();\n        if self\n            .inner\n            .put_task_with_state(task, TaskState::Blocked, resched)\n        {\n            let cpu_id = self.inner.cpu_id;\n            debug!(\"task unblock: {} on run_queue {}\", task_id_name, cpu_id);\n            if resched &amp;&amp; cpu_id == this_cpu_id() {\n                #[cfg(feature = \"preempt\")]\n                crate::current().set_preempt_pending(true);\n            }\n        }\n    }\n}\n</code></pre> \u529f\u80fd\uff1a\u5c06\u4e00\u4e2a\u963b\u585e\u72b6\u6001\u7684\u4efb\u52a1\u5524\u9192\uff0c\u4f7f\u5176\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\uff0c\u5e76\u6839\u636e\u9700\u8981\u8bbe\u7f6e\u62a2\u5360\u6807\u5fd7\u3002  </p>"},{"location":"arceos-modules/task/schedule/#33","title":"3.3 \u4efb\u52a1\u5207\u6362","text":"<p><pre><code>impl AxRunQueue {\n    fn resched(&amp;mut self) {\n        let next = self\n            .scheduler\n            .lock()\n            .pick_next_task()\n            .unwrap_or_else(|| unsafe {\n                IDLE_TASK.current_ref_raw().get_unchecked().clone()\n            });\n        assert!(\n            next.is_ready(),\n            \"next {} is not ready: {:?}\",\n            next.id_name(),\n            next.state()\n        );\n        self.switch_to(crate::current(), next);\n    }\n\n    fn switch_to(&amp;mut self, prev_task: CurrentTask, next_task: AxTaskRef) {\n        // \u4efb\u52a1\u5207\u6362\u903b\u8f91\n    }\n}\n</code></pre> \u529f\u80fd\uff1aresched\u65b9\u6cd5\u9009\u62e9\u4e0b\u4e00\u4e2a\u8981\u6267\u884c\u7684\u4efb\u52a1\uff0c\u5e76\u8c03\u7528switch_to\u65b9\u6cd5\u8fdb\u884c\u4efb\u52a1\u5207\u6362\u3002</p>"},{"location":"arceos-modules/task/schedule/#4","title":"4. \u5b9a\u65f6\u5668\u5904\u7406","text":"<p>\u5982\u679c\u542f\u7528\u4e86 irq \u7279\u6027\uff0c\u4efb\u52a1\u8c03\u5ea6\u6a21\u5757\u4f1a\u5904\u7406\u5b9a\u65f6\u5668\u4e8b\u4ef6\u3002\u5728 on_timer_tick \u51fd\u6570\u4e2d\uff0c\u4f1a\u68c0\u67e5\u5b9a\u65f6\u5668\u4e8b\u4ef6\u5e76\u66f4\u65b0\u8c03\u5ea6\u5668\u72b6\u6001\uff1a <pre><code>/// Handles periodic timer ticks for the task manager.\n///\n/// For example, advance scheduler states, checks timed events, etc.\n#[cfg(feature = \"irq\")]\n#[doc(cfg(feature = \"irq\"))]\npub fn on_timer_tick() {\n    use kernel_guard::NoOp;\n    crate::timers::check_events();\n    // Since irq and preemption are both disabled here,\n    // we can get current run queue with the default `kernel_guard::NoOp`.\n    current_run_queue::&lt;NoOp&gt;().scheduler_timer_tick();\n}\n</code></pre></p>"},{"location":"hardware/phytium/","title":"\u98de\u817e\u6d3e\u652f\u6301","text":""},{"location":"hardware/sifive/","title":"\u661f\u5149\u4e8c\u4ee3\u5e73\u53f0\u652f\u6301","text":""},{"location":"implementation/","title":"Starry \u5b9e\u73b0\u539f\u7406\u4ecb\u7ecd","text":"<p>\u672c\u7ae0\u8282\u5c06\u8be6\u7ec6\u4ecb\u7ecd Starry \u5185\u6838\u7684\u5b9e\u73b0\u539f\u7406\u3002\u6211\u4eec\u4f1a\u5148\u4ecb\u7ecd Starry \u5185\u6838\u7684\u6574\u4f53\u67b6\u6784\uff0c\u7136\u540e\u8be6\u7ec6\u4ecb\u7ecd Starry \u5185\u6838\u7684\u5404\u4e2a\u6a21\u5757\u7684\u5b9e\u73b0\u539f\u7406\u3002</p>"},{"location":"implementation/architecture/","title":"Starry \u67b6\u6784\u8bbe\u8ba1","text":""},{"location":"implementation/boot/","title":"Starry \u7684\u542f\u52a8\u4e0e\u521d\u59cb\u5316","text":""},{"location":"implementation/boot/#starry_1","title":"Starry \u67b6\u6784","text":"<p>Starry \u57fa\u4e8e ArceOS \u67b6\u6784\uff0c\u5728\u8bbe\u8ba1\u4e0a\u5f3a\u8c03 \u201c\u590d\u7528\u800c\u975e\u8026\u5408\u201d\u3002</p> <p></p> <p>\u5176\u5927\u81f4\u6267\u884c\u6d41\u53ef\u5212\u5206\u4e3a\u4ee5\u4e0b\u9636\u6bb5\uff1a</p>"},{"location":"implementation/boot/#_1","title":"\u521d\u59cb\u5316\u9636\u6bb5","text":"<ol> <li> <p><code>Backbone</code> \u521d\u59cb\u5316\uff1a\u7cfb\u7edf\u542f\u52a8\u540e\uff0c<code>ArceOS Backbone</code> \u9996\u5148\u5b8c\u6210\u786c\u4ef6\u521d\u59cb\u5316\u3001\u8fd0\u884c\u65f6\u6784\u5efa\u7b49\u57fa\u7840\u5185\u6838\u529f\u80fd\u7684\u542f\u52a8\uff0c\u7136\u540e\u5c06\u6267\u884c\u6743\u4ea4\u7ed9\u5b8f\u5185\u6838\u6269\u5c55\u6a21\u5757\u3002</p> </li> <li> <p>\u5b8f\u5185\u6838\u6269\u5c55\u521d\u59cb\u5316\uff1a\u8be5\u6a21\u5757\u8d1f\u8d23\u52a0\u8f7d\u7528\u6237\u5e94\u7528\u3001\u6784\u5efa\u5730\u5740\u7a7a\u95f4\u3001\u521d\u59cb\u5316\u4efb\u52a1\u4e0a\u4e0b\u6587\u7b49\u5173\u952e\u529f\u80fd\uff0c\u968f\u540e\u5c06\u6267\u884c\u6d41\u5207\u6362\u81f3\u7528\u6237\u6001\uff0c\u5f00\u59cb\u6267\u884c\u5e94\u7528\u4ee3\u7801\u3002</p> </li> </ol>"},{"location":"implementation/boot/#_2","title":"\u7a0b\u5e8f\u8fd0\u884c\u9636\u6bb5 (\u521d\u59cb\u5316\u540e\u4f1a\u53cd\u590d\u6267\u884c)","text":"<ol> <li> <p>\u5185\u6838\u56de\u8c03\u8def\u5f84\uff1a\u5f53\u7528\u6237\u7a0b\u5e8f\u53d1\u8d77\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u63a7\u5236\u6d41\u901a\u8fc7 syscall \u9677\u5165\u5185\u6838\uff0cArceOS \u6355\u6349\u5f02\u5e38\u5e76\u8bc6\u522b\u4e3a\u9700\u5b8f\u5185\u6838\u5904\u7406\u7684\u8c03\u7528\uff0c\u7136\u540e\u8f6c\u53d1\u7ed9\u5b8f\u5185\u6838\u6269\u5c55\u6a21\u5757\u3002</p> </li> <li> <p>\u8c03\u7528\u5904\u7406\u4e0e\u8fd4\u56de\uff1a\u5b8f\u5185\u6838\u6269\u5c55\u5b8c\u6210\u7cfb\u7edf\u8c03\u7528\u903b\u8f91\u540e\uff0c\u5c06\u7ed3\u679c\u4ea4\u7531 <code>Backbone</code> \u9a8c\u8bc1\u5e76\u901a\u8fc7\u7279\u6743\u7ea7\u5207\u6362\u8fd4\u56de\u7528\u6237\u6001\uff0c\u7ee7\u7eed\u7528\u6237\u7a0b\u5e8f\u7684\u8fd0\u884c\u3002</p> </li> </ol>"},{"location":"implementation/boot/#backbone","title":"Backbone \u521d\u59cb\u5316","text":"<p>\u5728 <code>ArceOS</code> \u67b6\u6784\u4e2d\uff0c<code>Backbone</code>\uff08\u9aa8\u5e72\u5c42\uff09\u627f\u62c5\u7740\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u57fa\u7840\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u786e\u4fdd\u5185\u6838\u8fd0\u884c\u73af\u5883\u5c31\u7eea\u5e76\u4e3a\u5b8f\u5185\u6838\u6269\u5c55\u63d0\u4f9b\u652f\u6491\u3002</p> <p>\u5176\u521d\u59cb\u5316\u6d41\u7a0b\u4e3b\u8981\u7531 <code>axruntime</code> \u6a21\u5757\u5b8c\u6210\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>/// The main entry point of the ArceOS runtime.\n///\n/// It is called from the bootstrapping code in [axhal]. `cpu_id` is the ID of\n/// the current CPU, and `dtb` is the address of the device tree blob. It\n/// finally calls the application's `main` function after all initialization\n/// work is done.\n///\n/// In multi-core environment, this function is called on the primary CPU,\n/// and the secondary CPUs call [`rust_main_secondary`].\n#[cfg_attr(not(test), unsafe(no_mangle))]\npub extern \"C\" fn rust_main(cpu_id: usize, dtb: usize) -&gt; ! { ... }\n</code></pre></p>"},{"location":"implementation/boot/#_3","title":"\u542f\u52a8\u6d41\u7a0b\u6b65\u9aa4","text":"<ol> <li> <p>\u6253\u5370\u542f\u52a8 Logo</p> <p>\u7cfb\u7edf\u9996\u5148\u8f93\u51fa\u542f\u52a8 <code>logo</code> \uff0c\u6807\u8bc6\u5185\u6838\u5df2\u8fdb\u5165\u521d\u59cb\u5316\u9636\u6bb5\u3002\u901a\u8fc7\u8c03\u7528<code>ax_println</code>\u5b8f\u6253\u5370 <code>LOGO</code> \u53ca\u5e73\u53f0\u4fe1\u606f\u3002</p> <pre><code>ax_println!(\"{}\", LOGO);\nax_println!(\n    \"\\\n    arch = {}\\n\\\n    platform = {}\\n\\\n    target = {}\\n\\\n    build_mode = {}\\n\\\n    log_level = {}\\n\\\n    smp = {}\\n\\\n    \",\n    axconfig::ARCH,\n    axconfig::PLATFORM,\n    option_env!(\"AX_TARGET\").unwrap_or(\"\"),\n    option_env!(\"AX_MODE\").unwrap_or(\"\"),\n    option_env!(\"AX_LOG\").unwrap_or(\"\"),\n    axconfig::SMP,\n);\n</code></pre> </li> <li> <p>\u8bb0\u5f55\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4\u6233</p> <p>\u8bb0\u5f55\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4\uff08\u5982\u679c\u542f\u7528 <code>rtc</code> \u529f\u80fd\uff09\u3002</p> <pre><code>#[cfg(feature = \"rtc\")]\nax_println!(\n    \"Boot at {}\\n\",\n    chrono::DateTime::from_timestamp_nanos(axhal::time::wall_time_nanos() as _),\n);\n</code></pre> </li> <li> <p>\u521d\u59cb\u5316\u65e5\u5fd7\u7cfb\u7edf</p> <p>\u901a\u8fc7 <code>axlog::init()</code> \u521d\u59cb\u5316\u65e5\u5fd7\u7cfb\u7edf\uff0c\u5e76\u8bbe\u7f6e\u6700\u5927\u65e5\u5fd7\u7ea7\u522b\u3002\u65e5\u5fd7\u7ea7\u522b\u53ef\u4ee5\u901a\u8fc7 <code>AX_LOG</code> \u73af\u5883\u53d8\u91cf\u914d\u7f6e\u3002</p> <pre><code>axlog::init();\naxlog::set_max_level(option_env!(\"AX_LOG\").unwrap_or(\"\")); // no effect if set `log-level-*` features\ninfo!(\"Logging is enabled.\");\n</code></pre> </li> <li> <p>\u83b7\u53d6\u5185\u5b58\u4fe1\u606f</p> <p>\u901a\u8fc7 <code>axhal::mem::memory_regions</code> \u83b7\u53d6\u5185\u5b58\u5e03\u5c40\u3002</p> <pre><code>info!(\"Found physcial memory regions:\");\nfor r in axhal::mem::memory_regions() {\n    info!(\n        \"  [{:x?}, {:x?}) {} ({:?})\",\n        r.paddr,\n        r.paddr + r.size,\n        r.name,\n        r.flags\n    );\n}\n</code></pre> <p>\u4e4b\u540e\u5c06\u901a\u8fc7 <code>axhal::platform_init()</code> \u5b8c\u6210\u5e73\u53f0\u4fe1\u606f\u7684\u8bbe\u5907\u521d\u59cb\u5316\u3002</p> <pre><code>axhal::platform_init();\n</code></pre> </li> <li> <p>\u5206\u9875\u4e0e\u5185\u5b58\u5206\u914d\u5668\u914d\u7f6e</p> <p>\u901a\u8fc7\u5206\u9875\uff0c<code>alloc</code> \u76f8\u5173\u7684\u7279\u6027\uff0c\u8c03\u7528\u5bf9\u5e94 <code>crate</code> \u7684\u521d\u59cb\u5316\u51fd\u6570\u3002</p> <pre><code>#[cfg(feature = \"alloc\")]\ninit_allocator();\n\n#[cfg(feature = \"paging\")]\naxmm::init_memory_management();\n</code></pre> </li> <li> <p>\u542f\u52a8\u591a\u4efb\u52a1\u8c03\u5ea6\u5668</p> <p>\u542f\u7528 <code>multitask</code> \u7279\u6027\u65f6\uff0c\u8c03\u7528 <code>axtask::init_scheduler()</code> \u542f\u52a8\u591a\u4efb\u52a1\u8c03\u5ea6\u5668\u3002</p> <pre><code>#[cfg(feature = \"multitask\")]\naxtask::init_scheduler();\n</code></pre> </li> <li> <p>\u529f\u80fd\u6a21\u5757\u52a0\u8f7d</p> <p>\u6839\u636e\u542f\u7528\u7684\u529f\u80fd\u6a21\u5757\uff0c\u8c03\u7528\u5bf9\u5e94 <code>crate</code> \u7684\u521d\u59cb\u5316\u51fd\u6570\u3002</p> <p><code>fs</code> \uff08\u6587\u4ef6\u7cfb\u7edf\uff09\uff0c <code>net</code> (\u7f51\u7edc) ,<code>display</code>\uff08\u663e\u793a\uff09</p> <pre><code>#[cfg(any(feature = \"fs\", feature = \"net\", feature = \"display\"))]\n{\n    #[allow(unused_variables)]\n    let all_devices = axdriver::init_drivers();\n\n    #[cfg(feature = \"fs\")]\n    axfs::init_filesystems(all_devices.block);\n\n    #[cfg(feature = \"net\")]\n    axnet::init_network(all_devices.net);\n\n    #[cfg(feature = \"display\")]\n    axdisplay::init_display(all_devices.display);\n}\n</code></pre> </li> <li> <p>\u591a\u6838\u521d\u59cb\u5316</p> <p>\u542f\u7528 <code>smp</code> \uff08 Symmetric Multi-Processing \uff09 \u7279\u6027\u65f6\uff0c\u4f1a\u5bf9\u6bcf\u4e00\u4e2a cpu \u8fdb\u884c\u4f9d\u6b21\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u3002</p> <pre><code>#[cfg(feature = \"smp\")]\nself::mp::start_secondary_cpus(cpu_id);\n</code></pre> </li> <li> <p>\u521d\u59cb\u5316\u4e2d\u65ad\u7cfb\u7edf</p> <p>\u542f\u7528 <code>irq</code>\uff08Interrupt Request\uff09 \u7279\u6027\u65f6\uff0c\u8c03\u7528 <code>init_interrupt()</code> \u8bbe\u7f6e\u4e2d\u65ad\u63a7\u5236\u5668\u4e0e\u5f02\u5e38\u5904\u7406\u673a\u5236\u3002</p> <pre><code>#[cfg(feature = \"irq\")]\n{\n    info!(\"Initialize interrupt handlers...\");\n    init_interrupt();\n}\n</code></pre> </li> <li> <p>\u914d\u7f6e\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8</p> <p>\u542f\u7528 <code>tls</code> \uff08 Thread Local Storage \uff09 \u7279\u6027\u4e14\u672a\u542f\u7528 <code>multitask</code> \u65f6\uff0c\u8c03\u7528 <code>init_tls()</code> \u6765\u521d\u59cb\u5316\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\u3002</p> <pre><code>#[cfg(feature = \"irq\")]\n{\n    info!(\"Initialize interrupt handlers...\");\n    init_interrupt();\n}\n</code></pre> </li> <li> <p>\u6267\u884c\u5168\u5c40\u6784\u9020\u51fd\u6570</p> <p>\u8c03\u7528 <code>ctor_bare::register_ctor()</code> \u6267\u884c\u6240\u6709\u6807\u8bb0\u4e3a <code>#[ctor]</code> \u7684\u5168\u5c40\u6784\u9020\u51fd\u6570\uff08\u5982\u9a71\u52a8\u6ce8\u518c\u3001\u8bbe\u5907\u63a2\u6d4b\u7b49\uff09\u3002</p> <pre><code>#[cfg(feature = \"irq\")]\n{\n    info!(\"Initialize interrupt handlers...\");\n    init_interrupt();\n}\n</code></pre> <p>\u4e0b\u9762\u662f <code>.arceos/api/arceos_posix_api/src/imp/fd_ops.rs</code> \u6587\u4ef6\u4e2d\u7684\u6ce8\u518c\u51fd\u6570\u3002</p> <pre><code>#[ctor_bare::register_ctor]\nfn init_stdio() {\n    let mut fd_table = flatten_objects::FlattenObjects::new();\n    fd_table\n        .add_at(0, Arc::new(stdin()) as _)\n        .unwrap_or_else(|_| panic!()); // stdin\n    fd_table\n        .add_at(1, Arc::new(stdout()) as _)\n        .unwrap_or_else(|_| panic!()); // stdout\n    fd_table\n        .add_at(2, Arc::new(stdout()) as _)\n        .unwrap_or_else(|_| panic!()); // stderr\n    FD_TABLE.init_new(spin::RwLock::new(fd_table));\n}\n</code></pre> </li> <li> <p>\u6267\u884c\u5168\u5c40\u6784\u9020\u51fd\u6570</p> <p>\u786e\u4fdd\u6240\u6709 <code>CPU</code> \u5b8c\u6210\u521d\u59cb\u5316\uff0c\u5982\u679c\u672a\u5b8c\u6210\u521d\u59cb\u5316\u7684\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u884c <code>spin_loop()</code> \u8fdb\u884c\u81ea\u65cb\u9501\u5faa\u73af</p> <pre><code>info!(\"Primary CPU {} init OK.\", cpu_id);\nINITED_CPUS.fetch_add(1, Ordering::Relaxed);\n\nwhile !is_init_ok() {\n    core::hint::spin_loop();\n}\n</code></pre> <p><code>INITED_CPUS</code> \u662f\u4e00\u4e2a\u5168\u5c40\u7684\u539f\u5b50\u53d8\u91cf\uff0c\u4fdd\u5b58\u5f53\u524d\u6709\u591a\u5c11 <code>CPU</code> \u5b8c\u6210\u4e86\u521d\u59cb\u5316</p> </li> <li> <p>\u8fdb\u5165\u4e3b\u63a7\u903b\u8f91</p> <p>\u8c03\u7528 <code>main()</code> \u5b9e\u9645\u7684\u7a0b\u5e8f\u5165\u53e3\uff0c \u8fd9\u91cc\u662f <code>Starry/src/main.rs</code> \uff0c\u5c06\u6267\u884c\u6d41\u4ea4\u7ed9 <code>Starry</code> \u8fdb\u884c\uff0c\u8fd0\u884c\u7ed3\u675f\u540e <code>ArceOS</code> \u8fdb\u884c\u4efb\u52a1\u7684\u9000\u51fa\u6216\u5e73\u53f0\u7684\u5173\u673a\u3002</p> <p><pre><code>unsafe { main() };\n\n#[cfg(feature = \"multitask\")]\naxtask::exit(0);\n#[cfg(not(feature = \"multitask\"))]\n{\n    debug!(\"main task exited: exit_code={}\", 0);\n    axhal::misc::terminate();\n}\n</code></pre> \u6839\u636e <code>feature</code> \u7684\u76f8\u5173\u542f\u7528\u60c5\u51b5\uff0c <code>ArceOS</code> \u4f1a\u8fdb\u884c\u5e73\u53f0\u7684\u5173\u673a\uff08\u6574\u4e2a\u5e73\u53f0\u7ec8\u6b62\u8fd0\u884c\uff0c\u5b9e\u9645\u4e0a\u7684\u5173\u673a\u64cd\u4f5c\uff09\u6216\u8005\u5f53\u524d\u4efb\u52a1\u7684\u9000\u51fa\uff08\u540e\u8005\u4f1a\u8c03\u5ea6\u4e0b\u4e00\u4e2a\u4efb\u52a1\u7ee7\u7eed\u6267\u884c\uff09</p> </li> </ol>"},{"location":"implementation/boot/#_4","title":"\u5b8f\u5185\u6838\u6269\u5c55\u521d\u59cb\u5316","text":""},{"location":"implementation/boot/#_5","title":"\u5b8f\u5185\u6838\u6269\u5c55\u5165\u53e3","text":"<p>\u5728 <code>ArceOS</code> \u7684\u521d\u59cb\u5316\u6d41\u7a0b\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u5c06\u8fdb\u5165\u5b8f\u5185\u6838\u6269\u5c55\u9636\u6bb5\uff0c\u7531 <code>main()</code> \u51fd\u6570\u63a5\u7ba1\uff0c\u6267\u884c\u7528\u6237\u7a7a\u95f4\u7684\u4e3b\u63a7\u5236\u903b\u8f91\u3002</p> <p>\u8be5\u51fd\u6570\u4f4d\u4e8e <code>Starry/src/main.rs</code> \u4e2d\uff0c\u5176\u7b7e\u540d\u5982\u4e0b\uff1a</p> <pre><code>#[no_mangle]\nunsafe fn main() {\n    ...\n}\n</code></pre>"},{"location":"implementation/boot/#_6","title":"\u521b\u5efa\u521d\u59cb\u5316\u8fdb\u7a0b","text":"<pre><code>axprocess::Process::new_init(axtask::current().id().as_u64() as _).build();\n</code></pre> <ul> <li> <p>\u7a0b\u5e8f\u4f1a\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684\u552f\u4e00 <code>Task ID</code>\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a <code>u64</code> \u7c7b\u578b\u3002\u8fd9\u4e2a <code>ID</code> \u5c06\u4f5c\u4e3a\u8fdb\u7a0b\u7684\u552f\u4e00\u6807\u8bc6\uff08PID\uff09\u7528\u4e8e\u8fdb\u7a0b\u7ba1\u7406\u3002</p> <ul> <li> <p><code>axprocess::Process::new_init(...)</code></p> <p>\u7a0b\u5e8f\u4f1a\u521b\u5efa\u4e00\u4e2a <code>ProcessBuilder</code> \u5b9e\u4f8b\uff0c\u7528\u4e8e\u6784\u9020\u7cfb\u7edf\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u3002</p> </li> <li> <p><code>.build()</code></p> <p><code>ProcessBuilder</code> \u8c03\u7528 <code>build()</code> \u6784\u9020\u7b2c\u4e00\u4e2a <code>process</code> \u5168\u5c40\u4fdd\u5b58\u3002 \u53ef\u4ee5\u8bf4 <code>ProcessBuilder</code> \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e2d\u95f4\u5f62\u6001\u3002</p> <ul> <li> <p>\u5982\u679c\u6ca1\u6709\u7236\u8fdb\u7a0b\uff08\u5373\u4e3a init \u8fdb\u7a0b\uff09\uff0c\u5c31\u4e3a\u5f53\u524d\u8fdb\u7a0b\u65b0\u5efa\u4e00\u4e2a\uff1a</p> <ul> <li> <p>Session\uff08\u4f1a\u8bdd\uff09\uff1b</p> </li> <li> <p>ProcessGroup\uff08\u8fdb\u7a0b\u7ec4\uff09\uff1b</p> </li> </ul> </li> <li> <p>\u5982\u679c\u6709\u7236\u8fdb\u7a0b\uff0c\u5219\u7ee7\u627f\u5176\u8fdb\u7a0b\u7ec4\u3002</p> </li> </ul> <pre><code>/// Finishes the builder and returns a new [`Process`].\npub fn build(self) -&gt; Arc&lt;Process&gt; {\n    let Self { pid, parent, data } = self;\n\n    let group = parent.as_ref().map_or_else(\n        || {\n            let session = Session::new(pid);\n            ProcessGroup::new(pid, &amp;session)\n        },\n        |p| p.group(),\n    );\n\n    let process = Arc::new(Process {\n        pid,\n        is_zombie: AtomicBool::new(false),\n        tg: SpinNoIrq::new(ThreadGroup::default()),\n        data,\n        children: SpinNoIrq::new(StrongMap::new()),\n        parent: SpinNoIrq::new(parent.as_ref().map(Arc::downgrade).unwrap_or_default()),\n        group: SpinNoIrq::new(group.clone()),\n    });\n\n    group.processes.lock().insert(pid, &amp;process);\n\n    if let Some(parent) = parent {\n        parent.children.lock().insert(pid, process.clone());\n    } else {\n        INIT_PROC.init_once(process.clone());\n    }\n\n    process\n}\n</code></pre> </li> </ul> </li> </ul>"},{"location":"implementation/boot/#_7","title":"\u8bfb\u53d6\u5e76\u89e3\u6790\u73af\u5883\u53d8\u91cf","text":"<ul> <li> <p>\u8c03\u7528 <code>option_env!</code> \u83b7\u5f97 <code>AX_TESTCASES_LIST</code> \u73af\u5883\u53d8\u91cf\u4e2d\u7684\u6d4b\u8bd5\u6587\u4ef6\u540d\u5e76\u9010\u4e2a\u8c03\u7528\u3002</p> <pre><code>AX_TESTCASES_LIST=$(shell cat ./apps/$(AX_TESTCASE)/testcase_list | tr '\\n' ',')\n</code></pre> <p>\u4f8b\u5982\uff0c\u5f53 <code>apps/myapp/testcase_list</code> \u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>hello\nworld\n</code></pre> <p>\u6267\u884c <code>make ARCH=x86_64 LOG=error AX_TESTCASE=myapp BLK=y NET=y ACCEL=n run</code> \u65f6\uff1a</p> <p><code>AX_TESTCASES_LIST</code> \u7684\u5185\u5bb9\u4f1a\u53d8\u4e3a <code>hello,world</code> \u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7ee7\u7eed\u5904\u7406\u3001\u89e3\u6790\u3002</p> </li> </ul>"},{"location":"implementation/boot/#_8","title":"\u904d\u5386\u6d4b\u8bd5\u7528\u4f8b","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e8e\u4ece\u73af\u5883\u53d8\u91cf\u4e2d\u83b7\u53d6\u6d4b\u8bd5\u7528\u4f8b\u5217\u8868\uff0c\u6784\u5efa\u6d4b\u8bd5\u7528\u4f8b <code>Iterator</code> \uff0c\u5e76\u4f9d\u6b21\u6267\u884c\u8fd9\u4e9b\u6d4b\u8bd5\u7528\u4f8b\uff1a</p> <pre><code>let testcases = option_env!(\"AX_TESTCASES_LIST\")\n    .unwrap_or_else(|| \"Please specify the testcases list by making user_apps\")\n    .split(',')\n    .filter(|&amp;x| !x.is_empty());\n\nfor testcase in testcases {\n    let args = testcase\n        .split_ascii_whitespace()\n        .map(Into::into)\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    info!(\"run_user_app args {:?}\",args);\n\n    let exit_code = entry::run_user_app(&amp;args, &amp;[]);\n    info!(\"User task {} exited with code: {:?}\", testcase, exit_code);\n}\n</code></pre>"},{"location":"implementation/boot/#_9","title":"\u6267\u884c\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b","text":"<p>\u7a0b\u5e8f\u901a\u8fc7 <code>entry::run_user_app</code> \u6784\u5efa\u53ef\u8fd0\u884c\u7684 <code>task</code> \u5e76\u8c03\u7528\u8fd0\u884c</p> <p></p> <ol> <li> <p>\u6784\u5efa\u7528\u6237\u7a7a\u95f4 , \u6620\u5c04\u5185\u6838\u533a\u57df</p> <p>\u4fdd\u8bc1\u5185\u6838\u7684\u6307\u4ee4\u3001\u6570\u636e\uff0c\u5728\u5730\u5740\u7a7a\u95f4\u4e2d\u662f\u53ef\u8bbf\u95ee\u7684\u3002</p> <p>\u901a\u8fc7\u8c03\u7528 <code>new_user_aspace_empty()</code> \u51fd\u6570\u83b7\u5f97\u4e00\u4e2a\u7a7a\u7684\u7528\u6237\u7a7a\u95f4\uff0c\u7136\u540e\u8c03\u7528 <code>copy_from_kernel</code> \u5c06\u5185\u6838\u7684\u533a\u57df\u7684\u6570\u636e\u6307\u4ee4\u62f7\u8d1d\u8fdb\u7528\u6237\u6001\u5730\u5740\u7a7a\u95f4\uff0c\u4f7f\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e0d\u4f1a\u56e0\u4e3a\u7f3a\u9875\u8bbf\u95ee\u5185\u6838\u533a\u800c\u5d29\u6e83\u3002</p> <pre><code>let mut uspace = new_user_aspace_empty()\n    .and_then(|mut it| {\n        copy_from_kernel(&amp;mut it)?;\n        Ok(it)\n    })\n    .expect(\"Failed to create user address space\");\n</code></pre> </li> <li> <p>\u8bbe\u7f6e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55</p> <p>\u8fd9\u4e2a\u90e8\u5206\u662f\u4e3a\u4e86\u517c\u5bb9\u5185\u6838\u6bd4\u8d5b\uff0c\u4f7f\u7528\u5f53\u524d\u8fdb\u7a0b\u7684\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\u4f5c\u4e3a\u9ed8\u8ba4\u76ee\u5f55\uff0c\u4e4b\u540e\u7684\u8def\u5f84\u67e5\u8be2\u5c06\u4ee5\u8be5\u76ee\u5f55\u4e3a\u76f8\u5bf9\u8def\u5f84\u8d77\u70b9\u3002</p> <pre><code>let cwd = AxProcess::current().fs().cwd().to_path_buf();\n</code></pre> </li> <li> <p>\u52a0\u8f7d\u5e94\u7528</p> <p>\u52a0\u8f7d\u5e76\u6620\u5c04\u7528\u6237\u7a0b\u5e8f\u7684 <code>ELF</code> \u6587\u4ef6\uff0c\u8fd4\u56de\u5165\u53e3\u5730\u5740\u3002</p> <pre><code>let (entry_vaddr, ustack_top) = load_user_app(&amp;mut uspace, args, envs)\n    .unwrap_or_else(|e| panic!(\"Failed to load user app: {}\", e));\n</code></pre> </li> <li> <p>\u6784\u9020\u4e0a\u4e0b\u6587\u5e76\u6a21\u62df\u8fd4\u56de</p> <p>\u521b\u5efa\u7528\u6237\u6001 <code>Trap</code> \u4e0a\u4e0b\u6587\uff0c\u8bbe\u7f6e\u8fd4\u56de\u70b9\u4e3a\u7528\u6237\u7a0b\u5e8f\u5165\u53e3\u3002</p> <pre><code>let uctx = UspaceContext::new(entry_vaddr.into(), ustack_top, 2333);\n\nlet mut task = new_user_task(name, uctx, None);\ntask.ctx_mut().set_page_table_root(uspace.page_table_root());\n</code></pre> </li> <li> <p>\u521d\u59cb\u5316\u547d\u540d\u7a7a\u95f4\u8d44\u6e90</p> <pre><code>let process_data = ProcessData::new(exe_path, Arc::new(Mutex::new(uspace)));\n\nFD_TABLE\n    .deref_from(&amp;process_data.ns)\n    .init_new(FD_TABLE.copy_inner());\nCURRENT_DIR\n    .deref_from(&amp;process_data.ns)\n    .init_new(CURRENT_DIR.copy_inner());\nCURRENT_DIR_PATH\n    .deref_from(&amp;process_data.ns)\n    .init_new(CURRENT_DIR_PATH.copy_inner());\n</code></pre> <p>\u521b\u5efa\u65b0\u7684 <code>ProcessData</code> \u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u5c01\u88c5\u5730\u5740\u7a7a\u95f4\u548c\u8def\u5f84\u4fe1\u606f\u3002</p> <p><code>uspace</code> \u662f\u7528\u6237\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u4f7f\u7528 <code>Mutex</code> \u5305\u88f9\u540e\u4fbf\u4e8e\u540e\u7eed\u591a\u7ebf\u7a0b\u8bbf\u95ee\u3002\u5177\u4f53\u521b\u5efa\u6d41\u7a0b\u89c1\u4e0a\u6587\u3002</p> <p><code>exe_path</code> \u8bb0\u5f55\u53ef\u6267\u884c\u7a0b\u5e8f\u8def\u5f84\uff0c\u5176\u521b\u5efa\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p>\u9996\u5148\u901a\u8fc7 <code>args[0]</code> \u83b7\u5f97\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u5bf9\u5176\u8c03\u7528 <code>rsplit_once()</code> \u83b7\u5f97\u76ee\u5f55\u540d\u4ee5\u53ca\u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\u3002</p> <pre><code>let exe_path = args[0].clone();\nlet (dir, name) = exe_path.rsplit_once('/').unwrap_or((\"\", &amp;exe_path));\n</code></pre> </li> <li> <p>\u521b\u5efa\u65b0\u8fdb\u7a0b </p> <pre><code>let tid = task.id().as_u64() as Pid;\nlet process = init_proc().fork(tid).data(process_data).build();\n</code></pre> <p>\u901a\u8fc7 <code>init_proc()</code> \u51fd\u6570\u83b7\u5f97\u4e4b\u524d <code>axprocess</code> \u901a\u8fc7 <code>init</code> \u521b\u5efa\u7684 <code>proc</code> \u53d8\u91cf\u3002</p> <pre><code>axprocess::Process::new_init(axtask::current().id().as_u64() as _).build();\n</code></pre> <p>\u5bf9 <code>init_proc()</code> \u83b7\u5f97\u7684 <code>Arc&lt;Process&gt;</code> \u53d8\u91cf\u8c03\u7528 <code>fork()</code> \uff0c\u83b7\u5f97\u4e34\u65f6\u7684 <code>ProcessBuilder</code> \u3002</p> <pre><code>/// Creates a child [`Process`].\npub fn fork(self: &amp;Arc&lt;Process&gt;, pid: Pid) -&gt; ProcessBuilder {\n    ProcessBuilder {\n        pid,\n        parent: Some(self.clone()),\n        data: Box::new(()),\n    }\n}\n</code></pre> <p><code>ProcessBuilder</code> \u8c03\u7528 <code>data()</code> \u5c06\u5c01\u88c5\u7684 <code>fd_table</code> \u7b49\u6570\u636e\u5173\u8054\u5230 <code>ProcessBuilder</code> \u4e0a\u3002</p> <p><pre><code>impl ProcessBuilder {\n    /// Sets the data associated with the [`Process`].\n    pub fn data&lt;T: Any + Send + Sync&gt;(self, data: T) -&gt; Self {\n        Self {\n            data: Box::new(data),\n            ..self\n        }\n    }\n}\n</code></pre> \u6700\u540e\u8c03\u7528 <code>build()</code> \u51fd\u6570\u5b8c\u6210\u65b0\u8fdb\u7a0b\u7684\u521b\u5efa\u3002</p> </li> <li> <p>\u4e3a\u65b0\u8fdb\u7a0b\u521b\u5efa\u7ebf\u7a0b </p> <p>\u4e3a\u8fd9\u4e2a\u65b0\u7684\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u5e76\u6ce8\u518c\u5230\u8c03\u5ea6\u7cfb\u7edf\uff0c\u51c6\u5907\u6267\u884c\u3002</p> <pre><code>let thread = process.new_thread(tid).data(ThreadData::new()).build();\nadd_thread_to_table(&amp;thread);\n\ntask.init_task_ext(TaskExt::new(thread));   \n</code></pre> </li> <li> <p>\u7b49\u5f85\u8fdb\u7a0b\u8fd0\u884c\u7ed3\u675f\u5e76\u8fd4\u56de\u9000\u51fa\u7801</p> <p>\u5c06\u8fdb\u7a0b\u653e\u5165\u8c03\u5ea6\u961f\u5217\uff0c\u5e76\u7b49\u5f85\u8fd0\u884c\u7ed3\u675f\u3002</p> <pre><code>let task = axtask::spawn_task(task);\n// TODO: we need a way to wait on the process but not only the main task\ntask.join()\n</code></pre> </li> </ol>"},{"location":"implementation/monolithic/","title":"\u5b8f\u5185\u6838\u67b6\u6784\u8bbe\u8ba1","text":"<pre><code>flowchart TD\n    subgraph **starry**\n    entrypoint\n    handle_syscall\n    end\n    subgraph starry-core\n    app_loader &lt;--&gt; task_mgr\n    handle_page_fault --&gt; task_mgr\n    end\n    entrypoint --&gt; app_loader --&gt; app([User App])\n    app -- syscalls --&gt; handle_syscall --&gt; starry-syscall --&gt; starry-core\n    app -- page faults --&gt; handle_page_fault\n    task_mgr &lt;--&gt; axsignal\n    task_mgr &lt;--&gt; axprocess\n    starry-syscall --&gt; axsignal\n    starry-syscall --&gt; axprocess\n    starry-syscall --&gt; axfutex\n    starry-syscall --&gt; ...</code></pre>"},{"location":"intro/support/","title":"Starry \u652f\u6301\u60c5\u51b5","text":""},{"location":"modules/core/","title":"Starry Core \u6a21\u5757","text":"<p>\u4e0e\u5b8f\u5185\u6838\u67b6\u6784\u76f4\u63a5\u5173\u8054\u7684\u529f\u80fd\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u5904\u7406 page fault</li> <li>\u52a0\u8f7d\u7528\u6237\u7a0b\u5e8f</li> <li>\u7ba1\u7406\u8fdb\u7a0b\uff08\u901a\u8fc7 <code>axprocess</code> \u548c <code>axtask</code>\uff09\u548c\u5171\u4eab\u8d44\u6e90\uff08\u901a\u8fc7 <code>axns</code>\uff09</li> </ul> <p>TODO: \u5f85\u5b8c\u5584</p>"},{"location":"modules/syscall/","title":"\u7cfb\u7edf\u8c03\u7528\u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217 Unix-like/POSIX-like \u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5747\u4ee5 <code>sys_xxx(args...) -&gt; LinuxResult&lt;isize&gt;</code> \u7684\u5f62\u5f0f\u63d0\u4f9b\u3002</p> <p>\u8be5\u6a21\u5757\u7684\u76ee\u7684\u4e4b\u4e00\u662f\u53d6\u4ee3 <code>arceos_posix_api</code>\uff0c\u671f\u671b\u5b9e\u73b0\u4e00\u4e2a\u540c\u65f6\u517c\u5bb9 unikernel\uff08\u7528\u4e8e <code>axlibc</code>\uff09\u548c\u5b8f\u5185\u6838\u53c8\u5c3d\u53ef\u80fd\u5b89\u5168\u7684 POSIX API \u6a21\u5757\u3002</p> <p>\u901a\u8fc7 UserPtr \u5bf9\u4f20\u5165\u7684\u7528\u6237\u6307\u9488\u8fdb\u884c\u68c0\u67e5\u3002</p>"},{"location":"modules/userptr/","title":"UserPtr \u5c01\u88c5","text":"<p>\u5728\u5185\u6838\u7a7a\u95f4\u4e2d\u5904\u7406\u6765\u81ea\u7528\u6237\u7a7a\u95f4\u7684\u6307\u9488\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u68c0\u67e5\u4ee5\u786e\u4fdd\u6307\u9488\u7684\u5408\u6cd5\u6027\u3002</p> <p>\u5728 Linux \u4e2d\uff0c\u7528\u6237\u7a7a\u95f4\u6307\u9488\u4f7f\u7528 <code>__user</code> \u6807\u8bb0\uff0c\u4e14\u9700\u8981\u4f7f\u7528 <code>copy_from_user</code> \u548c <code>copy_to_user</code> \u7b49\u51fd\u6570\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002\u5728 Starry \u4e2d\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86 <code>UserPtr&lt;T&gt;</code> \u4e0e <code>UserConstPtr&lt;T&gt;</code> \u4e24\u79cd\u7c7b\u578b\u7528\u4e8e\u5904\u7406\u7528\u6237\u7a7a\u95f4\u7684\u6307\u9488\u3002</p> <p><code>usize</code> \u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5 <code>into</code> \u8f6c\u6362\u4e3a <code>UserPtr&lt;T&gt;</code> \u6216 <code>UserConstPtr&lt;T&gt;</code>\u3002<code>UserPtr::get</code> \u65b9\u6cd5\u4f1a\u6267\u884c\u5bf9\u76ee\u6807\u5730\u5740\u7684\u68c0\u67e5\uff08\u5305\u62ec\u662f\u5426\u5bf9\u9f50\u3001\u5bf9\u5e94\u9875\u662f\u5426\u52a0\u8f7d\u4e14\u7528\u6237\u53ef\u8bbf\u95ee\uff09\uff0c\u6210\u529f\u540e\u8fd4\u56de <code>*mut T</code>\uff08\u6216 <code>*const T</code>\uff09\u3002\u7531\u4e8e\u5728 Starry \u4e2d\u7528\u6237\u4e0e\u5185\u6838 \u5171\u4eab\u5730\u5740\u7a7a\u95f4\uff0c\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8be5\u6307\u9488\u5199\u5165 / \u8bfb\u51fa\u6570\u636e\u3002</p> <p>\u6ce8\u610f <code>UserPtr::get</code> \u5047\u8bbe\u4f7f\u7528\u8005\u4ec5\u4f1a\u8bbf\u95ee\u76ee\u6807\u6307\u9488\u5904 <code>size_of::&lt;T&gt;()</code> \u5927\u5c0f\u7684\u5185\u5b58\u533a\u57df\u3002\u5982\u679c\u6307\u9488\u5bf9\u5e94\u533a\u57df\u662f\u5b9a\u957f\u6570\u7ec4\u6216\u5176\u4ed6\u7c7b\u578b\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u6307\u9488\uff1a</p> <ul> <li><code>UserPtr::get_as(Layout) -&gt; *mut T</code>\uff1a\u68c0\u67e5\u76ee\u6807\u533a\u57df\u6307\u5b9a\u5e03\u5c40\u662f\u5426\u5408\u6cd5\uff08\u5e03\u5c40\u5305\u62ec\u5bf9\u9f50\u548c\u5927\u5c0f\uff09\uff0c\u6210\u529f\u540e\u8fd4\u56de <code>*mut T</code>\uff1b</li> <li><code>UserPtr::get_as_array(length) -&gt; *mut T</code>\uff1a\u76f8\u5f53\u4e8e <code>UserPtr::get_as(Layout::new::&lt;[T; length]&gt;())</code>\uff1b</li> <li><code>UserPtr::get_as_bytes(length) -&gt; *mut T</code>\uff1a\u76f8\u5f53\u4e8e <code>UserPtr::get_as(Layout::new::&lt;[u8; length]&gt;())</code>\u3002</li> <li><code>UserPtr::get_as_null_terminated() -&gt; &amp;'static mut [T]</code>\uff1a\u68c0\u67e5\u76ee\u6807\u533a\u57df\u662f\u5426\u4ee5 <code>T::default()</code> \u7ed3\u5c3e\uff0c\u6210\u529f\u540e\u8fd4\u56de <code>&amp;'static mut [T]</code>\u3002</li> <li><code>UserConstPtr::&lt;c_char&gt;::get_as_str() -&gt; &amp;'static str</code>\uff1a\u68c0\u67e5\u76ee\u6807\u533a\u57df\u662f\u5426\u662f\u5408\u6cd5\u7684 C \u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u6210\u529f\u540e\u8fd4\u56de <code>&amp;'static str</code>\u3002\u76f8\u5f53\u4e8e <code>UserConstPtr::&lt;c_char&gt;::get_as_null_terminated()</code>\u3002</li> </ul>"},{"location":"notes/","title":"Starry Tutorial Book","text":"But I can only show you the door.  You have to walk through it."},{"location":"notes/#_1","title":"\u6587\u6863\u67b6\u6784","text":"<p>TODO</p> <p>\u5bf9\u4e8e PC \u7aef\u8bfb\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u9875\u9762\u4e0a\u65b9\u7684 Navbar \u9009\u62e9\u76f8\u5e94\u9886\u57df\uff0c\u9875\u9762\u5de6\u4fa7\u7684 Sidebar \u9009\u62e9\u76f8\u5e94\u4e3b\u9898\u8fdb\u884c\u9605\u8bfb\u3002</p> <p>\u5bf9\u4e8e\u79fb\u52a8\u7aef\u8bfb\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u9875\u9762\u5de6\u4e0a\u89d2\u7684\u76ee\u5f55 Icon\uff0c\u8fdb\u800c\u70b9\u51fb\u8fd4\u56de Icon\uff0c\u7136\u540e\u9009\u62e9\u76f8\u5e94\u7684\u9886\u57df\uff0c\u8fdb\u800c\u9009\u62e9\u76f8\u5e94\u4e3b\u9898\u8fdb\u884c\u9605\u8bfb\u3002</p>"},{"location":"notes/#_2","title":"\u81f4\u8c22","text":"<p>TODO</p>"},{"location":"notes/editor/","title":"\u7f16\u8f91\u8005\u987b\u77e5\uff08\u8349\u6848\uff09","text":""},{"location":"notes/editor/#_2","title":"\u8d21\u732e\u65b9\u5f0f","text":"<p>\u6587\u6863\u76ee\u524d\u5b58\u50a8\u4e8e GitHub Repo \u4e0a\uff0c\u4f7f\u7528 GitHub Pages \u90e8\u7f72\u6210\u4e86\u76ee\u524d\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7f51\u7ad9\u3002\u5982\u679c\u60a8\u6709\u610f\u8d21\u732e\u5230\u672c\u9879\u76ee\uff0c\u8bf7\u60a8\uff1a</p> <ul> <li>\u68c0\u67e5\u81ea\u5df1\u60f3\u8981\u8d21\u732e\u7684\u90e8\u5206\u662f\u5426\u5728 Repo \u7684 Issue \u4e2d\u5df2\u7ecf\u63d0\u51fa\uff0c\u82e5\u5df2\u7ecf\u63d0\u51fa\u5219\u4e0d\u5fc5\u91cd\u590d PR\u3002</li> <li>\u786e\u8ba4\u81ea\u5df1\u60f3\u8981\u8d21\u732e\u7684\u90e8\u5206\u6682\u672a\u5728 Issue \u4e2d\u63d0\u51fa\u65f6\uff0c\u63d0\u51fa Issue \u8868\u660e\u9700\u8981\u8d21\u732e\u54ea\u4e00\u90e8\u5206\u5185\u5bb9\u3002</li> <li>\u4ed4\u7ec6\u9605\u8bfb\u672c\u7f16\u8f91\u8005\u987b\u77e5\u4e0b\u7684\u7f16\u8f91\u8981\u6c42\uff0c\u4e0d\u7b26\u5408\u4e0b\u8ff0\u7f16\u8f91\u8981\u6c42\u7684\u8d21\u732e\uff0c\u5ba1\u6838\u56e2\u961f\u53ef\u80fd\u4f1a\u62d2\u7edd\u5408\u5e76\u5e76\u8981\u6c42\u60a8\u4fee\u6539\u3002</li> <li>\u5c06\u6587\u6863\u4ed3\u5e93 Fork \u5230\u4e2a\u4eba\u8d26\u6237\u3002</li> <li>\u5728\u672c\u5730\u5bf9\u4e2a\u4eba\u4ed3\u5e93\u7684\u6587\u6863\u8fdb\u884c\u4fee\u6539\u540e\u8fdb\u884c Commit\u3002</li> <li>\u63d0\u8bf7 Pull Request\uff0c\u5ba1\u6838\u56e2\u961f\u4f1a\u5c3d\u5feb\u5ba1\u6838\u60a8\u7684\u8d21\u732e\u5185\u5bb9\uff0c\u5ba1\u6838\u5b8c\u6bd5\u540e\u4f1a\u5173\u95ed\u60a8\u63d0\u51fa\u7684 Issue\u3002</li> </ul>"},{"location":"notes/editor/#_3","title":"\u672c\u5730\u6784\u5efa","text":"<p>\u5728\u63d0\u8bf7 PR \u4e4b\u524d\uff0c\u60a8\u53ef\u4ee5\u9996\u5148\u5728\u672c\u5730\u6784\u5efa\u6587\u6863\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u6d4f\u89c8\uff0c\u4ee5\u786e\u5b9a\u81ea\u5df1\u7684\u6587\u6863\u6e32\u67d3\u6b63\u786e\u4e14\u7b26\u5408\u683c\u5f0f\u8981\u6c42\u3002</p> <p>\u6784\u5efa\u4e4b\u524d\uff0c\u9996\u5148\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u786e\u4fdd\u60a8\u7684\u73af\u5883\u5177\u6709 Python \u548c pip\uff1a</p> <pre><code>python --version\npip --version\n</code></pre> <p>\u968f\u540e\u8fdb\u5165 Clone \u5230\u672c\u5730\u7684\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\uff0c\u5b89\u88c5 Python \u4f9d\u8d56\uff1a</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>\u968f\u540e\u8fd0\u884c\uff1a</p> <pre><code>mkdocs serve\n</code></pre> <p>\u5e94\u5f53\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u8f93\u51fa\u4fe1\u606f\uff1a</p> <pre><code>INFO     -  Building documentation...\nINFO     -  Cleaning site directory\nINFO     -  Documentation built in 8.75 seconds\nINFO     -  [17:16:02] Serving on http://127.0.0.1:8000/\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee <code>http://127.0.0.1:8000/</code> \u67e5\u770b\u672c\u5730\u6784\u5efa\u7684\u6587\u6863\u4e86\u3002</p>"},{"location":"notes/editor/#_4","title":"\u51c6\u786e\u6027","text":"<p>\u8bf7\u8bb0\u4f4f\uff0c\u7f16\u5199\u8005\u6709\u4e49\u52a1\u786e\u4fdd\u8d21\u732e\u7684\u6587\u6863\u6ca1\u6709\u4e8b\u5b9e\u9519\u8bef\u3002</p>"},{"location":"notes/editor/#_5","title":"\u6587\u6863\u5b58\u50a8","text":"<ul> <li>\u6587\u4ef6\u540d\u8bf7\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\uff0c\u5206\u9694\u7b26\u8bf7\u4f7f\u7528 <code>-</code>\u3002</li> <li>\u6587\u4ef6\u5e94\u89c6\u4e3b\u9898\uff0c\u653e\u4e8e\u5bf9\u5e94\u7684\u5206\u7c7b\u76ee\u5f55\u4e0b\u3002\u65b0\u5efa\u7684\u6587\u4ef6\u9700\u8981\u5728 <code>mkdocs.yml</code> \u4e2d\u58f0\u660e\uff0c\u4ee5\u8c03\u6574\u6587\u6863\u7684\u5c42\u7ea7\u7ed3\u6784\u3002<ul> <li>\u82e5\u591a\u4e2a\u6587\u6863\u540c\u65f6\u5f52\u5c5e\u67d0\u4e2a\u5927\u4e3b\u9898\uff0c\u5219\u53ef\u4e3a\u8be5\u5927\u4e3b\u9898\u65b0\u5efa\u6587\u4ef6\u5939\u5b58\u50a8\u3002</li> </ul> </li> <li>\u5173\u4e8e\u6587\u6863\u4e2d\u9700\u8981\u5c55\u793a\u7684\u56fe\u7247\uff0c\u5982\u679c\u672a\u4f7f\u7528\u5728\u7ebf\u56fe\u5e8a\uff0c\u5219\u8bf7\u5b58\u50a8\u5230 <code>/static</code> \u4e0b\u4e0e\u6587\u6863\u76f8\u5bf9 <code>/docs</code> \u76ee\u5f55\u540c\u540d\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u547d\u540d\u4e3a <code>\u5185\u5bb9\u6982\u8981.\u6587\u4ef6\u6269\u5c55\u540d</code>\u3002\u5982 <code>/docs/basic/git.md</code> \u7684\u56fe\u7247\u6587\u4ef6\u8bf7\u5b58\u50a8\u4e3a <code>/static/basic/git/logo.png</code>\u3002</li> </ul>"},{"location":"notes/editor/#_6","title":"\u6587\u7ae0\u683c\u5f0f","text":"<p>\u6362\u884c\u7b26</p> <p>\u6362\u884c\u7b26\u7684\u95ee\u9898\u5c24\u5176\u91cd\u8981\uff0c\u4ee5\u81f3\u4e8e\u9700\u8981\u5728\u6587\u7ae0\u683c\u5f0f\u90e8\u5206\u7684\u4e00\u5f00\u59cb\u5c31\u6307\u51fa\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u672c\u6587\u6863\u7684\u81ea\u52a8\u5316\u8d21\u732e\u8ba1\u7b97\u63d2\u4ef6\u57fa\u4e8e Git \u7684 Commit \u884c\u6570\uff0c\u800c\u4fee\u6539\u6362\u884c\u7b26\u4e5f\u4f1a\u8ba1\u7b97\u5230 Commit \u4fee\u6539\u4e4b\u4e2d\uff0c\u6240\u4ee5\u6362\u884c\u7b26\u4f1a\u5f71\u54cd\u5230\u6587\u6863\u6700\u540e\u7684\u8d21\u732e\u5ea6 Credit\u3002</p> <p>\u5bf9\u4e8e\u5df2\u5b58\u5728\u7684\u6587\u7ae0\uff0c\u4e0d\u80fd\u66f4\u6539\u5176\u672a\u4fee\u6539\u7684\u884c\u7684\u6362\u884c\u7b26\uff0c\u5426\u5219 Pull Request \u5c06\u4f1a\u88ab\u76f4\u63a5\u5173\u95ed\uff1b</p> <p>\u5bf9\u4e8e\u65b0\u5efa\u7acb\u7684\u6587\u6863\uff0c\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u6362\u884c\u7b26\u3002</p>"},{"location":"notes/editor/#_7","title":"\u6807\u9898\u4e0e\u5c0f\u6807\u9898","text":"<ul> <li>\u6587\u7ae0\u4e2d\u5e94\u4ec5\u5b58\u5728\u4e00\u4e2a\u4e00\u7ea7\u6807\u9898\uff0c\u4ee5\u6982\u62ec\u6587\u7ae0\u7684\u4e3b\u9898\u3002</li> <li>\u6587\u7ae0\u91c7\u7528\u4e8c\u7ea7\u6807\u9898\u4f5c\u4e3a\u5206\u8282\u7b26\uff0c\u5982\u3010\u524d\u7f6e\u77e5\u8bc6\u3011\u3010\u540e\u7eed\u62d3\u5c55\u3011\u3010\u8d44\u6e90\u94fe\u63a5\u3011\u5747\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u8282\u3002\u6587\u7ae0\u7684\u4e3b\u9898\u5185\u5bb9\u5e94\u5206\u4e3a\u591a\u4e2a\u5c0f\u8282\u3002</li> <li>\u4e09\u7ea7\u6807\u9898\u5e94\u8d77\u5230\u5728\u4e00\u4e2a\u5c0f\u8282\u4e2d\u5206\u9694\u4e0d\u540c\u8ba8\u8bba\u5185\u5bb9\u7684\u4f5c\u7528\u3002\u5982\u4e8c\u7ea7\u6807\u9898 <code>\u4efb\u52a1\u8c03\u5ea6</code> \u4e0b\uff0c\u4e09\u7ea7\u6807\u9898\u53ef\u4ee5\u5305\u542b <code>\u4efb\u52a1\u8c03\u5ea6\u63a5\u53e3</code>\u3001<code>\u591a\u6838\u8c03\u5ea6\u7684\u5b9e\u73b0</code> \u7b49\u7b49\u6574\u4f53\u4e0a\u4e0d\u76f8\u4ea4\u7684\u5185\u5bb9\u3002</li> <li>\u4e0d\u8981\u6ee5\u7528\u6807\u9898\uff0c\u6211\u4eec\u63a8\u8350\u81f3\u591a\u4f7f\u7528\u81f3\u4e09\u7ea7\u6807\u9898\uff0c\u56db\u7ea7\u53ca\u4ee5\u4e0a\u6807\u9898\u53ef\u4ee5\u4f7f\u7528\u52a0\u7c97\u3001\u65e0\u5e8f\u5217\u8868\u4ee3\u66ff\u3002\u6ee5\u7528\u6807\u9898\u4f1a\u4f7f\u5f97\u6587\u7ae0\u7684\u76ee\u5f55\u7ed3\u6784\u53d8\u590d\u6742\uff0c\u4e5f\u4f1a\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u8bfb\u8005\u5bf9\u6240\u5b66\u4e60\u77e5\u8bc6\u7684\u7ed3\u6784\u7684\u6574\u4f53\u6027\u628a\u63e1\u3002\u5982\u679c\u60f3\u5f3a\u8c03\u5185\u5bb9\uff0c\u4f7f\u7528 <code>**\u5f3a\u8c03\u5185\u5bb9**</code>\u3002</li> <li>\u6807\u9898\u4e2d\u5e94\u5f53\u5c3d\u91cf\u4e0d\u51fa\u73b0\u4ee3\u7801\u5757\u3002</li> </ul>"},{"location":"notes/editor/#_8","title":"\u6392\u7248\u8981\u6c42","text":"<p>\u6211\u4eec\u5e76\u4e0d\u4e25\u683c\u8981\u6c42\u6587\u6863\u7684\u6392\u7248\u98ce\u683c\uff0c\u4f46\u7f16\u8f91\u8005\u5e94\u5f53\u5c3d\u53ef\u80fd\u9075\u5b88\u4ee5\u4e0b\u57fa\u672c\u7684\u6587\u6863\u884c\u6587\u8981\u6c42\u3002</p> <p>\u6b63\u786e\u4f7f\u7528\u6807\u70b9\u7b26\u53f7</p> <ul> <li>\u6b63\u786e\u4f7f\u7528\u5168\u89d2\u6807\u70b9\u7b26\u53f7\u4e0e\u534a\u89d2\u6807\u70b9\u7b26\u53f7\u3002\u6c49\u8bed\u8bf7\u4f7f\u7528\u5168\u89d2\u7b26\u53f7\uff0c\u82f1\u8bed\u8bf7\u4f7f\u7528\u534a\u89d2\u7b26\u53f7\u3002</li> <li>\u8bf7\u5728\u6bcf\u53e5\u8bdd\u7684\u672b\u5c3e\u6dfb\u52a0\u53e5\u53f7\u3002</li> <li>\u6b63\u786e\u4f7f\u7528\u62ec\u53f7\u3002\u62ec\u53f7\u5728\u53e5\u4e2d\u8868\u793a\u5bf9\u53e5\u4e2d\u524d\u4e00\u4e2a\u5143\u7d20\u7684\u89e3\u91ca\u8bf4\u660e\uff0c\u5982 <code>\u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09</code>\u3002\u62ec\u53f7\u5728\u53e5\u5916\u8868\u793a\u5bf9\u524d\u9762\u6574\u4e2a\u53e5\u5b50\u7684\u89e3\u91ca\u8bf4\u660e\u3002</li> <li>\u6b63\u786e\u4f7f\u7528\u5206\u53f7\uff0c\u53ef\u4ee5\u4f7f\u5f97\u884c\u6587\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u3002</li> </ul> <p>\u6b63\u786e\u8fdb\u884c\u4e2d\u6587\u6392\u7248</p> <ul> <li>\u4e2d\u82f1\u6587\u4e4b\u95f4\u3001\u4e2d\u6587\u548c\u6570\u5b57\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c\uff0c\u6570\u5b57\u548c\u5355\u4f4d\u4e4b\u95f4\u4e0d\u9700\u8981\u589e\u52a0\u7a7a\u683c\u3002</li> <li>\u884c\u6587\u4e2d\u6b63\u6587\u4e0e\u8d85\u94fe\u63a5\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c\u3002</li> <li>\u5168\u89d2\u5b57\u7b26\u548c\u5176\u4ed6\u5b57\u7b26\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c\u3002</li> <li>\u4e13\u6709\u540d\u8bcd\u4f7f\u7528\u6b63\u786e\u7684\u5927\u5c0f\u5199\u3002\u5982\u4f7f\u7528\u7f29\u5199\uff0c\u5219\u8be5\u7f29\u5199\u5e94\u5df2\u6210\u4e3a\u4e1a\u754c\u6807\u51c6\u3002</li> </ul>"},{"location":"notes/editor/#_9","title":"\u4f7f\u7528\u56fe\u7247","text":"<p>\u56fe\u7247\u662f\u91cd\u8981\u7684\u8f85\u52a9\u8bf4\u660e\u7684\u5de5\u5177\uff0c\u4f46\u662f\u7531\u4e8e Markdown \u7684\u56fe\u7247\u5de5\u5177\u5e76\u4e0d\u5b8c\u5584\uff0c\u6240\u4ee5\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u8981\u6c42\u3002</p> <p>Markdown \u7684\u56fe\u7247\u5c3a\u5bf8\u95ee\u9898</p> <p>Markdown \u6ca1\u6709\u63a7\u5236\u56fe\u7247\u5c3a\u5bf8\u7684\u547d\u4ee4\uff0c\u5176\u9ed8\u8ba4\u7f29\u653e\u56fe\u7247\u4ee5\u586b\u6ee1\u5bbd\u5ea6\u3002\u4e3a\u4e86\u4fdd\u8bc1\u7f8e\u89c2\u6027\u548c\u9605\u8bfb\u4f53\u9a8c\uff0c\u7c7b\u4f3c Logo \u7b49\u5e76\u4e0d\u9700\u8981\u5360\u6ee1\u5bbd\u5ea6\u7684\u56fe\u7247\uff0c\u8bf7\u4f7f\u7528 HTML \u6807\u7b7e\u63a7\u5236\u5176\u5c3a\u5bf8\u3002\u4f8b\u5982\uff1a</p> <pre><code>&lt;center&gt;\n    &lt;img src=\"https://i.loli.net/2021/10/10/NHZOsPCBmazyWjh.png\" height=\"20%\" width=\"20%\"&gt;\n&lt;/center&gt;\n</code></pre> <p>\u5e26\u4e0b\u6807\u7684\u56fe\u7247</p> <p>Markdown \u5e76\u4e0d\u652f\u6301\u5e26\u4e0b\u6807\u7684\u56fe\u7247\uff0c\u6240\u4ee5\u8bf7\u4f7f\u7528 HTML \u6807\u7b7e\u3002\u63a8\u8350\u4f7f\u7528\uff1a</p> <pre><code>&lt;center&gt;\n    &lt;img src=\"https://i.loli.net/2021/09/28/Ti2VR4DtbgcdlkM.png\" /&gt;\n    &lt;img src=\"https://i.loli.net/2021/09/28/Dvpkbd7KjLTH2yl.png\" /&gt;\n    &lt;p style=\"text-align: center; margin-top: 0px; color: gray; padding: 0px\"&gt;\u811a\u672c\u6587\u4ef6\u7684\u4f8b\u5b50&lt;/p&gt;\n&lt;/center&gt;\n</code></pre>"},{"location":"notes/editor/#_10","title":"\u4f7f\u7528\u6298\u53e0\u6846","text":"<p>\u6b63\u6587\u7684\u8bed\u8a00\u98ce\u683c\u5c3d\u91cf\u6b63\u5f0f\uff0c\u611f\u609f\u3001\u601d\u8003\u3001\u542f\u53d1\u3001\u524d\u8a00\u3001\u8865\u5145\u6027\u5185\u5bb9\u3001Checkpoint \u7b49\u975e\u6b63\u6587\u5185\u5bb9\u5c3d\u91cf\u7eb3\u5165\u6298\u53e0\u6846\u4e4b\u4e2d\u3002</p> <p>\u9644\uff1a\u6298\u53e0\u6846\u4f7f\u7528\u6559\u7a0b</p>"},{"location":"notes/editor/#_11","title":"\u4f7f\u7528\u516c\u5f0f","text":"<p>\u5f53\u884c\u6587\u9047\u5230\u6570\u5b66\u516c\u5f0f\u65f6\uff0c\u4f7f\u7528\u884c\u5185\u516c\u5f0f <code>$a \\times b$</code> \u548c\u884c\u95f4\u516c\u5f0f <code>$$ ... $$</code> \u6765\u8fdb\u884c\u6570\u5b66\u5f62\u5f0f\u7684\u8bb2\u89e3\uff0c\u800c\u4e0d\u8981\u4f7f\u7528 x^2 \u8fd9\u79cd\u5f71\u54cd\u9605\u8bfb\u7f8e\u89c2\u7a0b\u5ea6\u7684\u5199\u6cd5\u3002\u6b63\u786e\u793a\u4f8b\uff1ax^2\u3002</p> <p>\u9644\uff1aMathjax \u4ee3\u7801\u6559\u7a0b</p> <p>\u4f7f\u7528\u6570\u5b66\u516c\u5f0f\u7684\u6ce8\u610f\u4e8b\u9879</p> <ul> <li>\u90e8\u5206\u5e38\u7528\u51fd\u6570\uff0c\u5982\u4e09\u89d2\u51fd\u6570\u3001\u5bf9\u6570\u51fd\u6570\u7b49\u7684 Roman \u4f53\u7b26\u53f7\u5df2\u7ecf\u5185\u7f6e\u4e8e LaTeX \u4e2d\u3002\u5982\u4f59\u5f26\u51fd\u6570\u5e94\u5f53\u4f7f\u7528 <code>$\\cos$</code> \u8868\u793a\uff0c\u6e32\u67d3\u4e3a \\cos\u3002\u800c\u4e0d\u5e94\u5f53\u4f7f\u7528 <code>$cos$</code> \u8868\u793a\uff0c\u6e32\u67d3\u4e3a cos\u3002</li> <li>\u6e32\u67d3 Roman \u4f53\uff08\u6b63\u4f53\uff09\u7c97\u4f53\u8bf7\u4f7f\u7528 <code>$\\mathbf{}$</code>\uff0c\u5982 \\mathbf{a}\u3002\u6e32\u67d3 Italic \u4f53\uff08\u659c\u4f53\uff09\u7c97\u4f53\u8bf7\u4f7f\u7528 <code>$\\boldsymbol{a}$</code>\uff0c\u5982 \\boldsymbol{a}\u3002\u8bf7\u4e0d\u8981\u6df7\u6dc6\u4e24\u8005\u3002</li> <li>\u884c\u5185\u516c\u5f0f\u6e32\u67d3\u5206\u6570\u65f6\uff0c\u8bf7\u4f7f\u7528 <code>$\\dfrac{}{}$</code>\uff0c\u5982 \\dfrac{1}{2}\u3002\u800c\u4e0d\u5e94\u4f7f\u7528 <code>$\\frac{}{}$</code>\uff0c\u5982 \\frac{1}{2}\u3002</li> <li>\u884c\u5185\u516c\u5f0f\u5e94\u5c3d\u529b\u907f\u514d\u6c42\u548c\u3001\u6c42\u79ef\u3001\u79ef\u5206\u7b49\u5de8\u8fd0\u7b97\u7b26\uff0c\u5373 \\sum\u3001\\int \u7b49\u8fd0\u7b97\u7b26\u3002</li> <li>\u7701\u7565\u53f7\u8bf7\u4f7f\u7528 <code>$\\cdots$</code>\uff0c\u5982 a_1, a_2, \\cdots, a_n\u3002\u800c\u4e0d\u5e94\u4f7f\u7528 <code>$...$</code>\uff0c\u5982 a_1, a_2, ..., a_n\u3002</li> <li>\u6ce8\u610f\u533a\u5206\u6570\u5b66\u8bed\u8a00\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u8bf7\u4e0d\u8981\u5728\u516c\u5f0f\u5757\u5185\u4f7f\u7528\u53cc\u7b49\u53f7 == \u4e43\u81f3\u4e09\u7b49\u53f7 === \u8868\u793a\u4e24\u4e2a\u91cf\u76f8\u7b49\uff0c\u8bf7\u4f7f\u7528\u6570\u5b66\u8bed\u8a00\u4e2d\u7684\u5355\u7b49\u53f7 =\uff0c\u5982 a = b\u3002\u6b64\u5916\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7\u8fde\u7f00\u8868\u8fbe\u9ad8\u7ef4\u6570\u7ec4\uff0c\u5982 a[i][j][k]\uff0c\u8bf7\u4f7f\u7528\u51fd\u6570\u8868\u793a\uff0c\u5982 f(i, j, k)\u3002</li> <li>\u7279\u6b8a\u96c6\u5408\uff08\u5982\u81ea\u7136\u6570\u96c6\u3001\u5b9e\u6570\u96c6\uff09\u7684\u5b57\u4f53\u8bf7\u4f7f\u7528 <code>$\\mathbb{}$</code>\uff0c\u5982 \\mathbb{R}\u3001\\mathbb{N}\u3002</li> <li>\u62ec\u53f7\u5185\u4e3a\u5206\u5f0f\u7b49\u5185\u5bb9\u65f6\uff0c\u8bf7\u4f7f\u7528\u81ea\u9002\u5e94\u9ad8\u5ea6\u62ec\u53f7 <code>$\\left(\\right)$</code>\uff0c\u5982 \\left(\\dfrac{1}{2}\\right)^n\u3002\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 <code>$()$</code>\uff0c\u5982 (\\dfrac{1}{2})^n\u3002</li> <li>\u516c\u5f0f\u5185\u8bf7\u4e0d\u8981\u51fa\u73b0\u6c49\u5b57\uff0c\u51fa\u73b0\u82f1\u6587\u5355\u8bcd\u65f6\u8bf7\u4f7f\u7528\u6b63\u4f53\u3002</li> </ul>"},{"location":"notes/editor/#_12","title":"\u4f7f\u7528\u4ee3\u7801\u5757","text":"<p>\u4ee3\u7801\u5757\u5728\u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u4e2d\u8d77\u5230\u4e86\u4e3e\u8db3\u8f7b\u91cd\u7684\u5730\u4f4d\u3002</p> <p>\u6211\u4eec\u7edf\u4e00\u89c4\u5b9a\uff0c\u884c\u5185\u4ee3\u7801\u4f7f\u7528 <code>`</code> \u5305\u88f9\u3002\u884c\u95f4\u4ee3\u7801\u4f7f\u7528 <code>```</code> \u5305\u88f9\u5e76\u5728\u8d77\u59cb\u7684\u4e09\u4e2a\u53cd\u5f15\u53f7\u540e\u6807\u8bb0\u4ee3\u7801\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\uff1a</p> <pre><code>```cpp\n#include &lt;iostream&gt;\nusing namespace std;\nint main() {\n    cout &lt;&lt; \"Hello World\";\n    return 0;\n}\n```\n</code></pre> <p>\u884c\u5185\u4ee3\u7801\u548c\u6b63\u6587\u7684\u533a\u5206</p> <ul> <li>\u63a8\u8350\u5c06\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u8def\u5f84\u7b49\u4f7f\u7528\u884c\u5185\u4ee3\u7801\u8868\u793a\u3002</li> </ul> <p>\u63a8\u8350\u7684\u4ee3\u7801\u98ce\u683c</p> <ul> <li>\u53d8\u91cf\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u3001\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u7b49\u5747\u53ef\uff0c\u4f46\u9700\u8981\u5c3d\u91cf\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u547d\u540d\u98ce\u683c\u7edf\u4e00\u3002</li> <li>\u4e0b\u5217\u4ee3\u7801\u98ce\u683c\u60ef\u4f8b\u4ee5 C++ \u8bed\u8a00\u4e3a\u4f8b\uff1a<ul> <li>\u5927\u62ec\u53f7\u6362\u884c\u4e0e\u4e0d\u6362\u884c\u5747\u53ef\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u683c\u5f0f\u7edf\u4e00\u3002\u4e0d\u6362\u884c\u65f6\uff0c\u5176\u4e0e\u5de6\u4fa7\u7684\u53f3\u62ec\u53f7\u4e4b\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002</li> <li>\u5173\u952e\u5b57 <code>if</code>\u3001<code>for</code> \u7b49\u4e0e\u540e\u7eed\u5de6\u62ec\u53f7\u4e4b\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002</li> <li>\u8fd0\u7b97\u7b26 <code>+</code>\u3001<code>-</code> \u7b49\u4e0e\u5de6\u53f3\u64cd\u4f5c\u6570\u4e4b\u95f4\u5e94\u5f53\u5404\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u8fd0\u7b97\u7b26 <code>.</code>\u3001<code>-&gt;</code> \u4e24\u4fa7\u5747\u4e0d\u5e94\u5f53\u6709\u7a7a\u683c\uff0c\u9017\u53f7 <code>,</code> \u5de6\u4fa7\u4e0d\u5e94\u5f53\u6709\u7a7a\u683c\u800c\u53f3\u4fa7\u5e94\u5f53\u6709\u7a7a\u683c\u3002</li> <li>\u884c\u5185\u6ce8\u91ca\u8d77\u59cb\u6807\u8bb0 <code>//</code> \u4e0e\u6ce8\u91ca\u6587\u5b57\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002</li> <li>\u4f7f\u7528 2 \u4e2a\u7a7a\u683c\u6216\u8005 4 \u4e2a\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\u5747\u53ef\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u7edf\u4e00\u3002</li> </ul> </li> </ul>"},{"location":"notes/reader/","title":"\u8bfb\u8005\u987b\u77e5","text":""},{"location":"notes/reader/#_2","title":"\u4f7f\u7528\u8bf4\u660e","text":"<p>\u6587\u6863\u5c31\u662f\u6587\u6863</p> <p>\u5982\u4f55\u4f7f\u7528\u8fd9\u4e00\u4efd\u6587\u6863\uff0c\u5176\u5b9e\u6ca1\u6709\u90a3\u4e48\u591a\u6761\u6761\u6846\u6846\u3002</p> <p>\u6587\u6863\u7ef4\u62a4\u8005\u3001\u7f16\u5199\u8005\u4f1a\u5c3d\u529b\u4fdd\u8bc1\u6bcf\u4e00\u7bc7\u6587\u6863\u5177\u6709\u5b8c\u6574\u7684\u903b\u8f91\u94fe\u6761\uff0c\u5c3d\u529b\u4fdd\u8bc1\u8bfb\u8005\u53ef\u4ee5\u505a\u5230\u4ece\u5934\u5230\u5c3e\u901a\u8bfb\u3002\u6240\u4ee5\u5982\u679c\u60a8\u662f\u67d0\u4e2a\u9886\u57df\u3001\u6846\u67b6\u3001\u8bed\u8a00\u7684\u521d\u5b66\u8005\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7740\u4ece\u6587\u6863\u7684\u6700\u5f00\u5934\u5f00\u59cb\uff0c\u8ddf\u968f\u7740\u6587\u6863\u7684\u903b\u8f91\u5b66\u4e60\u3002</p> <p>\u60a8\u4e5f\u53ef\u4ee5\u5c06\u8be5\u6587\u6863\u4f5c\u4e3a\u5de5\u5177\u4e66\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u6839\u636e\u76ee\u5f55\u67e5\u8be2\u60f3\u8981\u4e86\u89e3\u7684\u77e5\u8bc6\u3002</p>"},{"location":"notes/reader/#_3","title":"\u5982\u4f55\u5411\u6211\u4eec\u53cd\u9988","text":"<p>\u672c\u6587\u6863\u4f9d\u7136\u662f\u4e00\u4efd\u8fd8\u4e0d\u6210\u719f\u7684\u6587\u6863\uff0c\u5185\u5bb9\u53ef\u80fd\u8fd8\u4e0d\u5b8c\u5907\uff0c\u4e00\u4e9b\u529f\u80fd\u53ef\u80fd\u4e5f\u5e76\u6ca1\u6709\u90a3\u4e48\u7a33\u5b9a\u3002\u6240\u4ee5\uff0c\u5982\u679c\u60a8\u5728\u9605\u8bfb\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u65e0\u8bba\u662f\u94fe\u63a5\u5931\u6548\u3001\u9875\u9762\u7f3a\u5931\u8fd9\u4e9b\u529f\u80fd\u95ee\u9898\uff0c\u8fd8\u662f\u6587\u4e0d\u5bf9\u9898\u3001\u8bb2\u89e3\u6a21\u7cca\u3001\u5185\u5bb9\u77db\u76fe\u8fd9\u4e9b\u5185\u5bb9\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u51fa\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u7b54\u590d\u3002\u53e6\u5916\uff0c\u6240\u6709\u7684\u6539\u8fdb\u610f\u89c1\u3001\u4fee\u6539\u5efa\u8bae\u4e5f\u90fd\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u51fa\u3002</p> <p>\u76ee\u524d\u6211\u4eec\u63a5\u53d7\u53cd\u9988\u7684\u65b9\u5f0f\u4e3a GitHub Issue\uff0c\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u6ce8\u518c\u4e00\u4e2a GitHub \u8d26\u53f7\u3002</p> <p>\u9700\u8981\u53cd\u9988\u65f6\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u65b9\u7684\u201cStarry-Tutorial-Book\u201d\u8fdb\u5165\u6211\u4eec\u7684 GitHub Repo\uff0c\u70b9\u51fb Issue \u680f\u76ee\u540e\u70b9\u51fb\u53f3\u4fa7\u7684 New issue \u6309\u94ae\uff0c\u5728\u8f93\u5165\u6846\u5185\u8f93\u5165\u60a8\u60f3\u8981\u53cd\u9988\u7684\u95ee\u9898\u6216\u8005\u610f\u89c1\u5efa\u8bae\u540e\uff0c\u70b9\u51fb Submit new issue \u5373\u53ef\u3002</p> <ul> <li> <p>\u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u529f\u80fd\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u5728 Issue \u4e2d\u8bf4\u660e\u8be5\u95ee\u9898\u7684\u5177\u4f53\u8868\u73b0\u3001\u5982\u4f55\u590d\u73b0\u8fd9\u4e00\u529f\u80fd\u95ee\u9898\u4ee5\u53ca\u8be5\u95ee\u9898\u662f\u5426\u53ef\u4ee5\u7a33\u5b9a\u51fa\u73b0\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u5185\u5bb9\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u8bf4\u660e\u662f\u54ea\u4e00\u7bc7\u6587\u6863\u7684\u54ea\u4e00\u6bb5\u843d\u7684\u5185\u5bb9\u4e0d\u9002\u5f53\uff0c\u5982\u679c\u80fd\u591f\u63d0\u51fa\u4fee\u6539\u610f\u89c1\u5219\u66f4\u597d\u3002\u6211\u4eec\u4f1a\u5c3d\u5feb\u548c\u8fd9\u7bc7\u6587\u6863\u7684\u4e3b\u7f16\u5199\u8005\u8ba8\u8bba\u4fee\u6539\u3002</p> </li> <li> <p>\u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u6539\u8fdb\u610f\u89c1\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u8bf4\u660e\u5982\u4f55\u6539\u8fdb\u4ee5\u53ca\u8fd9\u6837\u6539\u8fdb\u80fd\u5e26\u6765\u7684\u597d\u5904\u3002</p> </li> <li> <p>\u5982\u679c\u4e0a\u8ff0\u53cd\u9988\u7c7b\u578b\u5747\u4e0d\u7b26\u5408\uff0c\u53ea\u9700\u8981\u5c06\u60a8\u60f3\u8981\u53cd\u9988\u7684\u5185\u5bb9\u5199\u660e\u767d\u5373\u53ef\u3002</p> </li> </ul> <p>\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u7f16\u5199\u8005\u3001\u8bfb\u8005\u3001\u7ef4\u62a4\u8005\u7684\u5171\u540c\u52aa\u529b\uff0c\u6253\u9020\u597d Starry Tutorial Book \u8fd9\u4e00\u4efd\u6587\u6863\u3002</p>"},{"location":"roadmap/","title":"Starry \u5f00\u53d1\u89c4\u5212","text":""},{"location":"setup/","title":"\u5feb\u901f\u4e0a\u624b Starry","text":"<p>\u672c\u7ae0\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u5feb\u901f\u542f\u52a8 Starry \u5185\u6838\u3002</p>"},{"location":"setup/applications/","title":"\u8fd0\u884c\u66f4\u591a\u590d\u6742\u5e94\u7528","text":""},{"location":"setup/basic/","title":"Starry \u8fd0\u884c\u57fa\u672c\u5e94\u7528","text":""},{"location":"setup/basic/#_1","title":"\u57fa\u672c\u5e94\u7528\u7ed3\u6784","text":"<p>\u57fa\u672c\u5e94\u7528\u4f4d\u4e8e\u9879\u76ee\u7684 <code>apps</code>\u76ee\u5f55\u4e0b\uff0c\u6bcf\u4e2a\u5e94\u7528\u90fd\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u540d\u5373\u4e3a\u5e94\u7528\u540d\u3002\u6bcf\u4e2a\u5e94\u7528\u6587\u4ef6\u5939\u4e0b\u5e94\u5f53\u5305\u542b\u81f3\u5c11\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li><code>Makefile</code>\uff1a\u7f16\u8bd1\u5e94\u7528\u7684 Makefile \u6587\u4ef6\uff0c\u9700\u8981\u63d0\u4f9b <code>build</code>\u548c <code>clean</code>\u4e24\u4e2a\u76ee\u6807\uff0c\u5206\u522b\u7528\u4e8e\u7f16\u8bd1\u548c\u6e05\u7406\u5e94\u7528\u3002</li> <li><code>testcase_list</code>\uff1a\u5e94\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u5217\u8868\uff0c\u6bcf\u884c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u540d\uff0c\u5176\u4e2d\u6d4b\u4f8b\u540d\u5bf9\u5e94\u7684\u6587\u4ef6\u5e94\u5f53\u5728\u6267\u884c <code>make build</code>\u540e\u751f\u6210\u3002</li> </ul> <p>\u9879\u76ee\u9ed8\u8ba4\u63d0\u4f9b\u4e86 <code>junior</code>\uff0c<code>libc</code>\u548c <code>nimbos</code>\u4e09\u4e2a\u57fa\u672c\u5e94\u7528\uff0c\u5206\u522b\u5bf9\u5e94\u4e86 <code>apps/junior</code>\uff0c<code>apps/libc</code>\u548c <code>apps/nimbos</code>\u4e09\u4e2a\u6587\u4ef6\u5939\u3002</p>"},{"location":"setup/basic/#_2","title":"\u8fd0\u884c\u57fa\u672c\u5e94\u7528","text":"<p>\u8fd0\u884c\u57fa\u672c\u5e94\u7528\u524d\u9700\u8981\u5148\u83b7\u53d6\u4f9d\u8d56\u4ed3\u5e93\uff1a</p> <pre><code>./scripts/get_deps.sh\n</code></pre> <p>\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u6765\u5728\u7279\u5b9a\u5e73\u53f0\u4e0a\u6d4b\u8bd5\u6307\u5b9a\u7684\u5e94\u7528\uff1a</p> <pre><code># \u4e3a\u6307\u5b9a\u5e73\u53f0\u7f16\u8bd1\u6307\u5b9a\u5e94\u7528\nmake ARCH={arch} AX_TESTCASE={app_name} user_apps\n# \u5207\u6362\u5230\u6307\u5b9a\u5e73\u53f0\u65f6\u9700\u8981\u91cd\u65b0\u751f\u6210\u914d\u7f6e\nmake ARCH={arch} defconfig\n# \u7f16\u8bd1\u5185\u6838\u5e76\u8fd0\u884c\u6307\u5b9a\u5e94\u7528\nmake ARCH={arch} LOG={log} AX_TESTCASE={app_name} BLK=y NET=y ACCEL=n run\n</code></pre> <p>\u5176\u4e2d\uff1a</p> <ul> <li><code>{arch}</code>\u4e3a\u5e73\u53f0\u540d\uff0c\u53d6\u503c\u53ef\u4ee5\u662f <code>riscv64</code>, <code>x86_64</code>, <code>aarch64</code>, <code>loongarch64</code>\u4e4b\u4e00\uff1b</li> <li><code>{app_name}</code>\u4e3a\u5e94\u7528\u540d\uff0c\u5e94\u8be5\u4e3a\u524d\u8ff0 <code>apps</code>\u76ee\u5f55\u4e0b\u7684\u5e94\u7528\u6587\u4ef6\u5939\u540d\uff0c\u4f8b\u5982 <code>junior</code>, <code>libc</code>, <code>nimbos</code>\u7b49\u3002</li> <li><code>{log}</code>\u4e3a\u65e5\u5fd7\u7b49\u7ea7\uff0c\u53d6\u503c\u53ef\u4ee5\u662f <code>off</code>, <code>error</code>, <code>warn</code>, <code>info</code>, <code>debug</code>, <code>trace</code>\u4e4b\u4e00\u3002</li> </ul> <p>\u7279\u522b\u5730\uff0c\u5bf9\u4e8e <code>libc</code>\u5e94\u7528\uff0c\u8fd0\u884c\u65f6\u5e94\u5f53\u542f\u7528 <code>fp_simd</code>\u7279\u6027\uff1a</p> <pre><code>make ARCH={arch} AX_TESTCASE=libc BLK=y NET=y FEATURES=fp_simd ACCEL=n run\n</code></pre> <p>\u5982\u679c\u53ea\u60f3\u7f16\u8bd1\u5185\u6838\u800c\u4e0d\u8fd0\u884c\uff0c\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u7684 <code>run</code> \u547d\u4ee4\u66ff\u6362\u4e3a <code>build</code>\uff0c\u4f8b\u5982\uff1a</p> <pre><code>make ARCH={arch} LOG={log} AX_TESTCASE={app_name} BLK=y NET=y ACCEL=n build\n</code></pre>"},{"location":"setup/basic/#_3","title":"\u7f16\u5199\u81ea\u5df1\u7684\u5e94\u7528","text":""},{"location":"setup/basic/#c","title":"\u6dfb\u52a0\u7b80\u5355\u7684c\u7a0b\u5e8f","text":"<p><code>libc</code>\u8fd9\u4e2a\u5e94\u7528\u63d0\u4f9b\u4e86\u7f16\u8bd1\u5355\u4e2a\u6e90\u6587\u4ef6\u7684c\u7a0b\u5e8f\u7684\u529f\u80fd\uff0c\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684c\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728<code>apps/libc/c</code>\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2ac\u6587\u4ef6\uff0c\u7136\u540e\u5728<code>testcase_list</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0\u8be5\u6587\u4ef6\u7684\u540d\u5b57\u5373\u53ef\u3002</p>"},{"location":"setup/basic/#_4","title":"\u6dfb\u52a0\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f","text":"<p><code>bin</code>\u8fd9\u4e2a\u5e94\u7528\u63d0\u4f9b\u4e86\u6dfb\u52a0\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7684\u529f\u80fd\uff0c\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u4e00\u4e2a\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728<code>apps/bin/{arch}</code>\u76ee\u5f55\u4e0b\u6dfb\u52a0\u4f60\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u7136\u540e\u5728<code>testcase_list</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0\u8be5\u6587\u4ef6\u7684\u540d\u5b57\u5373\u53ef\u3002</p>"},{"location":"setup/basic/#_5","title":"\u5b8c\u5168\u81ea\u5b9a\u4e49\u5e94\u7528","text":"<p>\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e24\u79cd\u7b80\u5355\u7684\u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u66f4\u8fdb\u4e00\u6b65\u4e86\u89e3\u5176\u4e2d\u7684\u539f\u7406\uff0c\u6216\u8005\u6709\u6dfb\u52a0\u590d\u6742\u5e94\u7528\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u6307\u5f15\uff1a</p> <ol> <li>\u5728 <code>apps</code>\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u540d\u5373\u4e3a\u5e94\u7528\u540d\uff0c\u4f8b\u5982 <code>myapp</code>:</li> </ol> <pre><code>mkdir apps/myapp &amp;&amp; cd apps/myapp\n</code></pre> <ol> <li>\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa <code>Makefile</code>\u6587\u4ef6\uff0c\u9700\u8981\u5305\u62ec <code>build</code>\u548c <code>clean</code>\u4e24\u4e2a\u76ee\u6807\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</li> </ol> <pre><code>all: build\n\nbuild:\n    @echo \"Building myapp with arch $(ARCH)\"\n\nclean:\n    @echo \"Cleaning myapp\"\n</code></pre> <ol> <li>\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa <code>testcase_list</code>\u6587\u4ef6\uff0c\u5217\u51fa\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u5b57\uff0c\u6bcf\u884c\u4e00\u4e2a\uff0c\u4f8b\u5982\uff1a</li> </ol> <pre><code>hello\n</code></pre> <ol> <li>\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa <code>hello.c</code>\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</li> </ol> <pre><code>#include \"unistd.h\"\n\nint main()\n{\n    char msg[] = \"Hello, World!\\n\";\n    write(1, msg, sizeof(msg));\n    return 0;\n}\n</code></pre> <ol> <li>\u5728 <code>Makefile</code>\u4e2d\u6dfb\u52a0\u7f16\u8bd1 <code>hello</code>\u7684\u76ee\u6807\uff0c\u4f8b\u5982\uff1a</li> </ol> <pre><code> CC = $(ARCH)-linux-musl-gcc\n CFLAGS = -static\n\n TARGET_DIR = build/$(ARCH)\n TARGET = $(TARGET_DIR)/hello\n\n all: build\n\n prepare:\n     mkdir -p $(TARGET_DIR)\n\n build: prepare $(TARGET)\n\n $(TARGET): hello.c\n     $(CC) $(CFLAGS) -o $@ $^\n\n clean:\n     rm -f $(TARGET)\n\n .PHONY: all prepare build clean\n</code></pre> <p>\u5173\u4e8eMakefile\u7684\u51e0\u70b9\u63d0\u793a\uff1a</p> <ul> <li>\u7f16\u8bd1\u7528\u6237\u7a0b\u5e8f\u65f6\uff0c\u4f1a\u6307\u5b9a<code>ARCH</code>\u53d8\u91cf\uff0c\u9700\u8981\u4ee5\u6b64\u8003\u8651\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u9009\u62e9\uff1b</li> <li>\u9700\u8981\u63d0\u4f9b<code>build</code>\u76ee\u6807\uff0c\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\u9700\u8981\u653e\u5728<code>build/$(ARCH)</code>\u76ee\u5f55\u4e0b\uff1b</li> <li>\u9700\u8981\u63d0\u4f9b<code>clean</code>\u76ee\u6807\uff0c\u7528\u4e8e\u6e05\u7406\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\u3002</li> <li> <p>\u5982\u679c\u4f60\u5e0c\u671b\u62f7\u8d1d\u4e0a\u9762\u7684Makefile\u793a\u4f8b\uff0c\u9700\u8981\u6ce8\u610fMakefile\u4e2d\u7684\u7f29\u8fdb\u662f\u7528\u5236\u8868\u7b26\u800c\u4e0d\u662f\u7a7a\u683c\u3002</p> </li> <li> <p>\u5c1d\u8bd5\u7f16\u8bd1\u548c\u8fd0\u884c\u8be5\u5e94\u7528\uff0c\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff1a</p> </li> </ul> <pre><code>make ARCH=x86_64 AX_TESTCASE=myapp user_apps\nmake ARCH=x86_64 defconfig\nmake ARCH=x86_64 LOG=error AX_TESTCASE=myapp BLK=y NET=y ACCEL=n run\n</code></pre>"},{"location":"setup/customization/","title":"Starry \u7684\u81ea\u5b9a\u4e49\u914d\u7f6e","text":"<p>\u4ecb\u7ecd Starry \u652f\u6301\u7684 feature \u5185\u5bb9\uff0c\u5305\u62ec\u4e0d\u540c\u6587\u4ef6\u7cfb\u7edf\u3001\u4e0d\u540c\u603b\u7ebf\u7b49</p>"},{"location":"setup/env/","title":"\u5b9e\u9a8c\u73af\u5883\u914d\u7f6e","text":""},{"location":"setup/env/#docker","title":"\u5728 Docker \u4e0b\u8fd0\u884c","text":"<p>\u82e5\u9009\u62e9\u5728 Docker \u73af\u5883\u4e0b\u5f00\u53d1\uff0c\u8bf7\u6267\u884c\u5982\u4e0b\u6307\u4ee4</p> <pre><code>git clone git@github.com:oscomp/starry-next.git\ncd starry-next\n\n./scripts/get_deps.sh\ncd .arceos\ndocker build -t starry -f ./Dockerfile .\ncd ..\n\n# \u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6784\u5efa\u5bb9\u5668\ndocker run -it -v $(pwd):/starry -w /starry starry bash\n</code></pre> <p>Note</p> <p>\u82e5 Docker pull \u6216 Docker build \u51fa\u73b0\u8d85\u65f6\u7b49\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u7f3a\u4e4f\u4ee3\u7406\u4e0a\u7f51\u7684\u914d\u7f6e\u3002\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u8d44\u6599\uff1a</p> <pre><code>Docker pull\n    1. \u4f7f\u7528\u4ee3\u7406\uff1ahttps://docs.docker.com/reference/cli/docker/image/pull/#proxy-configuration\n    2. \u6362\u7528\u53ef\u7528\u56fd\u5185\u6e90\uff08\u81ea\u884c\u67e5\u627e\uff09\nDocker build: \u4f7f\u7528\u4ee3\u7406 https://docs.docker.com/engine/cli/proxy/#build-with-a-proxy-configuration\nDocker run: \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7406\u9009\u9879\uff0c\u76f8\u5173\u64cd\u4f5c\u4e0e build \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u81ea\u884c\u67e5\u9605\u8d44\u6599\n</code></pre> <p>Dockerfile \u5185\u5bb9\u8bf7\u53c2\u8003 ArceOS-Dockerfile \u3002</p>"},{"location":"setup/env/#_2","title":"\u672c\u5730\u73af\u5883\u914d\u7f6e","text":""},{"location":"setup/env/#rust","title":"\u914d\u7f6e Rust \u5f00\u53d1\u73af\u5883","text":"<p>\u9996\u5148\u5b89\u88c5 Rust \u7248\u672c\u7ba1\u7406\u5668 rustup \u548c Rust \u5305\u7ba1\u7406\u5668 cargo\uff0c\u8fd9\u91cc\u6211\u4eec\u7528\u5b98\u65b9\u7684\u5b89\u88c5\u811a\u672c\u6765\u5b89\u88c5\uff1a</p> <pre><code>curl https://sh.rustup.rs -sSf | sh\n</code></pre> <p>\u5982\u679c\u901a\u8fc7\u5b98\u65b9\u7684\u811a\u672c\u4e0b\u8f7d\u5931\u8d25\u4e86\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u8f93\u5165 https://sh.rustup.rs \u6765\u4e0b\u8f7d\u811a\u672c\uff0c\u5728\u672c\u5730\u8fd0\u884c\u5373\u53ef\u3002</p> <p>\u53ef\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5 rustc \u7684 nightly \u7248\u672c\u3002</p> <pre><code>rustup install nightly\n</code></pre> <p>\u518d\u6b21\u786e\u8ba4\u4e00\u4e0b\u6211\u4eec\u5b89\u88c5\u4e86\u6b63\u786e\u7684 rustc \u7248\u672c\uff08\u4ee5\u4e0b\u4e3a\u4e00\u4e2a\u793a\u4f8b\uff09\uff1a</p> <pre><code>rustc --version\nrustc 1.83.0 (90b35a623 2024-11-26)\n</code></pre>"},{"location":"setup/env/#_3","title":"\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56","text":"<p>Note</p> <p>\u4ee5\u4e0b\u547d\u4ee4\u90fd\u5047\u8bbe\u6b64\u65f6\u4f4d\u4e8e\u6839\u76ee\u5f55 <code>/</code> \u4e0b\uff0c\u5426\u5219\u9700\u8981\u4fee\u6539\u9ad8\u4eae\u884c</p> <pre><code>echo \"deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main\" | sudo tee -a /etc/apt/sources.list\nwget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc\nsudo apt-get update\nsudo apt-get install -y --no-install-recommends libclang-19-dev wget make python3 \\\n        xz-utils python3-venv ninja-build bzip2 meson cmake dosfstools build-essential \\\n        pkg-config libglib2.0-dev git libslirp-dev  \\\nsudo rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"setup/env/#qemu","title":"\u5b89\u88c5 QEMU","text":"<pre><code># \u5b89\u88c5\u4e0e QEMU \u76f8\u5173\u7684\u8f6f\u4ef6\u5305\nwget https://download.qemu.org/qemu-9.2.1.tar.xz\ntar xf qemu-9.2.1.tar.xz \\\n    &amp;&amp; cd qemu-9.2.1 \\\n    &amp;&amp; ./configure --prefix=/qemu-bin-9.2.1 \\\n        --target-list=loongarch64-softmmu,riscv64-softmmu,aarch64-softmmu,x86_64-softmmu,loongarch64-linux-user,riscv64-linux-user,aarch64-linux-user,x86_64-linux-user \\\n        --enable-gcov --enable-debug --enable-slirp \\\n    &amp;&amp; make -j$(nproc) \\\n    &amp;&amp; make install\n# export PATH for QEMU\n# export PATH=\"/qemu-bin-9.2.1/bin:$PATH\"\n# \u6d4b\u8bd5\u662f\u5426\u6b63\u786e\u5b89\u88c5\nqemu-system-x86_64 --version\n\nrm -rf qemu-9.2.1 qemu-9.2.1.tar.xz\n</code></pre>"},{"location":"setup/env/#musl-cross","title":"\u5b89\u88c5 musl cross \u5de5\u5177\u94fe","text":"<pre><code>wget https://musl.cc/aarch64-linux-musl-cross.tgz\nwget https://musl.cc/riscv64-linux-musl-cross.tgz\nwget https://musl.cc/x86_64-linux-musl-cross.tgz\nwget https://github.com/LoongsonLab/oscomp-toolchains-for-oskernel/releases/download/loongarch64-linux-musl-cross-gcc-13.2.0/loongarch64-linux-musl-cross.tgz\n# install\ntar zxf aarch64-linux-musl-cross.tgz\ntar zxf riscv64-linux-musl-cross.tgz\ntar zxf x86_64-linux-musl-cross.tgz\ntar zxf loongarch64-linux-musl-cross.tgz\n\nrm -f *.tgz\n\n# export PATH for cross compile toolchain\n# export PATH=\"/x86_64-linux-musl-cross/bin:/aarch64-linux-musl-cross/bin:/riscv64-linux-musl-cross/bin:/loongarch64-linux-musl-cross/bin:$PATH\"\n</code></pre>"},{"location":"setup/env/#_4","title":"\u914d\u7f6e\u4ed3\u5e93\u5185\u73af\u5883","text":"<pre><code># \u82e5\u8fd8\u672a\u62c9\u53d6 Starry Next \u4ed3\u5e93\ngit clone git@github.com:oscomp/starry-next.git\ncd starry-next\n\n# \u62c9\u53d6\u57fa\u5ea7\u4ed3\u5e93 ArceOS\n./scripts/get_deps.sh\n\n# \u914d\u7f6e Rust \u73af\u5883\ncd .arceos\nrustup target add x86_64-unknown-linux-musl\nrustup target add aarch64-unknown-linux-musl\nrustup target add riscv64gc-unknown-linux-musl\nrustup target add x86_64-unknown-none  \nrustup target add riscv64gc-unknown-none-elf\nrustup target add aarch64-unknown-none\nrustup target add aarch64-unknown-none-softfloat\nrustup component add llvm-tools-preview\ncargo install cargo-binutils axconfig-gen\ncd ..\n</code></pre>"},{"location":"setup/oscomp/","title":"\u8fd0\u884c OS \u6bd4\u8d5b\u6d4b\u4f8b","text":""},{"location":"setup/oscomp/#os_1","title":"OS \u6bd4\u8d5b\u4ecb\u7ecd","text":"<p>\u672c\u7ae0\u8282\u6240\u63d0\u5230\u7684\u6bd4\u8d5b\u662f\u6307\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u5185\u6838\u5b9e\u73b0\u8d5b\uff0c\u7b80\u79f0 OS \u6bd4\u8d5b\u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u3002\u8be5\u8d5b\u9053\u4e3b\u8981\u8003\u5bdf\u5185\u6838\u7684\u529f\u80fd\u5b9e\u73b0\uff0c\u8981\u6c42\u5185\u6838\u8fd0\u884c\u7ed9\u5b9a\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u6839\u636e\u901a\u8fc7\u6d4b\u4f8b\u7684\u6570\u91cf\u83b7\u5f97\u76f8\u5e94\u7684\u5206\u6570\u3002</p>"},{"location":"setup/oscomp/#_1","title":"\u6d4b\u8bd5\u73af\u5883\u51c6\u5907","text":"<p>\u4e3a\u4e86\u8fd0\u884c\u6bd4\u8d5b\u6d4b\u4f8b\uff0c\u6211\u4eec\u9700\u8981\u51c6\u5907\u5f00\u53d1\u73af\u5883\u548c\u6bd4\u8d5b\u6240\u7528\u7684\u6d4b\u4f8b\u955c\u50cf\u3002</p>"},{"location":"setup/oscomp/#_2","title":"\u51c6\u5907\u6d4b\u4f8b\u955c\u50cf","text":"<p>\u9884\u7f16\u8bd1\u597d\u7684\u6d4b\u4f8b\u955c\u50cf\u8be6\u89c1 testsuit-for-oskernel\u3002\u5176\u4e2d\u5305\u62ec\u4e86\u56db\u79cd\u6307\u4ee4\u67b6\u6784\u3002\u5f53\u8fd0\u884c\u65f6\u5982\u679c\u6ca1\u6709\u68c0\u6d4b\u5230\u5bf9\u5e94\u7684\u955c\u50cf\uff0c\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e0b\u8f7d\u3002</p> <p>\u53e6\u5916\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6307\u4ee4\uff0c\u63d0\u524d\u5c06\u6d4b\u4f8b\u955c\u50cf\u4e0b\u8f7d\u5230\u672c\u5730\uff1a</p> <pre><code>wget https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-aarch64.img.gz\nwget https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-loongarch64.img.gz\nwget https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-riscv64.img.gz\nwget https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-x86_64.img.gz\n\ngunzip sdcard-aarch64.img.gz\ngunzip sdcard-loongarch64.img.gz\ngunzip sdcard-riscv64.img.gz\ngunzip sdcard-x86_64.img.gz\n</code></pre>"},{"location":"setup/oscomp/#_3","title":"\u51c6\u5907\u5f00\u53d1\u73af\u5883","text":"<p>\u8bf7\u53c2\u8003 \u5b9e\u9a8c\u73af\u5883\u914d\u7f6e \u5b8c\u6210\u5f00\u53d1\u73af\u5883\u7684\u914d\u7f6e\u3002</p> <p>\u53e6\u5916\u4e5f\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u6307\u4ee4\u62c9\u53d6\u8d5b\u4e8b\u8bc4\u6d4b\u73af\u5883\u955c\u50cf\u5e76\u4e14\u542f\u52a8\u5bb9\u5668\uff08\u548c\u672c\u5730\u73af\u5883\u4e8c\u8005\u9009\u5176\u4e00\u5373\u53ef\uff09</p> <pre><code>docker pull docker.educg.net/cg/os-contest:20250226\n\ndocker run --rm --privileged -w /work -v $(pwd):/work docker.educg.net/cg/os-contest:20250226 bin/bash\n</code></pre>"},{"location":"setup/oscomp/#os_2","title":"\u672c\u5730\u8fd0\u884c OS \u6bd4\u8d5b\u6d4b\u4f8b","text":"<p>\u5728\u5f53\u524d\u7684 Starry \u4e3b\u7ebf\u4ee3\u7801\u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u6307\u4ee4\uff1a</p> <pre><code>./scripts/get_deps.sh\n\n# \u6267\u884c RISC-V \u67b6\u6784\u7684 OS \u6bd4\u8d5b\u6d4b\u4f8b\nmake oscomp_run ARCH=riscv64\n\n# \u6267\u884c Loongarch64 \u67b6\u6784\u7684 OS \u6bd4\u8d5b\u6d4b\u4f8b\nmake oscomp_run ARCH=loongarch64\n</code></pre> <p>\u5373\u53ef\u5b8c\u6210 OS \u6bd4\u8d5b\u6d4b\u4f8b\u7684\u8fd0\u884c\u3002</p>"},{"location":"setup/oscomp/#os_3","title":"\u5728\u8d5b\u4e8b\u5e73\u53f0\u4e0a\u8fd0\u884c OS \u6bd4\u8d5b\u6d4b\u4f8b","text":""},{"location":"setup/oscomp/#os_4","title":"OS \u8d5b\u4e8b\u73af\u5883\u4ecb\u7ecd","text":"<p>\u6211\u4eec\u4ee5 2025 \u5e74\u8d5b\u4e8b\u4e3a\u4f8b\u4ecb\u7ecd\u521d\u8d5b\u7684\u6267\u884c\u73af\u5883\u548c\u8bc4\u6d4b\u76f8\u5173\u6d41\u7a0b\u3002</p>"},{"location":"setup/oscomp/#_4","title":"\u8bc4\u6d4b\u73af\u5883","text":"<p>\u6267\u884c\u73af\u5883\u7531 Docker \u6784\u5efa\u800c\u6210\uff0c\u76f8\u5173\u7684 dockerfile \u53ef\u89c1\u8be5\u94fe\u63a5\u3002\u8be5\u6587\u6863\u64b0\u5199\u65f6\u6240\u63cf\u8ff0\u7684\u73af\u5883\u5bf9\u5e94\u5982\u4e0b\uff1a</p> <ul> <li>ArceOS\uff1acommit</li> <li>Starry-Next\uff1acommit</li> </ul> <p>docker \u955c\u50cf\u5b9e\u4f8b\u4e3a docker.educg.net/cg/os-contest:20250214\u3002</p>"},{"location":"setup/oscomp/#_5","title":"\u8bc4\u6d4b\u7528\u4f8b","text":"<p>\u8bc4\u6d4b\u7528\u4f8b\u6e90\u7801\u4e3a\uff1ahttps://github.com/oscomp/testsuits-for-oskernel/tree/pre-2025\u3002\u6309\u7167 README \u8fdb\u884c\u7f16\u8bd1\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230 sdcard \u6587\u4ef6\u5939\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>sdcard\n\u251c\u2500\u2500 loongarch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glibc\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 musl\n\u2514\u2500\u2500 riscv\n    \u251c\u2500\u2500 glibc\n    \u2514\u2500\u2500 musl\n</code></pre> <p>\u5176\u4e2d loongarch64 \u548c riscv64 \u4f1a\u5728\u5f00\u59cb\u8bc4\u6d4b\u4e4b\u540e\u5206\u522b\u538b\u7f29\u4e3a sdcard-la.img \u548c sdcard-rv.img \u62f7\u8d1d\u5230\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u8fdb\u884c\u8bc4\u6d4b\u3002\u538b\u7f29\u6307\u4ee4\u4e3a\uff1a</p> <pre><code>dd if=/dev/zero of=sdcard-rv.img count=128 bs=1M\nmkfs.ext4 sdcard-rv.img\nmkdir -p mnt\nmount sdcard-rv.img mnt\ncp -rL sdcard/riscv/* mnt\numount mnt\ngzip sdcard-rv.img\n\ndd if=/dev/zero of=sdcard-la.img count=128 bs=1M\nmkfs.ext4 sdcard-la.img\nmkdir -p mnt\nmount sdcard-la.img mnt\ncp -rL sdcard/riscv/* mnt\numount mnt\ngzip sdcard-la.img\n</code></pre>"},{"location":"setup/oscomp/#_6","title":"\u8bc4\u6d4b\u6d41\u7a0b","text":"<p> \u5f53\u5728\u6bd4\u8d5b\u5e73\u53f0\u4e0a\u63d0\u4ea4\u4e86\u5185\u6838\u4ee3\u7801\u6240\u5728\u7684\u4ed3\u5e93 URL \u548c\u5206\u652f\uff08\u70b9\u51fb\u4e0a\u56fe\u7684\u63d0\u4ea4\u6309\u94ae\u4e4b\u540e)\uff0c\u5e73\u53f0\u4f1a\u6267\u884c\u5982\u4e0b\u6d41\u7a0b\u5f00\u59cb\u8fdb\u884c\u8bc4\u6d4b\uff1a</p> <ol> <li> <p>\u62c9\u53d6\u5185\u6838\u4ed3\u5e93\u7684\u4ee3\u7801</p> </li> <li> <p>\u81ea\u52a8\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u6267\u884c<code>make all</code>\u547d\u4ee4\uff0c\u671f\u671b\u751f\u6210 kernel-rv \u548c kernel-la \u4e24\u4e2a\u6587\u4ef6\uff0c\u5206\u522b\u662f\u5185\u6838\u5728 riscv64 \u67b6\u6784\u548c loongarch64 \u67b6\u6784\u4e0b\u7f16\u8bd1\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> </li> <li> <p>\u8bc4\u6d4b\u673a\u4f1a\u5c06\u6d4b\u4f8b\u6240\u6253\u5305\u6210\u7684\u955c\u50cf\uff08sdcard-rv.img \u548c sdcard-la.img\uff09\u62f7\u8d1d\u5230\u6839\u76ee\u5f55\u4e0b\uff0cSD \u5361\u955c\u50cf\u4e3a ext4 \u6587\u4ef6\u7cfb\u7edf\u3002\u5728 SD \u5361\u955c\u50cf\u7684\u6839\u76ee\u5f55\u91cc\u5305\u542b\u82e5\u5e72\u4e2a\u9884\u5148\u7f16\u8bd1\u597d\u7684 ELF \u53ef\u6267\u884c\u6587\u4ef6\uff08\u4ee5\u4e0b\u7b80\u79f0\u6d4b\u8bd5\u70b9\uff09\u3002</p> </li> <li> <p>\u542f\u52a8 QEMU\uff0c\u5f00\u59cb\u8fd0\u884c\u5185\u6838\u5e76\u4e14\u8bfb\u53d6 SD \u5361\u955c\u50cf\u8fdb\u884c\u6d4b\u8bd5\u3002\u8fd0\u884c\u6307\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>qemu-system-riscv64 -machine virt -kernel ./kernel-rv -m 2G -nographic -smp 2 -bios default -drive file=sdcard-rv.img,if=none,format=raw,id=x0 \\\n                    -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0 -no-reboot -device virtio-net-device,netdev=net -netdev user,id=net \\\n                    -rtc base=utc \\\n                    -drive file=disk.img,if=none,format=raw,id=x1 -device virtio-blk-device,drive=x1,bus=virtio-mmio-bus.1\n\nqemu-system-loongarch64 -m 1G -smp 1 -kernel ./kernel-la -device virtio-blk-pci,drive=disk0 -drive id=disk0,if=none,format=raw,file=sdcard-la.img -no-reboot -device virtio-net-pci,netdev=net0 -netdev user,id=net0 -nographic -rtc base=utc \\\n                        -drive file=disk-la.img,if=none,format=raw,id=x1 -device virtio-blk-pci,drive=x1\n</code></pre> </li> <li> <p>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u6267\u884c\u5b8c\u6240\u6709\u6d4b\u8bd5\u70b9\u540e\uff0c\u5e94\u8be5\u4e3b\u52a8\u8c03\u7528\u5173\u673a\u547d\u4ee4\uff0c\u8bc4\u6d4b\u673a\u4f1a\u5728\u68c0\u6d4b\u5230 QEMU \u8fdb\u7a0b\u9000\u51fa\u540e\u8fdb\u884c\u6253\u5206\u3002</p> </li> </ol> <p>\u5173\u4e8e\u4f5c\u54c1\u7684\u8bc4\u5206\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u5728\u542f\u52a8\u540e\u9700\u8981\u4e3b\u52a8\u626b\u63cfSD\u5361\uff0c\u5e76\u4f9d\u6b21\u8fd0\u884c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u5c06\u5176\u8fd0\u884c\u7ed3\u679c\u8f93\u51fa\u5230\u4e32\u53e3\u4e0a\uff0c\u8bc4\u6d4b\u7cfb\u7edf\u4f1a\u6839\u636e\u60a8\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e32\u53e3\u8f93\u51fa\u5185\u5bb9\u8fdb\u884c\u8bc4\u5206\u3002</li> <li>\u9009\u624b\u53ef\u4ee5\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b8c\u6210\u5ea6\u81ea\u7531\u9009\u62e9\u8df3\u8fc7\u5176\u4e2d\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u672a\u88ab\u8fd0\u884c\u7684\u6d4b\u8bd5\u70b9\u5c06\u4e0d\u8ba1\u5206\u3002</li> <li>\u6d4b\u8bd5\u70b9\u7684\u6267\u884c\u987a\u5e8f\u4e0e\u8bc4\u5206\u65e0\u5173\uff0c\u591a\u4e2a\u6d4b\u8bd5\u70b9\u53ea\u80fd\u4e32\u884c\u8fd0\u884c\uff0c\u4e0d\u53ef\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u6d4b\u8bd5\u70b9\u3002</li> <li>\u5177\u4f53\u6d4b\u8bd5\u70b9\u7684\u6570\u91cf\u3001\u5185\u5bb9\u4ee5\u53ca\u7f16\u8bd1\u65b9\u5f0f\u5c06\u5728\u8d5b\u9898\u516c\u5e03\u65f6\u540c\u6b65\u53d1\u5e03\uff0c2024 \u5e74\u7684\u521d\u8d5b\u6d4b\u4f8b\u8be6\u89c1\u8fd9\u91cc</li> </ul>"},{"location":"setup/oscomp/#_7","title":"\u7279\u6b8a\u6ce8\u610f\u70b9","text":"<ul> <li> <p>\u9664\u53bb\u62c9\u53d6\u4ee3\u6d4b\u4ee3\u7801\u4e4b\u540e\uff0c\u5e94\u5f53\u8ba4\u4e3a\u8bc4\u6d4b\u673a\u65e0\u6cd5\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\u3002\u4efb\u4f55\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\u5c24\u5176\u662f\u56fd\u5916\u7f51\u7ad9\u7684\u64cd\u4f5c\u5f88\u5bb9\u6613\u5bfc\u81f4\u7f16\u8bd1\u6216\u8fd0\u884c\u8d85\u65f6\u800c\u65e0\u6cd5\u5b8c\u6210\u8bc4\u6d4b\u3002</p> </li> <li> <p>\u8bc4\u6d4b\u673a\u5728\u6784\u5efa\u524d\u4f1a\u9ed8\u8ba4\u65e0\u89c6\u9879\u76ee\u7684\u6240\u6709\u9690\u85cf\u76ee\u5f55\uff08\u4ee5 <code>.</code> \u5f00\u5934\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff09\uff0c\u82e5\u9700\u8981\u4f7f\u7528\u8fd9\u90e8\u5206\u7684\u914d\u7f6e\uff08\u5982 <code>.cargo</code>\uff09\u9700\u8981\u81ea\u8eab\u624b\u52a8\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u914d\u7f6e\uff08\u5982\u5c06<code>.cargo</code>\u76ee\u5f55\u4e0b\u6240\u6709\u5185\u5bb9\u4fdd\u5b58\u5728<code>cargo_temp</code>\u76ee\u5f55\u4e0b\uff0c\u5e76\u5728\u6784\u5efa\u65f6\u62f7\u8d1d<code>cargo_temp</code>\u5230<code>.cargo</code>\u76ee\u5f55\u4e0b\u3002</p> </li> </ul>"},{"location":"setup/oscomp/#starry","title":"Starry \u5bf9\u8bc4\u6d4b\u73af\u5883\u7684\u9002\u914d","text":"<p>\u4e3a\u4e86\u80fd\u591f\u5728\u8bc4\u6d4b\u73af\u5883\u4e0a\u5bf9 Starry \u8fdb\u884c\u6d4b\u8bd5\uff0c\u9700\u8981\u8fdb\u884c\u76f8\u5173\u7684\u9002\u914d\u3002\u9002\u914d\u540e\u7684\u4ee3\u7801\u8be6\u89c1 starry-next-gitlab\u3002\u60a8\u53ef\u4ee5\u76f4\u63a5\u63d0\u4ea4\u8fd9\u4efd\u4ee3\u7801\uff0c\u8fdb\u884c\u5e73\u53f0\u8bc4\u6d4b\u7684\u4f53\u9a8c\u3002</p> <p>Info</p> <p>\u8bf7\u6ce8\u610f\uff1a\u8fd9\u4efd\u4ee3\u7801\u4ec5\u662f demo\uff0c\u56e0\u6b64\u4ec5\u6d4b\u8bd5\u4e86\u6700\u7b80\u5355\u7684\u51e0\u4e2a\u6d4b\u4f8b\uff0c\u5e76\u4e0d\u4e0e Starry \u7684\u4e3b\u7ebf\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>Warning</p> <p>\u63a5\u4e0b\u6765\u662f\u5bf9\u9002\u914d\u539f\u7406\u7684\u4ecb\u7ecd\uff0c\u5982\u679c\u540c\u5b66\u4eec\u5bf9\u5b83\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u7ee7\u7eed\u9605\u8bfb\u3002\u8fd9\u6709\u52a9\u4e8e\u5927\u5bb6\u5c06\u81ea\u5df1\u7684\u5185\u6838\u9002\u914d\u5230\u8bc4\u6d4b\u73af\u5883\u4e0a\u3002\u5426\u5219\u53ef\u4ee5\u8df3\u8fc7\u672c\u7ae0\u8282\u5269\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u3002</p> <p>\u76f8\u5173\u9002\u914d\u5de5\u4f5c\u5982\u4e0b\uff1a</p>"},{"location":"setup/oscomp/#_8","title":"\u672c\u5730\u5316\u4f9d\u8d56\u5904\u7406","text":"<p>\u6211\u4eec\u9ed8\u8ba4\u8bc4\u6d4b\u673a\u65e0\u6cd5\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\uff0c\u56e0\u6b64\u9700\u8981\u4fdd\u8bc1\u6574\u4e2a\u5185\u6838\u6784\u5efa\u8fc7\u7a0b\u9700\u8981\u5b8c\u5168\u8131\u79bb\u7f51\u7edc\u8fdb\u884c\u3002\u4e3a\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a</p> <ul> <li> <p>cargo \u4f9d\u8d56\u672c\u5730\u5316\uff1a\u901a\u8fc7\u6267\u884c <code>cargo vendor</code> \u57fa\u4e8e\u5f53\u524d\u7684 <code>Cargo.lock</code> \u6587\u4ef6\u9884\u5148\u5c06\u6240\u6709\u9700\u8981\u7684\u4f9d\u8d56\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\u7684 vendor \u6587\u4ef6\u5939\u4e0b\u3002\u5f53\u6307\u4ee4\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u5728\u7ec8\u7aef\u8f93\u51fa\u4e00\u7cfb\u5217 patch \u4fe1\u606f\uff0c\u5982\u4e0b\u3002</p> <pre><code>[source.crates-io]\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/Azure-stars/lwext4_rust.git\"]\ngit = \"https://github.com/Azure-stars/lwext4_rust.git\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/arceos-org/allocator.git?tag=v0.1.1\"]\ngit = \"https://github.com/arceos-org/allocator.git\"\ntag = \"v0.1.1\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0\"]\ngit = \"https://github.com/arceos-org/axdriver_crates.git\"\ntag = \"v0.1.0\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/arceos-org/linked_list.git?tag=v0.1.0\"]\ngit = \"https://github.com/arceos-org/linked_list.git\"\ntag = \"v0.1.0\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/arceos-org/scheduler.git?tag=v0.1.0\"]\ngit = \"https://github.com/arceos-org/scheduler.git\"\ntag = \"v0.1.0\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/jasonwhite/syscalls.git?rev=92624de\"]\ngit = \"https://github.com/jasonwhite/syscalls.git\"\nrev = \"92624de\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/rafalh/rust-fatfs?rev=85f06e0\"]\ngit = \"https://github.com/rafalh/rust-fatfs\"\nrev = \"85f06e0\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/rcore-os/smoltcp.git?rev=2ade274\"]\ngit = \"https://github.com/rcore-os/smoltcp.git\"\nrev = \"2ade274\"\nreplace-with = \"vendored-sources\"\n\n[source.\"git+https://github.com/yfblock/page_table_multiarch.git?rev=c8a13b0\"]\ngit = \"https://github.com/yfblock/page_table_multiarch.git\"\nrev = \"c8a13b0\"\nreplace-with = \"vendored-sources\"\n\n[source.vendored-sources]\ndirectory = \"vendor\"\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u90e8\u5206\u7684 patch \u4fe1\u606f\u6dfb\u52a0\u5230 <code>.cargo/config.toml</code>\u4e2d\uff0c\u7528\u4e8e\u6307\u793a cargo \u5728\u6784\u5efa\u65f6\u5229\u7528\u672c\u5730 vendor \u6587\u4ef6\u5939\u8fdb\u884c\u6784\u5efa\uff0c\u800c\u4e0d\u518d\u9700\u8981\u901a\u8fc7 cargo cache \u6216\u4e91\u7aef\u4e0b\u8f7d\u3002\u76f8\u5173\u6587\u6863\u8be6\u89c1Configuration\u3002</p> </li> <li> <p>\u4f7f\u7528\u8bc4\u6d4b\u73af\u5883\u6307\u5b9a\u7684\u5de5\u5177\u94fe\uff1a</p> <p>\u6211\u4eec\u9700\u8981\u6307\u5b9a\u6784\u5efa\u5de5\u5177\u94fe\u4e3a\u8bc4\u6d4b\u955c\u50cf\u4e2d\u63d0\u4f9b\u7684\u5de5\u5177\u94fe\uff0c\u4ece\u800c\u907f\u514d\u4e0b\u8f7d\u65b0\u7684\u5de5\u5177\u94fe\u5bfc\u81f4\u7684\u6784\u5efa\u8d85\u65f6\u95ee\u9898\u3002  \u76ee\u524d\u955c\u50cf\u4e2d\u7684\u5de5\u5177\u94fe\u4e3a <code>nightly-2024-02-03</code>\u4e0e<code>nightly-2025-01-18</code>\u4e24\u7c7b\uff0c\u5206\u522b\u9700\u8981 rust edition 2021 \u548c rust editon 2024\u3002\u622a\u6b62\u8be5\u6587\u6863\u64b0\u5199\u65f6\uff0cStarry \u5c1a\u672a\u8fc1\u79fb\u5230 rust edition 2024\uff0c\u56e0\u6b64\u5148\u9002\u914d <code>nightly-2024-02-03</code>\u5de5\u5177\u94fe\u7248\u672c\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u5c06 Starry \u8fc1\u79fb\u5230 edition 2024\u3002 rustup \u5728\u6784\u5efa\u65f6\u82e5\u672a\u663e\u5f0f\u6307\u5b9a\u5f53\u524d\u7684 toolchain\uff0c\u4f1a\u81ea\u52a8\u5c1d\u8bd5\u53bb\u540c\u6b65\u6700\u65b0\u7684\u5de5\u5177\u94fe\uff0c\u51fa\u73b0\u5982\u4e0b\u8f93\u51fa\uff0c\u4ece\u800c\u5bfc\u81f4\u6784\u5efa\u8d85\u65f6\u3002</p> <pre><code>info: syncing channel updates for 'nightly-2024-02-03-x86_64-unknown-linux-gnu'   \n</code></pre> <p>\u4e3a\u4e86\u89e3\u51b3\u5de5\u5177\u94fe\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6307\u5b9a\u5de5\u5177\u94fe\uff0c\u76f8\u5173\u6587\u6863\u8be6\u89c1 Override\u3002\u6211\u4eec\u9009\u62e9\u624b\u52a8\u6307\u5b9a <code>RUSTUP_TOOLCHAIN</code> \u73af\u5883\u53d8\u91cf\u3002\u56e0\u6b64\u6211\u4eec\u5728 Makefile \u505a\u4e86\u5982\u4e0b\u8bbe\u7f6e\uff1a</p> <pre><code>all:\n    RUSTUP_TOOLCHAIN=nightly-2025-01-18 $(MAKE) test_build ARCH=riscv64 AX_TESTCASE=oscomp BUS=mmio  FEATURES=lwext4_rs \n    RUSTUP_TOOLCHAIN=nightly-2025-01-18 $(MAKE) test_build ARCH=loongarch64 AX_TESTCASE=oscomp FEATURES=lwext4_rs\n</code></pre> </li> </ul>"},{"location":"setup/oscomp/#_9","title":"\u9690\u85cf\u76ee\u5f55\u5904\u7406","text":"<p>\u9690\u85cf\u76ee\u5f55\u7684\u5904\u7406\u5728 starry-next \u4e2d\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff1a<code>.cargo</code>\u4e0e<code>.arceos</code>\u5904\u7406</p> <ul> <li> <p><code>.cargo</code>\u5904\u7406\uff1a\u5728 starry-next \u4e2d\u9700\u8981\u6307\u5b9a\u4f9d\u8d56\u7684 patch \u4fe1\u606f\uff08\u5305\u62ec arceos \u57fa\u5ea7\u548c vendor \u4fe1\u606f\uff09\uff0c\u8fd9\u4e9b\u9700\u8981\u914d\u7f6e\u5728 <code>.cargo/config.toml</code>\u4e2d\u3002\u5728 starry-next \u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6784\u9020<code>.cargo/config.toml</code></p> <ul> <li>\u5728<code>./scripts/config.toml.temp</code>\u4e2d\u4e66\u5199 <code>config.toml</code>\u6240\u9700\u8981\u7684\u5185\u5bb9</li> <li>\u6267\u884c<code>./scripts/set_ax_root.sh</code>\u521b\u5efa<code>.cargo</code>\u76ee\u5f55\u5e76\u5199\u5165<code>config.toml</code></li> </ul> <p>\u56e0\u6b64\u6211\u4eec\u63d0\u4ea4\u7684\u5185\u5bb9\u672c\u5c31\u4e0d\u5305\u62ec<code>.cargo</code>\u6587\u4ef6\u5939\uff0c\u65e0\u9700\u989d\u5916\u5904\u7406\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u597d<code>config.toml.temp</code>\u5373\u53ef\u3002</p> <p>Note</p> <p>\u5728\u672c\u5730\u5316\u4f9d\u8d56\u5904\u7406 \u4e2d\u8981\u6c42\u5c06 vendor \u4fe1\u606f\u52a0\u5165\u5230 <code>config.toml</code>\uff0c\u5728 Starry \u4e2d\u5e94\u5f53\u662f\u52a0\u5165\u5230 <code>./scripts/config.toml.temp</code>\u4e2d\uff0c\u8be6\u89c1config.toml.temp\u3002</p> </li> <li> <p><code>.arceos</code>\u5904\u7406\uff1aStarry \u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5185\u6838\uff0c\u800c\u662f\u4e00\u4e2a\u5185\u6838\u63d2\u4ef6\uff0c\u9700\u8981\u5728\u6784\u5efa\u65f6\u62c9\u53d6 arceos \u4ed3\u5e93\u4f5c\u4e3a\u5185\u6838\u57fa\u5ea7\uff0c\u5b8c\u6210\u6574\u4e2a\u7cfb\u7edf\u7684\u6784\u5efa\u3002\u7531\u4e8e\u6211\u4eec\u9ed8\u8ba4\u8bc4\u6d4b\u673a\u65e0\u6cd5\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\uff0c\u4e14\u65e0\u6cd5\u8bc6\u522b\u9690\u85cf\u6587\u4ef6\uff0c\u56e0\u6b64\u9700\u8981\u505a\u51fa\u5982\u4e0b\u9002\u914d\u3002</p> <ol> <li> <p>\u76f4\u63a5\u5c06 arceos \u7684\u76f8\u5173\u4ee3\u7801\u62c9\u53d6\u5230\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\uff0c\u4f5c\u4e3a\u9879\u76ee\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u63d0\u4ea4\uff0c\u800c\u4e0d\u518d\u662f\u901a\u8fc7 <code>.scripts/get_deps.sh</code>\u8fdb\u884c\u62c9\u53d6\u3002\u76f8\u5173\u4ee3\u7801\u8be6\u89c1arceos\u3002</p> <p>Info</p> <p>\u5728\u5c06\u6765\u53ef\u4ee5\u4e3a\u8fd9\u4e00\u6b65\u5199\u4e00\u4e2a\u81ea\u52a8\u5316\u811a\u672c\uff0c\u6bcf\u6b21\u63d0\u4ea4\u65f6\u81ea\u52a8\u540c\u6b65\u5bf9\u5e94\u7684 arceos \u4ee3\u7801\u5230\u6839\u76ee\u5f55\u4e0b</p> </li> <li> <p>\u539f\u6765\u9ed8\u8ba4\u7684\u5185\u6838\u57fa\u5ea7\u76ee\u5f55\u662f <code>.arceos</code>\uff0c\u9700\u8981\u6539\u4e3a\u975e\u9690\u85cf\u76ee\u5f55\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u9879\u76ee\u6784\u5efa\u65f6\u7684 <code>AX_ROOT</code> \u53d8\u91cf\u8fdb\u884c\u4fee\u6539\uff0c\u4ece <code>.arceos</code>\u4fee\u6539\u4e3a<code>arceos</code>\uff0c\u76f8\u5173\u4fee\u6539\u8be6\u89c1Makefile\u548cget_deps.sh\u3002</p> </li> </ol> </li> </ul>"},{"location":"setup/oscomp/#_10","title":"\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56","text":"<p>ArceOS \u6784\u9020\u8fc7\u7a0b\u9700\u8981<code>axconfig-gen</code>\u4f9d\u8d56\uff0c\u8be5\u5305\u9700\u8981\u7531<code>cargo install</code> \u4e0b\u8f7d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u4e0b\u8f7d\u5230\u672c\u5730\u3002\u5728\u8d5b\u4e8b\u4f7f\u7528\u7684 docker \u4e2d\u9700\u8981\u5c06 <code>axconfig-gen</code> \u7684\u53ef\u6267\u884c\u6587\u4ef6\u62f7\u8d1d\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u56e0\u6b64\u6709\u5982\u4e0b\u64cd\u4f5c\u3002</p> <pre><code># \u5728\u672c\u5730\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u5b89\u88c5\u8be5\u4f9d\u8d56\ncargo install --root . axconfig-gen\n\n# \u4e0b\u8f7d\u5b8c\u6bd5\u4e4b\u540e\uff0c\u4f1a\u5728\u6839\u76ee\u5f55\u4e0b\u751f\u6210 bin/axconfig-gen\n\n# \u5728 \u8d5b\u4e8b docker \u4e2d\u9700\u8981\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u52a0\u5165\u5230\u73af\u5883\u53d8\u91cf\uff0c\u8be6\u89c1 Makefile \u7684 test_build \u76ee\u6807\ncp bin/* ${CARGO_BIN_PATH}\n</code></pre>"},{"location":"setup/oscomp/#_11","title":"\u603b\u7ed3","text":"<p>\u4e3a\u4e86\u9002\u914d\u8bc4\u6d4b\u73af\u5883\uff0c\u9700\u8981\u505a\u51fa\u5982\u4e0b\u6539\u52a8\uff1a</p> <ol> <li>cargo vendor \u5e76\u6dfb\u52a0 patch \u4fe1\u606f\u5230 <code>config.toml.temp</code>\uff08\u6ce8\u610f\u4e0d\u662f<code>.cargo/config.toml</code>\uff0c\u76f8\u5173\u539f\u56e0\u89c1\u9690\u85cf\u76ee\u5f55</li> <li>\u7528\u73af\u5883\u53d8\u91cf<code>RUSTUP_TOOLCHAIN</code>\u663e\u5f0f\u6307\u5b9a\u8bc4\u6d4b\u6240\u9700\u7684\u5de5\u5177\u94fe</li> <li>\u5c06 arceos \u4ee3\u7801\u76f4\u63a5\u4f5c\u4e3a\u9879\u76ee\u4e0b\u6587\u4ef6\u5939\u4e00\u5e76\u63d0\u4ea4\uff0c\u800c\u4e0d\u518d\u662f\u8fdc\u7a0b\u4e0b\u8f7d</li> <li>\u4fee\u6539 <code>AX_ROOT</code> \u53d8\u91cf\u4e3a <code>arceos</code></li> <li>\u5b89\u88c5\u4f9d\u8d56\u5e76\u62f7\u8d1d\u5230\u73af\u5883\u53d8\u91cf\u4e2d</li> </ol>"},{"location":"setup/oscomp/#docker","title":"Docker \u6a21\u62df\u8d5b\u4e8b\u8bc4\u6d4b\u73af\u5883","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Docker \u6765\u6a21\u62df\u8d5b\u4e8b\u7684\u8bc4\u6d4b\u73af\u5883\uff0c\u4ece\u800c\u5728\u672c\u5730\u5224\u65ad\u73af\u5883\u914d\u7f6e\u662f\u5426\u6709\u95ee\u9898\u3002</p> <p>\u5728\u9879\u76ee\u4ed3\u5e93\u76ee\u5f55\u4e0b\u6267\u884c\u5982\u4e0b\u6307\u4ee4\uff1a</p> <pre><code>docker pull docker.educg.net/cg/os-contest:20250226\n\ndocker run --rm --privileged -w /work -v $(pwd):/work docker.educg.net/cg/os-contest:20250226 bin/bash\n\n# \u5728 docker \u4e2d\nmake all\n</code></pre> <p>\u6267\u884c\u5b8c\u4e0a\u8ff0\u6307\u4ee4\u4e4b\u540e\uff0c\u4f1a\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u751f\u6210 kernel-la \u548c kernel-rv \u4e24\u4e2a\u6587\u4ef6\u3002\u63a5\u4e0b\u6765\u5728 docker \u5206\u522b\u6267\u884c\u5982\u4e0b\u4e24\u4e2a\u6307\u4ee4</p> <pre><code>qemu-system-riscv64 -machine virt -kernel ./kernel-rv -m 2G -nographic -smp 2 -bios default -drive file=sdcard-rv.img,if=none,format=raw,id=x0 \\\n                    -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0 -no-reboot -device virtio-net-device,netdev=net -netdev user,id=net \\\n                    -rtc base=utc\n\nqemu-system-loongarch64 -m 1G -smp 1 -kernel ./kernel-la -device virtio-blk-pci,drive=disk0 -drive id=disk0,if=none,format=raw,file=sdcard-la.img -no-reboot -device virtio-net-pci,netdev=net0 -netdev user,id=net0,hostfwd=tcp::5555-:5555,hostfwd=udp::5555-:5555 -nographic \n</code></pre> <p>\u5373\u53ef\u5728 Docker \u4e2d\u8fd0\u884c\u8d5b\u4e8b\u6d4b\u4f8b\u3002</p> <p>\u5f53\u5b8c\u6210\u4e86\u4e0a\u8ff0\u6d4b\u8bd5\uff0c\u5373\u53ef\u5c06\u672c\u5730\u4ee3\u7801\u63d0\u4ea4\u5230\u4ed3\u5e93\uff0c\u5e76\u6309\u7167\u4e0a\u8ff0\u6d41\u7a0b\u5728\u8d5b\u4e8b\u5e73\u53f0\u4e0a\u6d4b\u8bd5\u3002</p>"},{"location":"setup/qemu/","title":"QEMU \u5e73\u53f0\u8fd0\u884c","text":""}]}